// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: physical/raft/types.proto

package raft

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// OpType is the Operation type
	OpType uint32 `protobuf:"varint,1,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`
	// Flags is an opaque value, currently unused. Reserved.
	Flags uint64 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
	// Key that is being affected
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// Value is optional, corresponds to the key
	Value         []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogOperation) Reset() {
	*x = LogOperation{}
	mi := &file_physical_raft_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogOperation) ProtoMessage() {}

func (x *LogOperation) ProtoReflect() protoreflect.Message {
	mi := &file_physical_raft_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogOperation.ProtoReflect.Descriptor instead.
func (*LogOperation) Descriptor() ([]byte, []int) {
	return file_physical_raft_types_proto_rawDescGZIP(), []int{0}
}

func (x *LogOperation) GetOpType() uint32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *LogOperation) GetFlags() uint64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *LogOperation) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LogOperation) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type LogData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operations    []*LogOperation        `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogData) Reset() {
	*x = LogData{}
	mi := &file_physical_raft_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogData) ProtoMessage() {}

func (x *LogData) ProtoReflect() protoreflect.Message {
	mi := &file_physical_raft_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogData.ProtoReflect.Descriptor instead.
func (*LogData) Descriptor() ([]byte, []int) {
	return file_physical_raft_types_proto_rawDescGZIP(), []int{1}
}

func (x *LogData) GetOperations() []*LogOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type IndexValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Index         uint64                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexValue) Reset() {
	*x = IndexValue{}
	mi := &file_physical_raft_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexValue) ProtoMessage() {}

func (x *IndexValue) ProtoReflect() protoreflect.Message {
	mi := &file_physical_raft_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexValue.ProtoReflect.Descriptor instead.
func (*IndexValue) Descriptor() ([]byte, []int) {
	return file_physical_raft_types_proto_rawDescGZIP(), []int{2}
}

func (x *IndexValue) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *IndexValue) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Suffrage      int32                  `protobuf:"varint,1,opt,name=suffrage,proto3" json:"suffrage,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_physical_raft_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_physical_raft_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_physical_raft_types_proto_rawDescGZIP(), []int{3}
}

func (x *Server) GetSuffrage() int32 {
	if x != nil {
		return x.Suffrage
	}
	return 0
}

func (x *Server) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Server) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ConfigurationValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint64                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Servers       []*Server              `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigurationValue) Reset() {
	*x = ConfigurationValue{}
	mi := &file_physical_raft_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationValue) ProtoMessage() {}

func (x *ConfigurationValue) ProtoReflect() protoreflect.Message {
	mi := &file_physical_raft_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationValue.ProtoReflect.Descriptor instead.
func (*ConfigurationValue) Descriptor() ([]byte, []int) {
	return file_physical_raft_types_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigurationValue) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ConfigurationValue) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

type LocalNodeConfigValue struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DesiredSuffrage string                 `protobuf:"bytes,1,opt,name=desired_suffrage,json=desiredSuffrage,proto3" json:"desired_suffrage,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LocalNodeConfigValue) Reset() {
	*x = LocalNodeConfigValue{}
	mi := &file_physical_raft_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalNodeConfigValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalNodeConfigValue) ProtoMessage() {}

func (x *LocalNodeConfigValue) ProtoReflect() protoreflect.Message {
	mi := &file_physical_raft_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalNodeConfigValue.ProtoReflect.Descriptor instead.
func (*LocalNodeConfigValue) Descriptor() ([]byte, []int) {
	return file_physical_raft_types_proto_rawDescGZIP(), []int{5}
}

func (x *LocalNodeConfigValue) GetDesiredSuffrage() string {
	if x != nil {
		return x.DesiredSuffrage
	}
	return ""
}

var File_physical_raft_types_proto protoreflect.FileDescriptor

const file_physical_raft_types_proto_rawDesc = "" +
	"\n" +
	"\x19physical/raft/types.proto\x12\x04raft\"e\n" +
	"\fLogOperation\x12\x17\n" +
	"\aop_type\x18\x01 \x01(\rR\x06opType\x12\x14\n" +
	"\x05flags\x18\x02 \x01(\x04R\x05flags\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x04 \x01(\fR\x05value\"=\n" +
	"\aLogData\x122\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2\x12.raft.LogOperationR\n" +
	"operations\"6\n" +
	"\n" +
	"IndexValue\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x04R\x05index\"N\n" +
	"\x06Server\x12\x1a\n" +
	"\bsuffrage\x18\x01 \x01(\x05R\bsuffrage\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\"R\n" +
	"\x12ConfigurationValue\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x04R\x05index\x12&\n" +
	"\aservers\x18\x02 \x03(\v2\f.raft.ServerR\aservers\"A\n" +
	"\x14LocalNodeConfigValue\x12)\n" +
	"\x10desired_suffrage\x18\x01 \x01(\tR\x0fdesiredSuffrageB*Z(github.com/hashicorp/vault/physical/raftb\x06proto3"

var (
	file_physical_raft_types_proto_rawDescOnce sync.Once
	file_physical_raft_types_proto_rawDescData []byte
)

func file_physical_raft_types_proto_rawDescGZIP() []byte {
	file_physical_raft_types_proto_rawDescOnce.Do(func() {
		file_physical_raft_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_physical_raft_types_proto_rawDesc), len(file_physical_raft_types_proto_rawDesc)))
	})
	return file_physical_raft_types_proto_rawDescData
}

var file_physical_raft_types_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_physical_raft_types_proto_goTypes = []any{
	(*LogOperation)(nil),         // 0: raft.LogOperation
	(*LogData)(nil),              // 1: raft.LogData
	(*IndexValue)(nil),           // 2: raft.IndexValue
	(*Server)(nil),               // 3: raft.Server
	(*ConfigurationValue)(nil),   // 4: raft.ConfigurationValue
	(*LocalNodeConfigValue)(nil), // 5: raft.LocalNodeConfigValue
}
var file_physical_raft_types_proto_depIdxs = []int32{
	0, // 0: raft.LogData.operations:type_name -> raft.LogOperation
	3, // 1: raft.ConfigurationValue.servers:type_name -> raft.Server
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_physical_raft_types_proto_init() }
func file_physical_raft_types_proto_init() {
	if File_physical_raft_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_physical_raft_types_proto_rawDesc), len(file_physical_raft_types_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_physical_raft_types_proto_goTypes,
		DependencyIndexes: file_physical_raft_types_proto_depIdxs,
		MessageInfos:      file_physical_raft_types_proto_msgTypes,
	}.Build()
	File_physical_raft_types_proto = out.File
	file_physical_raft_types_proto_goTypes = nil
	file_physical_raft_types_proto_depIdxs = nil
}
