---
name: lint-enos

on:
  pull_request:
    paths:
      - enos/**

jobs:
  metadata:
    # Only run this workflow on pull requests from hashicorp/vault branches
    # as we need secrets to install enos.
    if: "! github.event.pull_request.head.repo.fork"
    name: metadata
    runs-on: ${{ github.repository == 'hashicorp/vault' && 'ubuntu-latest' || fromJSON('["self-hosted","ubuntu-latest-x64"]') }}
    outputs:
      runs-on: ${{ steps.metadata.outputs.runs-on }}
      version: ${{ steps.metadata.outputs.version }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - id: set-product-version
        uses: hashicorp/actions-set-product-version@v2
      - id: metadata
        run: |
          echo "version=${{ steps.set-product-version.outputs.product-version }}" >> "$GITHUB_OUTPUT"
          github_repository="${{ github.repository }}"
          if [ "${github_repository##*/}" == "vault-enterprise" ] ; then
            echo 'runs-on=["self-hosted","ubuntu-latest-x64","type=c6a.4xlarge"]' >> "$GITHUB_OUTPUT"
          else
            echo 'runs-on="custom-linux-xl-vault-latest"' >> "$GITHUB_OUTPUT"
          fi

  lint:
    needs: metadata
    runs-on: ${{ fromJSON(needs.metadata.outputs.runs-on) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/set-up-go
        with:
          no-restore: true
          no-save: true
      - uses: ./.github/actions/install-external-tools
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - uses: hashicorp/action-setup-enos@v1
      - name: Ensure shellcheck is available for linting
        run: which shellcheck || (sudo apt update && sudo apt install -y shellcheck)
      - name: lint
        working-directory: ./enos
        env:
          ENOS_VAR_vault_product_version: ${{ needs.metadata.outputs.version }}
        run: make lint
