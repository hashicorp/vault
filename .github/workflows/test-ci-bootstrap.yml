name: test-ci-bootstrap

# cancel existing runs of the same workflow on the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - enos/ci/**
      - .github/workflows/test-ci-bootstrap.yml
  push:
    branches:
      - main
    paths:
      - enos/ci/**
      - .github/workflows/test-ci-bootstrap.yml

jobs:
  bootstrap-ci:
    runs-on: ${{ github.repository == 'hashicorp/vault' && 'ubuntu-latest' || fromJSON('["self-hosted","ubuntu-latest-x64"]') }}
    env:
      TF_WORKSPACE: "${{ github.event.repository.name }}-ci-enos-bootstrap"
      TF_VAR_repository: ${{ github.event.repository.name }}
      TF_VAR_aws_ssh_public_key: ${{ secrets.SSH_KEY_PUBLIC_CI }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CI_09042025 }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CI_09042025 }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_CI }}
          role-skip-session-tagging: true
          role-duration-seconds: 3600
      - name: Init Terraform
        id: tf_init
        run: |
          terraform -chdir=enos/ci/bootstrap init -input=false
      - name: Plan Terraform
        id: tf_plan
        run: |
          terraform -chdir=enos/ci/bootstrap plan
      - name: Apply Terraform
        if: ${{ github.ref == 'refs/heads/main' }}
        id: tf_apply
        run: |
          terraform -chdir=enos/ci/bootstrap apply -auto-approve
