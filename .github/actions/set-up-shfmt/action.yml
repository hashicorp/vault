# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

---
name: Set up shfmt from Github releases
description: Set up shfmt from Github releases

inputs:
  destination:
    description: "Where to install the shfmt binary (default: $HOME/bin/shfmt)"
    type: boolean
    default: "$HOME/bin/shfmt"
  version:
    description: "The version to install (default: latest)"
    type: string
    default: Latest

outputs:
  destination:
    description: Where the installed shfmt binary is
    value: ${{ steps.install.outputs.destination }}
  destination-dir:
    description: The directory where the installed shfmt binary is
    value: ${{ steps.install.outputs.destination-dir }}
  version:
    description: The installed version of shfmt
    value: ${{ steps.install.outputs.version }}

runs:
  using: composite
  steps:
    - id: install
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        VERSION=$(./.github/scripts/retry-command.sh gh release list -R mvdan/sh --exclude-drafts --exclude-pre-releases | grep ${{ inputs.version }} | cut -f1)

        mkdir -p $(dirname ${{ inputs.destination }})
        DESTINATION="$(readlink -f "${{ inputs.destination }}")"
        DESTINATION_DIR="$(dirname "$DESTINATION")"
        echo "$DESTINATION_DIR" >> "$GITHUB_PATH"

        {
          echo "destination=$DESTINATION"
          echo "destination-dir=$DESTINATION_DIR"
          echo "version=$VERSION"
        } | tee -a "$GITHUB_OUTPUT"

        ARCH="$(echo "$RUNNER_ARCH" | tr '[:upper:]' '[:lower:]')"
        OS="$(echo "$RUNNER_OS" | tr '[:upper:]' '[:lower:]')"
        if [ "$ARCH" = "x64" ]; then
          export ARCH="amd64"
        fi
        if [ "$OS" = "macos" ]; then
          export OS="darwin"
        fi

        ./.github/scripts/retry-command.sh gh release download "$VERSION" --clobber -p "shfmt_*_${OS}_${ARCH}" -O shfmt -R mvdan/sh
        chmod +x shfmt
        mv shfmt "$DESTINATION"
