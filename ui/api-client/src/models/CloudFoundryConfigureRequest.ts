/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CloudFoundryConfigureRequest
 */
export interface CloudFoundryConfigureRequest {
    /**
     * CF’s API address.
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     */
    cfApiAddr?: string;
    /**
     * The PEM-format certificates that are presented for mutual TLS with the CloudFoundry API. If not set, mutual TLS is not used
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     */
    cfApiMutualTlsCertificate?: string;
    /**
     * The PEM-format private key that are used for mutual TLS with the CloudFoundry API. If not set, mutual TLS is not used
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     */
    cfApiMutualTlsKey?: string;
    /**
     * The PEM-format CA certificates that are acceptable for the CF API to present.
     * @type {Array<string>}
     * @memberof CloudFoundryConfigureRequest
     */
    cfApiTrustedCertificates?: Array<string>;
    /**
     * The client id for CF’s API.
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     */
    cfClientId?: string;
    /**
     * The client secret for CF’s API.
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     */
    cfClientSecret?: string;
    /**
     * The password for CF’s API.
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     */
    cfPassword?: string;
    /**
     * The timeout for calls to CF’s API.
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     */
    cfTimeout?: string;
    /**
     * The username for CF’s API.
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     */
    cfUsername?: string;
    /**
     * The PEM-format CA certificates that are required to have issued the instance certificates presented for logging in.
     * @type {Array<string>}
     * @memberof CloudFoundryConfigureRequest
     */
    identityCaCertificates?: Array<string>;
    /**
     * Duration in seconds for the maximum acceptable length in the future a "signing_time" can be. Useful for clock drift. Set low to reduce the opportunity for replay attacks.
     * @type {number}
     * @memberof CloudFoundryConfigureRequest
     */
    loginMaxSecondsNotAfter?: number;
    /**
     * Duration in seconds for the maximum acceptable age of a "signing_time". Useful for clock drift. Set low to reduce the opportunity for replay attacks.
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     */
    loginMaxSecondsNotBefore?: string;
    /**
     * Deprecated. Please use "cf_api_addr".
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     * @deprecated
     */
    pcfApiAddr?: string;
    /**
     * Deprecated. Please use "cf_api_trusted_certificates".
     * @type {Array<string>}
     * @memberof CloudFoundryConfigureRequest
     * @deprecated
     */
    pcfApiTrustedCertificates?: Array<string>;
    /**
     * Deprecated. Please use "cf_password".
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     * @deprecated
     */
    pcfPassword?: string;
    /**
     * Deprecated. Please use "cf_username".
     * @type {string}
     * @memberof CloudFoundryConfigureRequest
     * @deprecated
     */
    pcfUsername?: string;
}

/**
 * Check if a given object implements the CloudFoundryConfigureRequest interface.
 */
export function instanceOfCloudFoundryConfigureRequest(value: object): value is CloudFoundryConfigureRequest {
    return true;
}

export function CloudFoundryConfigureRequestFromJSON(json: any): CloudFoundryConfigureRequest {
    return CloudFoundryConfigureRequestFromJSONTyped(json, false);
}

export function CloudFoundryConfigureRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudFoundryConfigureRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'cfApiAddr': json['cf_api_addr'] == null ? undefined : json['cf_api_addr'],
        'cfApiMutualTlsCertificate': json['cf_api_mutual_tls_certificate'] == null ? undefined : json['cf_api_mutual_tls_certificate'],
        'cfApiMutualTlsKey': json['cf_api_mutual_tls_key'] == null ? undefined : json['cf_api_mutual_tls_key'],
        'cfApiTrustedCertificates': json['cf_api_trusted_certificates'] == null ? undefined : json['cf_api_trusted_certificates'],
        'cfClientId': json['cf_client_id'] == null ? undefined : json['cf_client_id'],
        'cfClientSecret': json['cf_client_secret'] == null ? undefined : json['cf_client_secret'],
        'cfPassword': json['cf_password'] == null ? undefined : json['cf_password'],
        'cfTimeout': json['cf_timeout'] == null ? undefined : json['cf_timeout'],
        'cfUsername': json['cf_username'] == null ? undefined : json['cf_username'],
        'identityCaCertificates': json['identity_ca_certificates'] == null ? undefined : json['identity_ca_certificates'],
        'loginMaxSecondsNotAfter': json['login_max_seconds_not_after'] == null ? undefined : json['login_max_seconds_not_after'],
        'loginMaxSecondsNotBefore': json['login_max_seconds_not_before'] == null ? undefined : json['login_max_seconds_not_before'],
        'pcfApiAddr': json['pcf_api_addr'] == null ? undefined : json['pcf_api_addr'],
        'pcfApiTrustedCertificates': json['pcf_api_trusted_certificates'] == null ? undefined : json['pcf_api_trusted_certificates'],
        'pcfPassword': json['pcf_password'] == null ? undefined : json['pcf_password'],
        'pcfUsername': json['pcf_username'] == null ? undefined : json['pcf_username'],
    };
}

export function CloudFoundryConfigureRequestToJSON(json: any): CloudFoundryConfigureRequest {
    return CloudFoundryConfigureRequestToJSONTyped(json, false);
}

export function CloudFoundryConfigureRequestToJSONTyped(value?: CloudFoundryConfigureRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cf_api_addr': value['cfApiAddr'],
        'cf_api_mutual_tls_certificate': value['cfApiMutualTlsCertificate'],
        'cf_api_mutual_tls_key': value['cfApiMutualTlsKey'],
        'cf_api_trusted_certificates': value['cfApiTrustedCertificates'],
        'cf_client_id': value['cfClientId'],
        'cf_client_secret': value['cfClientSecret'],
        'cf_password': value['cfPassword'],
        'cf_timeout': value['cfTimeout'],
        'cf_username': value['cfUsername'],
        'identity_ca_certificates': value['identityCaCertificates'],
        'login_max_seconds_not_after': value['loginMaxSecondsNotAfter'],
        'login_max_seconds_not_before': value['loginMaxSecondsNotBefore'],
        'pcf_api_addr': value['pcfApiAddr'],
        'pcf_api_trusted_certificates': value['pcfApiTrustedCertificates'],
        'pcf_password': value['pcfPassword'],
        'pcf_username': value['pcfUsername'],
    };
}

