/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransformWriteMaskingTransformationRequest
 */
export interface TransformWriteMaskingTransformationRequest {
    /**
     * The set of roles allowed to perform this transformation.
     * @type {Array<string>}
     * @memberof TransformWriteMaskingTransformationRequest
     */
    allowedRoles?: Array<string>;
    /**
     * The character used to replace data when in masking mode
     * @type {string}
     * @memberof TransformWriteMaskingTransformationRequest
     */
    maskingCharacter?: string;
    /**
     * The name of the template to use.
     * @type {string}
     * @memberof TransformWriteMaskingTransformationRequest
     */
    template?: string;
}

/**
 * Check if a given object implements the TransformWriteMaskingTransformationRequest interface.
 */
export function instanceOfTransformWriteMaskingTransformationRequest(value: object): value is TransformWriteMaskingTransformationRequest {
    return true;
}

export function TransformWriteMaskingTransformationRequestFromJSON(json: any): TransformWriteMaskingTransformationRequest {
    return TransformWriteMaskingTransformationRequestFromJSONTyped(json, false);
}

export function TransformWriteMaskingTransformationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransformWriteMaskingTransformationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'allowedRoles': json['allowed_roles'] == null ? undefined : json['allowed_roles'],
        'maskingCharacter': json['masking_character'] == null ? undefined : json['masking_character'],
        'template': json['template'] == null ? undefined : json['template'],
    };
}

export function TransformWriteMaskingTransformationRequestToJSON(json: any): TransformWriteMaskingTransformationRequest {
    return TransformWriteMaskingTransformationRequestToJSONTyped(json, false);
}

export function TransformWriteMaskingTransformationRequestToJSONTyped(value?: TransformWriteMaskingTransformationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowed_roles': value['allowedRoles'],
        'masking_character': value['maskingCharacter'],
        'template': value['template'],
    };
}

