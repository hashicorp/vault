/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CorsConfigureRequest
 */
export interface CorsConfigureRequest {
    /**
     * A comma-separated string or array of strings indicating headers that are allowed on cross-origin requests.
     * @type {Array<string>}
     * @memberof CorsConfigureRequest
     */
    allowedHeaders?: Array<string>;
    /**
     * A comma-separated string or array of strings indicating origins that may make cross-origin requests.
     * @type {Array<string>}
     * @memberof CorsConfigureRequest
     */
    allowedOrigins?: Array<string>;
    /**
     * Enables or disables CORS headers on requests.
     * @type {boolean}
     * @memberof CorsConfigureRequest
     */
    enable?: boolean;
}

/**
 * Check if a given object implements the CorsConfigureRequest interface.
 */
export function instanceOfCorsConfigureRequest(value: object): value is CorsConfigureRequest {
    return true;
}

export function CorsConfigureRequestFromJSON(json: any): CorsConfigureRequest {
    return CorsConfigureRequestFromJSONTyped(json, false);
}

export function CorsConfigureRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CorsConfigureRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'allowedHeaders': json['allowed_headers'] == null ? undefined : json['allowed_headers'],
        'allowedOrigins': json['allowed_origins'] == null ? undefined : json['allowed_origins'],
        'enable': json['enable'] == null ? undefined : json['enable'],
    };
}

export function CorsConfigureRequestToJSON(json: any): CorsConfigureRequest {
    return CorsConfigureRequestToJSONTyped(json, false);
}

export function CorsConfigureRequestToJSONTyped(value?: CorsConfigureRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowed_headers': value['allowedHeaders'],
        'allowed_origins': value['allowedOrigins'],
        'enable': value['enable'],
    };
}

