/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CloudFoundryWriteRoleRequest
 */
export interface CloudFoundryWriteRoleRequest {
    /**
     * Require that the client certificate presented has at least one of these app IDs.
     * @type {Array<string>}
     * @memberof CloudFoundryWriteRoleRequest
     */
    boundApplicationIds?: Array<string>;
    /**
     * Use "token_bound_cidrs" instead. If this and "token_bound_cidrs" are both specified, only "token_bound_cidrs" will be used.
     * @type {Array<string>}
     * @memberof CloudFoundryWriteRoleRequest
     * @deprecated
     */
    boundCidrs?: Array<string>;
    /**
     * Require that the client certificate presented has at least one of these instance IDs.
     * @type {Array<string>}
     * @memberof CloudFoundryWriteRoleRequest
     */
    boundInstanceIds?: Array<string>;
    /**
     * Require that the client certificate presented has at least one of these org IDs.
     * @type {Array<string>}
     * @memberof CloudFoundryWriteRoleRequest
     */
    boundOrganizationIds?: Array<string>;
    /**
     * Require that the client certificate presented has at least one of these space IDs.
     * @type {Array<string>}
     * @memberof CloudFoundryWriteRoleRequest
     */
    boundSpaceIds?: Array<string>;
    /**
     * If set to true, disables the default behavior that logging in must be performed from an acceptable IP address described by the certificate presented.
     * @type {boolean}
     * @memberof CloudFoundryWriteRoleRequest
     */
    disableIpMatching?: boolean;
    /**
     * Use "token_max_ttl" instead. If this and "token_max_ttl" are both specified, only "token_max_ttl" will be used.
     * @type {string}
     * @memberof CloudFoundryWriteRoleRequest
     * @deprecated
     */
    maxTtl?: string;
    /**
     * Use "token_period" instead. If this and "token_period" are both specified, only "token_period" will be used.
     * @type {string}
     * @memberof CloudFoundryWriteRoleRequest
     * @deprecated
     */
    period?: string;
    /**
     * Use "token_policies" instead. If this and "token_policies" are both specified, only "token_policies" will be used.
     * @type {Array<string>}
     * @memberof CloudFoundryWriteRoleRequest
     * @deprecated
     */
    policies?: Array<string>;
    /**
     * Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
     * @type {Array<string>}
     * @memberof CloudFoundryWriteRoleRequest
     */
    tokenBoundCidrs?: Array<string>;
    /**
     * If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
     * @type {string}
     * @memberof CloudFoundryWriteRoleRequest
     */
    tokenExplicitMaxTtl?: string;
    /**
     * The maximum lifetime of the generated token
     * @type {string}
     * @memberof CloudFoundryWriteRoleRequest
     */
    tokenMaxTtl?: string;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     * @type {boolean}
     * @memberof CloudFoundryWriteRoleRequest
     */
    tokenNoDefaultPolicy?: boolean;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     * @type {number}
     * @memberof CloudFoundryWriteRoleRequest
     */
    tokenNumUses?: number;
    /**
     * If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. "24h").
     * @type {string}
     * @memberof CloudFoundryWriteRoleRequest
     */
    tokenPeriod?: string;
    /**
     * Comma-separated list of policies
     * @type {Array<string>}
     * @memberof CloudFoundryWriteRoleRequest
     */
    tokenPolicies?: Array<string>;
    /**
     * The initial ttl of the token to generate
     * @type {string}
     * @memberof CloudFoundryWriteRoleRequest
     */
    tokenTtl?: string;
    /**
     * The type of token to generate, service or batch
     * @type {string}
     * @memberof CloudFoundryWriteRoleRequest
     */
    tokenType?: string;
    /**
     * Use "token_ttl" instead. If this and "token_ttl" are both specified, only "token_ttl" will be used.
     * @type {string}
     * @memberof CloudFoundryWriteRoleRequest
     * @deprecated
     */
    ttl?: string;
}

/**
 * Check if a given object implements the CloudFoundryWriteRoleRequest interface.
 */
export function instanceOfCloudFoundryWriteRoleRequest(value: object): value is CloudFoundryWriteRoleRequest {
    return true;
}

export function CloudFoundryWriteRoleRequestFromJSON(json: any): CloudFoundryWriteRoleRequest {
    return CloudFoundryWriteRoleRequestFromJSONTyped(json, false);
}

export function CloudFoundryWriteRoleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudFoundryWriteRoleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'boundApplicationIds': json['bound_application_ids'] == null ? undefined : json['bound_application_ids'],
        'boundCidrs': json['bound_cidrs'] == null ? undefined : json['bound_cidrs'],
        'boundInstanceIds': json['bound_instance_ids'] == null ? undefined : json['bound_instance_ids'],
        'boundOrganizationIds': json['bound_organization_ids'] == null ? undefined : json['bound_organization_ids'],
        'boundSpaceIds': json['bound_space_ids'] == null ? undefined : json['bound_space_ids'],
        'disableIpMatching': json['disable_ip_matching'] == null ? undefined : json['disable_ip_matching'],
        'maxTtl': json['max_ttl'] == null ? undefined : json['max_ttl'],
        'period': json['period'] == null ? undefined : json['period'],
        'policies': json['policies'] == null ? undefined : json['policies'],
        'tokenBoundCidrs': json['token_bound_cidrs'] == null ? undefined : json['token_bound_cidrs'],
        'tokenExplicitMaxTtl': json['token_explicit_max_ttl'] == null ? undefined : json['token_explicit_max_ttl'],
        'tokenMaxTtl': json['token_max_ttl'] == null ? undefined : json['token_max_ttl'],
        'tokenNoDefaultPolicy': json['token_no_default_policy'] == null ? undefined : json['token_no_default_policy'],
        'tokenNumUses': json['token_num_uses'] == null ? undefined : json['token_num_uses'],
        'tokenPeriod': json['token_period'] == null ? undefined : json['token_period'],
        'tokenPolicies': json['token_policies'] == null ? undefined : json['token_policies'],
        'tokenTtl': json['token_ttl'] == null ? undefined : json['token_ttl'],
        'tokenType': json['token_type'] == null ? undefined : json['token_type'],
        'ttl': json['ttl'] == null ? undefined : json['ttl'],
    };
}

export function CloudFoundryWriteRoleRequestToJSON(json: any): CloudFoundryWriteRoleRequest {
    return CloudFoundryWriteRoleRequestToJSONTyped(json, false);
}

export function CloudFoundryWriteRoleRequestToJSONTyped(value?: CloudFoundryWriteRoleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bound_application_ids': value['boundApplicationIds'],
        'bound_cidrs': value['boundCidrs'],
        'bound_instance_ids': value['boundInstanceIds'],
        'bound_organization_ids': value['boundOrganizationIds'],
        'bound_space_ids': value['boundSpaceIds'],
        'disable_ip_matching': value['disableIpMatching'],
        'max_ttl': value['maxTtl'],
        'period': value['period'],
        'policies': value['policies'],
        'token_bound_cidrs': value['tokenBoundCidrs'],
        'token_explicit_max_ttl': value['tokenExplicitMaxTtl'],
        'token_max_ttl': value['tokenMaxTtl'],
        'token_no_default_policy': value['tokenNoDefaultPolicy'],
        'token_num_uses': value['tokenNumUses'],
        'token_period': value['tokenPeriod'],
        'token_policies': value['tokenPolicies'],
        'token_ttl': value['tokenTtl'],
        'token_type': value['tokenType'],
        'ttl': value['ttl'],
    };
}

