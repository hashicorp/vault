/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AzureWriteAuthRoleRequest
 */
export interface AzureWriteAuthRoleRequest {
    /**
     * Comma-separated list of group ids that login is restricted to.
     * @type {Array<string>}
     * @memberof AzureWriteAuthRoleRequest
     */
    boundGroupIds?: Array<string>;
    /**
     * Comma-separated list of locations that login is restricted to.
     * @type {Array<string>}
     * @memberof AzureWriteAuthRoleRequest
     */
    boundLocations?: Array<string>;
    /**
     * Comma-separated list of resource groups that login is restricted to.
     * @type {Array<string>}
     * @memberof AzureWriteAuthRoleRequest
     */
    boundResourceGroups?: Array<string>;
    /**
     * Comma-separated list of scale sets that login is restricted to.
     * @type {Array<string>}
     * @memberof AzureWriteAuthRoleRequest
     */
    boundScaleSets?: Array<string>;
    /**
     * Comma-separated list of service principal ids that login is restricted to.
     * @type {Array<string>}
     * @memberof AzureWriteAuthRoleRequest
     */
    boundServicePrincipalIds?: Array<string>;
    /**
     * Comma-separated list of subscription ids that login is restricted to.
     * @type {Array<string>}
     * @memberof AzureWriteAuthRoleRequest
     */
    boundSubscriptionIds?: Array<string>;
    /**
     * Use "token_max_ttl" instead. If this and "token_max_ttl" are both specified, only "token_max_ttl" will be used.
     * @type {string}
     * @memberof AzureWriteAuthRoleRequest
     * @deprecated
     */
    maxTtl?: string;
    /**
     * Use "token_num_uses" instead. If this and "token_num_uses" are both specified, only "token_num_uses" will be used.
     * @type {number}
     * @memberof AzureWriteAuthRoleRequest
     * @deprecated
     */
    numUses?: number;
    /**
     * Use "token_period" instead. If this and "token_period" are both specified, only "token_period" will be used.
     * @type {string}
     * @memberof AzureWriteAuthRoleRequest
     * @deprecated
     */
    period?: string;
    /**
     * Use "token_policies" instead. If this and "token_policies" are both specified, only "token_policies" will be used.
     * @type {Array<string>}
     * @memberof AzureWriteAuthRoleRequest
     * @deprecated
     */
    policies?: Array<string>;
    /**
     * Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
     * @type {Array<string>}
     * @memberof AzureWriteAuthRoleRequest
     */
    tokenBoundCidrs?: Array<string>;
    /**
     * If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
     * @type {string}
     * @memberof AzureWriteAuthRoleRequest
     */
    tokenExplicitMaxTtl?: string;
    /**
     * The maximum lifetime of the generated token
     * @type {string}
     * @memberof AzureWriteAuthRoleRequest
     */
    tokenMaxTtl?: string;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     * @type {boolean}
     * @memberof AzureWriteAuthRoleRequest
     */
    tokenNoDefaultPolicy?: boolean;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     * @type {number}
     * @memberof AzureWriteAuthRoleRequest
     */
    tokenNumUses?: number;
    /**
     * If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. "24h").
     * @type {string}
     * @memberof AzureWriteAuthRoleRequest
     */
    tokenPeriod?: string;
    /**
     * Comma-separated list of policies
     * @type {Array<string>}
     * @memberof AzureWriteAuthRoleRequest
     */
    tokenPolicies?: Array<string>;
    /**
     * The initial ttl of the token to generate
     * @type {string}
     * @memberof AzureWriteAuthRoleRequest
     */
    tokenTtl?: string;
    /**
     * The type of token to generate, service or batch
     * @type {string}
     * @memberof AzureWriteAuthRoleRequest
     */
    tokenType?: string;
    /**
     * Use "token_ttl" instead. If this and "token_ttl" are both specified, only "token_ttl" will be used.
     * @type {string}
     * @memberof AzureWriteAuthRoleRequest
     * @deprecated
     */
    ttl?: string;
}

/**
 * Check if a given object implements the AzureWriteAuthRoleRequest interface.
 */
export function instanceOfAzureWriteAuthRoleRequest(value: object): value is AzureWriteAuthRoleRequest {
    return true;
}

export function AzureWriteAuthRoleRequestFromJSON(json: any): AzureWriteAuthRoleRequest {
    return AzureWriteAuthRoleRequestFromJSONTyped(json, false);
}

export function AzureWriteAuthRoleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AzureWriteAuthRoleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'boundGroupIds': json['bound_group_ids'] == null ? undefined : json['bound_group_ids'],
        'boundLocations': json['bound_locations'] == null ? undefined : json['bound_locations'],
        'boundResourceGroups': json['bound_resource_groups'] == null ? undefined : json['bound_resource_groups'],
        'boundScaleSets': json['bound_scale_sets'] == null ? undefined : json['bound_scale_sets'],
        'boundServicePrincipalIds': json['bound_service_principal_ids'] == null ? undefined : json['bound_service_principal_ids'],
        'boundSubscriptionIds': json['bound_subscription_ids'] == null ? undefined : json['bound_subscription_ids'],
        'maxTtl': json['max_ttl'] == null ? undefined : json['max_ttl'],
        'numUses': json['num_uses'] == null ? undefined : json['num_uses'],
        'period': json['period'] == null ? undefined : json['period'],
        'policies': json['policies'] == null ? undefined : json['policies'],
        'tokenBoundCidrs': json['token_bound_cidrs'] == null ? undefined : json['token_bound_cidrs'],
        'tokenExplicitMaxTtl': json['token_explicit_max_ttl'] == null ? undefined : json['token_explicit_max_ttl'],
        'tokenMaxTtl': json['token_max_ttl'] == null ? undefined : json['token_max_ttl'],
        'tokenNoDefaultPolicy': json['token_no_default_policy'] == null ? undefined : json['token_no_default_policy'],
        'tokenNumUses': json['token_num_uses'] == null ? undefined : json['token_num_uses'],
        'tokenPeriod': json['token_period'] == null ? undefined : json['token_period'],
        'tokenPolicies': json['token_policies'] == null ? undefined : json['token_policies'],
        'tokenTtl': json['token_ttl'] == null ? undefined : json['token_ttl'],
        'tokenType': json['token_type'] == null ? undefined : json['token_type'],
        'ttl': json['ttl'] == null ? undefined : json['ttl'],
    };
}

export function AzureWriteAuthRoleRequestToJSON(json: any): AzureWriteAuthRoleRequest {
    return AzureWriteAuthRoleRequestToJSONTyped(json, false);
}

export function AzureWriteAuthRoleRequestToJSONTyped(value?: AzureWriteAuthRoleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bound_group_ids': value['boundGroupIds'],
        'bound_locations': value['boundLocations'],
        'bound_resource_groups': value['boundResourceGroups'],
        'bound_scale_sets': value['boundScaleSets'],
        'bound_service_principal_ids': value['boundServicePrincipalIds'],
        'bound_subscription_ids': value['boundSubscriptionIds'],
        'max_ttl': value['maxTtl'],
        'num_uses': value['numUses'],
        'period': value['period'],
        'policies': value['policies'],
        'token_bound_cidrs': value['tokenBoundCidrs'],
        'token_explicit_max_ttl': value['tokenExplicitMaxTtl'],
        'token_max_ttl': value['tokenMaxTtl'],
        'token_no_default_policy': value['tokenNoDefaultPolicy'],
        'token_num_uses': value['tokenNumUses'],
        'token_period': value['tokenPeriod'],
        'token_policies': value['tokenPolicies'],
        'token_ttl': value['tokenTtl'],
        'token_type': value['tokenType'],
        'ttl': value['ttl'],
    };
}

