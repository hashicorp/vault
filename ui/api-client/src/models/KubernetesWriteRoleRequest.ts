/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KubernetesWriteRoleRequest
 */
export interface KubernetesWriteRoleRequest {
    /**
     * A label selector for Kubernetes namespaces in which credentials can be generated. Accepts either a JSON or YAML object. If set with allowed_kubernetes_namespaces, the conditions are conjuncted.
     * @type {string}
     * @memberof KubernetesWriteRoleRequest
     */
    allowedKubernetesNamespaceSelector?: string;
    /**
     * A list of the Kubernetes namespaces in which credentials can be generated. If set to "*" all namespaces are allowed.
     * @type {Array<string>}
     * @memberof KubernetesWriteRoleRequest
     */
    allowedKubernetesNamespaces?: Array<string>;
    /**
     * Additional annotations to apply to all generated Kubernetes objects.
     * @type {object}
     * @memberof KubernetesWriteRoleRequest
     */
    extraAnnotations?: object;
    /**
     * Additional labels to apply to all generated Kubernetes objects.
     * @type {object}
     * @memberof KubernetesWriteRoleRequest
     */
    extraLabels?: object;
    /**
     * The Role or ClusterRole rules to use when generating a role. Accepts either a JSON or YAML object. If set, the entire chain of Kubernetes objects will be generated.
     * @type {string}
     * @memberof KubernetesWriteRoleRequest
     */
    generatedRoleRules?: string;
    /**
     * The pre-existing Role or ClusterRole to bind a generated service account to. If set, Kubernetes token, service account, and role binding objects will be created.
     * @type {string}
     * @memberof KubernetesWriteRoleRequest
     */
    kubernetesRoleName?: string;
    /**
     * Specifies whether the Kubernetes role is a Role or ClusterRole.
     * @type {string}
     * @memberof KubernetesWriteRoleRequest
     */
    kubernetesRoleType?: string;
    /**
     * The name template to use when generating service accounts, roles and role bindings. If unset, a default template is used.
     * @type {string}
     * @memberof KubernetesWriteRoleRequest
     */
    nameTemplate?: string;
    /**
     * The pre-existing service account to generate tokens for. Mutually exclusive with all role parameters. If set, only a Kubernetes service account token will be created.
     * @type {string}
     * @memberof KubernetesWriteRoleRequest
     */
    serviceAccountName?: string;
    /**
     * The default audiences for generated Kubernetes service account tokens. If not set or set to "", will use k8s cluster default.
     * @type {Array<string>}
     * @memberof KubernetesWriteRoleRequest
     */
    tokenDefaultAudiences?: Array<string>;
    /**
     * The default ttl for generated Kubernetes service account tokens. If not set or set to 0, will use system default.
     * @type {string}
     * @memberof KubernetesWriteRoleRequest
     */
    tokenDefaultTtl?: string;
    /**
     * The maximum ttl for generated Kubernetes service account tokens. If not set or set to 0, will use system default.
     * @type {string}
     * @memberof KubernetesWriteRoleRequest
     */
    tokenMaxTtl?: string;
}

/**
 * Check if a given object implements the KubernetesWriteRoleRequest interface.
 */
export function instanceOfKubernetesWriteRoleRequest(value: object): value is KubernetesWriteRoleRequest {
    return true;
}

export function KubernetesWriteRoleRequestFromJSON(json: any): KubernetesWriteRoleRequest {
    return KubernetesWriteRoleRequestFromJSONTyped(json, false);
}

export function KubernetesWriteRoleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): KubernetesWriteRoleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'allowedKubernetesNamespaceSelector': json['allowed_kubernetes_namespace_selector'] == null ? undefined : json['allowed_kubernetes_namespace_selector'],
        'allowedKubernetesNamespaces': json['allowed_kubernetes_namespaces'] == null ? undefined : json['allowed_kubernetes_namespaces'],
        'extraAnnotations': json['extra_annotations'] == null ? undefined : json['extra_annotations'],
        'extraLabels': json['extra_labels'] == null ? undefined : json['extra_labels'],
        'generatedRoleRules': json['generated_role_rules'] == null ? undefined : json['generated_role_rules'],
        'kubernetesRoleName': json['kubernetes_role_name'] == null ? undefined : json['kubernetes_role_name'],
        'kubernetesRoleType': json['kubernetes_role_type'] == null ? undefined : json['kubernetes_role_type'],
        'nameTemplate': json['name_template'] == null ? undefined : json['name_template'],
        'serviceAccountName': json['service_account_name'] == null ? undefined : json['service_account_name'],
        'tokenDefaultAudiences': json['token_default_audiences'] == null ? undefined : json['token_default_audiences'],
        'tokenDefaultTtl': json['token_default_ttl'] == null ? undefined : json['token_default_ttl'],
        'tokenMaxTtl': json['token_max_ttl'] == null ? undefined : json['token_max_ttl'],
    };
}

export function KubernetesWriteRoleRequestToJSON(json: any): KubernetesWriteRoleRequest {
    return KubernetesWriteRoleRequestToJSONTyped(json, false);
}

export function KubernetesWriteRoleRequestToJSONTyped(value?: KubernetesWriteRoleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowed_kubernetes_namespace_selector': value['allowedKubernetesNamespaceSelector'],
        'allowed_kubernetes_namespaces': value['allowedKubernetesNamespaces'],
        'extra_annotations': value['extraAnnotations'],
        'extra_labels': value['extraLabels'],
        'generated_role_rules': value['generatedRoleRules'],
        'kubernetes_role_name': value['kubernetesRoleName'],
        'kubernetes_role_type': value['kubernetesRoleType'],
        'name_template': value['nameTemplate'],
        'service_account_name': value['serviceAccountName'],
        'token_default_audiences': value['tokenDefaultAudiences'],
        'token_default_ttl': value['tokenDefaultTtl'],
        'token_max_ttl': value['tokenMaxTtl'],
    };
}

