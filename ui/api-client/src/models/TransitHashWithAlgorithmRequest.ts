/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransitHashWithAlgorithmRequest
 */
export interface TransitHashWithAlgorithmRequest {
    /**
     * Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 Defaults to "sha2-256".
     * @type {string}
     * @memberof TransitHashWithAlgorithmRequest
     */
    algorithm?: string;
    /**
     * Encoding format to use. Can be "hex" or "base64". Defaults to "hex".
     * @type {string}
     * @memberof TransitHashWithAlgorithmRequest
     */
    format?: string;
    /**
     * The base64-encoded input data
     * @type {string}
     * @memberof TransitHashWithAlgorithmRequest
     */
    input?: string;
}

/**
 * Check if a given object implements the TransitHashWithAlgorithmRequest interface.
 */
export function instanceOfTransitHashWithAlgorithmRequest(value: object): value is TransitHashWithAlgorithmRequest {
    return true;
}

export function TransitHashWithAlgorithmRequestFromJSON(json: any): TransitHashWithAlgorithmRequest {
    return TransitHashWithAlgorithmRequestFromJSONTyped(json, false);
}

export function TransitHashWithAlgorithmRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransitHashWithAlgorithmRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'algorithm': json['algorithm'] == null ? undefined : json['algorithm'],
        'format': json['format'] == null ? undefined : json['format'],
        'input': json['input'] == null ? undefined : json['input'],
    };
}

export function TransitHashWithAlgorithmRequestToJSON(json: any): TransitHashWithAlgorithmRequest {
    return TransitHashWithAlgorithmRequestToJSONTyped(json, false);
}

export function TransitHashWithAlgorithmRequestToJSONTyped(value?: TransitHashWithAlgorithmRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'algorithm': value['algorithm'],
        'format': value['format'],
        'input': value['input'],
    };
}

