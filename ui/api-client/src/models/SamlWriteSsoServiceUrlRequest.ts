/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SamlWriteSsoServiceUrlRequest
 */
export interface SamlWriteSsoServiceUrlRequest {
    /**
     * The Assertion Consumer Service URL to use for this auth request. It must be one of the allowed URLs in the config.
     * @type {string}
     * @memberof SamlWriteSsoServiceUrlRequest
     */
    acsUrl?: string;
    /**
     * The client challenge. Must be the output of a base64-encoded, sha256 digest of the 'client_verifier' eventually provided to the token API.
     * @type {string}
     * @memberof SamlWriteSsoServiceUrlRequest
     */
    clientChallenge: string;
    /**
     * The type of the requesting client. The response from the Assertion Consumer Service callback API will differ based on the provided type.
     * @type {string}
     * @memberof SamlWriteSsoServiceUrlRequest
     */
    clientType?: SamlWriteSsoServiceUrlRequestClientTypeEnum;
    /**
     * The role to issue an SSO Service URL for.
     * @type {string}
     * @memberof SamlWriteSsoServiceUrlRequest
     */
    role: string;
}

/**
* @export
* @enum {string}
*/
export enum SamlWriteSsoServiceUrlRequestClientTypeEnum {
    CLI = 'cli',
    BROWSER = 'browser'
}


/**
 * Check if a given object implements the SamlWriteSsoServiceUrlRequest interface.
 */
export function instanceOfSamlWriteSsoServiceUrlRequest(value: object): value is SamlWriteSsoServiceUrlRequest {
    if (!('clientChallenge' in value) || value['clientChallenge'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function SamlWriteSsoServiceUrlRequestFromJSON(json: any): SamlWriteSsoServiceUrlRequest {
    return SamlWriteSsoServiceUrlRequestFromJSONTyped(json, false);
}

export function SamlWriteSsoServiceUrlRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SamlWriteSsoServiceUrlRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'acsUrl': json['acs_url'] == null ? undefined : json['acs_url'],
        'clientChallenge': json['client_challenge'],
        'clientType': json['client_type'] == null ? undefined : json['client_type'],
        'role': json['role'],
    };
}

export function SamlWriteSsoServiceUrlRequestToJSON(json: any): SamlWriteSsoServiceUrlRequest {
    return SamlWriteSsoServiceUrlRequestToJSONTyped(json, false);
}

export function SamlWriteSsoServiceUrlRequestToJSONTyped(value?: SamlWriteSsoServiceUrlRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'acs_url': value['acsUrl'],
        'client_challenge': value['clientChallenge'],
        'client_type': value['clientType'],
        'role': value['role'],
    };
}

