/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MongoDbAtlasConfigureRequest
 */
export interface MongoDbAtlasConfigureRequest {
    /**
     * MongoDB Atlas Programmatic Private Key
     * @type {string}
     * @memberof MongoDbAtlasConfigureRequest
     */
    privateKey: string;
    /**
     * MongoDB Atlas Programmatic Public Key
     * @type {string}
     * @memberof MongoDbAtlasConfigureRequest
     */
    publicKey: string;
}

/**
 * Check if a given object implements the MongoDbAtlasConfigureRequest interface.
 */
export function instanceOfMongoDbAtlasConfigureRequest(value: object): value is MongoDbAtlasConfigureRequest {
    if (!('privateKey' in value) || value['privateKey'] === undefined) return false;
    if (!('publicKey' in value) || value['publicKey'] === undefined) return false;
    return true;
}

export function MongoDbAtlasConfigureRequestFromJSON(json: any): MongoDbAtlasConfigureRequest {
    return MongoDbAtlasConfigureRequestFromJSONTyped(json, false);
}

export function MongoDbAtlasConfigureRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MongoDbAtlasConfigureRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'privateKey': json['private_key'],
        'publicKey': json['public_key'],
    };
}

export function MongoDbAtlasConfigureRequestToJSON(json: any): MongoDbAtlasConfigureRequest {
    return MongoDbAtlasConfigureRequestToJSONTyped(json, false);
}

export function MongoDbAtlasConfigureRequestToJSONTyped(value?: MongoDbAtlasConfigureRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'private_key': value['privateKey'],
        'public_key': value['publicKey'],
    };
}

