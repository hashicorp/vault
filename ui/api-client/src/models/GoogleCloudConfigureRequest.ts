/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GoogleCloudConfigureRequest
 */
export interface GoogleCloudConfigureRequest {
    /**
     * GCP IAM service account credentials JSON with permissions to create new service accounts and set IAM policies
     * @type {string}
     * @memberof GoogleCloudConfigureRequest
     */
    credentials?: string;
    /**
     * If set to true, will deregister all registered rotation jobs from the RotationManager for the plugin.
     * @type {boolean}
     * @memberof GoogleCloudConfigureRequest
     */
    disableAutomatedRotation?: boolean;
    /**
     * Audience of plugin identity tokens
     * @type {string}
     * @memberof GoogleCloudConfigureRequest
     */
    identityTokenAudience?: string;
    /**
     * Time-to-live of plugin identity tokens
     * @type {string}
     * @memberof GoogleCloudConfigureRequest
     */
    identityTokenTtl?: string;
    /**
     * Maximum time a service account key is valid for. If <= 0, will use system default.
     * @type {string}
     * @memberof GoogleCloudConfigureRequest
     */
    maxTtl?: string;
    /**
     * TTL for automatic credential rotation of the given username. Mutually exclusive with rotation_schedule
     * @type {string}
     * @memberof GoogleCloudConfigureRequest
     */
    rotationPeriod?: string;
    /**
     * CRON-style string that will define the schedule on which rotations should occur. Mutually exclusive with rotation_period
     * @type {string}
     * @memberof GoogleCloudConfigureRequest
     */
    rotationSchedule?: string;
    /**
     * Specifies the amount of time in which the rotation is allowed to occur starting from a given rotation_schedule
     * @type {string}
     * @memberof GoogleCloudConfigureRequest
     */
    rotationWindow?: string;
    /**
     * Email ID for the Service Account to impersonate for Workload Identity Federation.
     * @type {string}
     * @memberof GoogleCloudConfigureRequest
     */
    serviceAccountEmail?: string;
    /**
     * Default lease for generated keys. If <= 0, will use system default.
     * @type {string}
     * @memberof GoogleCloudConfigureRequest
     */
    ttl?: string;
}

/**
 * Check if a given object implements the GoogleCloudConfigureRequest interface.
 */
export function instanceOfGoogleCloudConfigureRequest(value: object): value is GoogleCloudConfigureRequest {
    return true;
}

export function GoogleCloudConfigureRequestFromJSON(json: any): GoogleCloudConfigureRequest {
    return GoogleCloudConfigureRequestFromJSONTyped(json, false);
}

export function GoogleCloudConfigureRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GoogleCloudConfigureRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'credentials': json['credentials'] == null ? undefined : json['credentials'],
        'disableAutomatedRotation': json['disable_automated_rotation'] == null ? undefined : json['disable_automated_rotation'],
        'identityTokenAudience': json['identity_token_audience'] == null ? undefined : json['identity_token_audience'],
        'identityTokenTtl': json['identity_token_ttl'] == null ? undefined : json['identity_token_ttl'],
        'maxTtl': json['max_ttl'] == null ? undefined : json['max_ttl'],
        'rotationPeriod': json['rotation_period'] == null ? undefined : json['rotation_period'],
        'rotationSchedule': json['rotation_schedule'] == null ? undefined : json['rotation_schedule'],
        'rotationWindow': json['rotation_window'] == null ? undefined : json['rotation_window'],
        'serviceAccountEmail': json['service_account_email'] == null ? undefined : json['service_account_email'],
        'ttl': json['ttl'] == null ? undefined : json['ttl'],
    };
}

export function GoogleCloudConfigureRequestToJSON(json: any): GoogleCloudConfigureRequest {
    return GoogleCloudConfigureRequestToJSONTyped(json, false);
}

export function GoogleCloudConfigureRequestToJSONTyped(value?: GoogleCloudConfigureRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'credentials': value['credentials'],
        'disable_automated_rotation': value['disableAutomatedRotation'],
        'identity_token_audience': value['identityTokenAudience'],
        'identity_token_ttl': value['identityTokenTtl'],
        'max_ttl': value['maxTtl'],
        'rotation_period': value['rotationPeriod'],
        'rotation_schedule': value['rotationSchedule'],
        'rotation_window': value['rotationWindow'],
        'service_account_email': value['serviceAccountEmail'],
        'ttl': value['ttl'],
    };
}

