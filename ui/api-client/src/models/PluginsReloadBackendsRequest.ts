/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PluginsReloadBackendsRequest
 */
export interface PluginsReloadBackendsRequest {
    /**
     * The mount paths of the plugin backends to reload.
     * @type {Array<string>}
     * @memberof PluginsReloadBackendsRequest
     */
    mounts?: Array<string>;
    /**
     * The name of the plugin to reload, as registered in the plugin catalog.
     * @type {string}
     * @memberof PluginsReloadBackendsRequest
     */
    plugin?: string;
    /**
     * The scope for the reload operation. May be empty or "global".
     * @type {string}
     * @memberof PluginsReloadBackendsRequest
     */
    scope?: string;
}

/**
 * Check if a given object implements the PluginsReloadBackendsRequest interface.
 */
export function instanceOfPluginsReloadBackendsRequest(value: object): value is PluginsReloadBackendsRequest {
    return true;
}

export function PluginsReloadBackendsRequestFromJSON(json: any): PluginsReloadBackendsRequest {
    return PluginsReloadBackendsRequestFromJSONTyped(json, false);
}

export function PluginsReloadBackendsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginsReloadBackendsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'mounts': json['mounts'] == null ? undefined : json['mounts'],
        'plugin': json['plugin'] == null ? undefined : json['plugin'],
        'scope': json['scope'] == null ? undefined : json['scope'],
    };
}

export function PluginsReloadBackendsRequestToJSON(json: any): PluginsReloadBackendsRequest {
    return PluginsReloadBackendsRequestToJSONTyped(json, false);
}

export function PluginsReloadBackendsRequestToJSONTyped(value?: PluginsReloadBackendsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'mounts': value['mounts'],
        'plugin': value['plugin'],
        'scope': value['scope'],
    };
}

