/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KmipSignClientCertificateRequestRequest
 */
export interface KmipSignClientCertificateRequestRequest {
    /**
     * Certificate signing request (CSR) in PEM format
     * @type {string}
     * @memberof KmipSignClientCertificateRequestRequest
     */
    csr?: string;
    /**
     * Format to return certificate: `pem`, `pem_bundle`, or `der`. If `pem_bundle`, the `certificate` field will contain the private key, certificate, and ca_chain, concatenated.
     * @type {string}
     * @memberof KmipSignClientCertificateRequestRequest
     */
    format?: KmipSignClientCertificateRequestRequestFormatEnum;
}

/**
* @export
* @enum {string}
*/
export enum KmipSignClientCertificateRequestRequestFormatEnum {
    PEM = 'pem',
    DER = 'der',
    PEM_BUNDLE = 'pem_bundle'
}


/**
 * Check if a given object implements the KmipSignClientCertificateRequestRequest interface.
 */
export function instanceOfKmipSignClientCertificateRequestRequest(value: object): value is KmipSignClientCertificateRequestRequest {
    return true;
}

export function KmipSignClientCertificateRequestRequestFromJSON(json: any): KmipSignClientCertificateRequestRequest {
    return KmipSignClientCertificateRequestRequestFromJSONTyped(json, false);
}

export function KmipSignClientCertificateRequestRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): KmipSignClientCertificateRequestRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'csr': json['csr'] == null ? undefined : json['csr'],
        'format': json['format'] == null ? undefined : json['format'],
    };
}

export function KmipSignClientCertificateRequestRequestToJSON(json: any): KmipSignClientCertificateRequestRequest {
    return KmipSignClientCertificateRequestRequestToJSONTyped(json, false);
}

export function KmipSignClientCertificateRequestRequestToJSONTyped(value?: KmipSignClientCertificateRequestRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'csr': value['csr'],
        'format': value['format'],
    };
}

