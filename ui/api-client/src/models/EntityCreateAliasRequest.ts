/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EntityCreateAliasRequest
 */
export interface EntityCreateAliasRequest {
    /**
     * Entity ID to which this alias belongs
     * @type {string}
     * @memberof EntityCreateAliasRequest
     */
    canonicalId?: string;
    /**
     * User provided key-value pairs
     * @type {object}
     * @memberof EntityCreateAliasRequest
     */
    customMetadata?: object;
    /**
     * Entity ID to which this alias belongs. This field is deprecated, use canonical_id.
     * @type {string}
     * @memberof EntityCreateAliasRequest
     */
    entityId?: string;
    /**
     * ID of the entity alias. If set, updates the corresponding entity alias.
     * @type {string}
     * @memberof EntityCreateAliasRequest
     */
    id?: string;
    /**
     * Mount accessor to which this alias belongs to; unused for a modify
     * @type {string}
     * @memberof EntityCreateAliasRequest
     */
    mountAccessor?: string;
    /**
     * Name of the alias; unused for a modify
     * @type {string}
     * @memberof EntityCreateAliasRequest
     */
    name?: string;
}

/**
 * Check if a given object implements the EntityCreateAliasRequest interface.
 */
export function instanceOfEntityCreateAliasRequest(value: object): value is EntityCreateAliasRequest {
    return true;
}

export function EntityCreateAliasRequestFromJSON(json: any): EntityCreateAliasRequest {
    return EntityCreateAliasRequestFromJSONTyped(json, false);
}

export function EntityCreateAliasRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityCreateAliasRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'canonicalId': json['canonical_id'] == null ? undefined : json['canonical_id'],
        'customMetadata': json['custom_metadata'] == null ? undefined : json['custom_metadata'],
        'entityId': json['entity_id'] == null ? undefined : json['entity_id'],
        'id': json['id'] == null ? undefined : json['id'],
        'mountAccessor': json['mount_accessor'] == null ? undefined : json['mount_accessor'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function EntityCreateAliasRequestToJSON(json: any): EntityCreateAliasRequest {
    return EntityCreateAliasRequestToJSONTyped(json, false);
}

export function EntityCreateAliasRequestToJSONTyped(value?: EntityCreateAliasRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'canonical_id': value['canonicalId'],
        'custom_metadata': value['customMetadata'],
        'entity_id': value['entityId'],
        'id': value['id'],
        'mount_accessor': value['mountAccessor'],
        'name': value['name'],
    };
}

