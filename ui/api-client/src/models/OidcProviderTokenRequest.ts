/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OidcProviderTokenRequest
 */
export interface OidcProviderTokenRequest {
    /**
     * The ID of the requesting client.
     * @type {string}
     * @memberof OidcProviderTokenRequest
     */
    clientId?: string;
    /**
     * The secret of the requesting client.
     * @type {string}
     * @memberof OidcProviderTokenRequest
     */
    clientSecret?: string;
    /**
     * The authorization code received from the provider's authorization endpoint.
     * @type {string}
     * @memberof OidcProviderTokenRequest
     */
    code: string;
    /**
     * The code verifier associated with the authorization code.
     * @type {string}
     * @memberof OidcProviderTokenRequest
     */
    codeVerifier?: string;
    /**
     * The authorization grant type. The following grant types are supported: 'authorization_code'.
     * @type {string}
     * @memberof OidcProviderTokenRequest
     */
    grantType: string;
    /**
     * The callback location where the authentication response was sent.
     * @type {string}
     * @memberof OidcProviderTokenRequest
     */
    redirectUri: string;
}

/**
 * Check if a given object implements the OidcProviderTokenRequest interface.
 */
export function instanceOfOidcProviderTokenRequest(value: object): value is OidcProviderTokenRequest {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('grantType' in value) || value['grantType'] === undefined) return false;
    if (!('redirectUri' in value) || value['redirectUri'] === undefined) return false;
    return true;
}

export function OidcProviderTokenRequestFromJSON(json: any): OidcProviderTokenRequest {
    return OidcProviderTokenRequestFromJSONTyped(json, false);
}

export function OidcProviderTokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): OidcProviderTokenRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'clientId': json['client_id'] == null ? undefined : json['client_id'],
        'clientSecret': json['client_secret'] == null ? undefined : json['client_secret'],
        'code': json['code'],
        'codeVerifier': json['code_verifier'] == null ? undefined : json['code_verifier'],
        'grantType': json['grant_type'],
        'redirectUri': json['redirect_uri'],
    };
}

export function OidcProviderTokenRequestToJSON(json: any): OidcProviderTokenRequest {
    return OidcProviderTokenRequestToJSONTyped(json, false);
}

export function OidcProviderTokenRequestToJSONTyped(value?: OidcProviderTokenRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'client_id': value['clientId'],
        'client_secret': value['clientSecret'],
        'code': value['code'],
        'code_verifier': value['codeVerifier'],
        'grant_type': value['grantType'],
        'redirect_uri': value['redirectUri'],
    };
}

