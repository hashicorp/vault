/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UnsealRequest
 */
export interface UnsealRequest {
    /**
     * Specifies a single unseal key share. This is required unless reset is true.
     * @type {string}
     * @memberof UnsealRequest
     */
    key?: string;
    /**
     * Used to migrate the seal from shamir to autoseal or autoseal to shamir. Must be provided on all unseal key calls.
     * @type {boolean}
     * @memberof UnsealRequest
     */
    migrate?: boolean;
    /**
     * Specifies if previously-provided unseal keys are discarded and the unseal process is reset.
     * @type {boolean}
     * @memberof UnsealRequest
     */
    reset?: boolean;
}

/**
 * Check if a given object implements the UnsealRequest interface.
 */
export function instanceOfUnsealRequest(value: object): value is UnsealRequest {
    return true;
}

export function UnsealRequestFromJSON(json: any): UnsealRequest {
    return UnsealRequestFromJSONTyped(json, false);
}

export function UnsealRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnsealRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'key': json['key'] == null ? undefined : json['key'],
        'migrate': json['migrate'] == null ? undefined : json['migrate'],
        'reset': json['reset'] == null ? undefined : json['reset'],
    };
}

export function UnsealRequestToJSON(json: any): UnsealRequest {
    return UnsealRequestToJSONTyped(json, false);
}

export function UnsealRequestToJSONTyped(value?: UnsealRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'key': value['key'],
        'migrate': value['migrate'],
        'reset': value['reset'],
    };
}

