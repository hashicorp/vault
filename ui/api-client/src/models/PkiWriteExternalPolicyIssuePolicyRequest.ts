/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PkiWriteExternalPolicyIssuePolicyRequest
 */
export interface PkiWriteExternalPolicyIssuePolicyRequest {
    [key: string]: any | any;
    /**
     * Format for returned data. Can be "pem", "der", or "pem_bundle". If "pem_bundle", any private key and issuing cert will be appended to the certificate pem. If "der", the value will be base64 encoded. Defaults to "pem".
     * @type {string}
     * @memberof PkiWriteExternalPolicyIssuePolicyRequest
     */
    format?: PkiWriteExternalPolicyIssuePolicyRequestFormatEnum;
    /**
     * The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
     * @type {number}
     * @memberof PkiWriteExternalPolicyIssuePolicyRequest
     */
    keyBits?: number;
    /**
     * The type of key to use; defaults to RSA. "rsa" "ec" and "ed25519" are the only valid values.
     * @type {string}
     * @memberof PkiWriteExternalPolicyIssuePolicyRequest
     */
    keyType?: PkiWriteExternalPolicyIssuePolicyRequestKeyTypeEnum;
    /**
     * Format for the returned private key. Generally the default will be controlled by the "format" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to "pkcs8" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to "der".
     * @type {string}
     * @memberof PkiWriteExternalPolicyIssuePolicyRequest
     */
    privateKeyFormat?: PkiWriteExternalPolicyIssuePolicyRequestPrivateKeyFormatEnum;
    /**
     * Whether or not to remove self-signed CA certificates in the output of the ca_chain field.
     * @type {boolean}
     * @memberof PkiWriteExternalPolicyIssuePolicyRequest
     */
    removeRootsFromChain?: boolean;
}

/**
* @export
* @enum {string}
*/
export enum PkiWriteExternalPolicyIssuePolicyRequestFormatEnum {
    PEM = 'pem',
    DER = 'der',
    PEM_BUNDLE = 'pem_bundle'
}
/**
* @export
* @enum {string}
*/
export enum PkiWriteExternalPolicyIssuePolicyRequestKeyTypeEnum {
    RSA = 'rsa',
    EC = 'ec',
    ED25519 = 'ed25519'
}
/**
* @export
* @enum {string}
*/
export enum PkiWriteExternalPolicyIssuePolicyRequestPrivateKeyFormatEnum {
    DER = 'der',
    PEM = 'pem',
    PKCS8 = 'pkcs8'
}


/**
 * Check if a given object implements the PkiWriteExternalPolicyIssuePolicyRequest interface.
 */
export function instanceOfPkiWriteExternalPolicyIssuePolicyRequest(value: object): value is PkiWriteExternalPolicyIssuePolicyRequest {
    return true;
}

export function PkiWriteExternalPolicyIssuePolicyRequestFromJSON(json: any): PkiWriteExternalPolicyIssuePolicyRequest {
    return PkiWriteExternalPolicyIssuePolicyRequestFromJSONTyped(json, false);
}

export function PkiWriteExternalPolicyIssuePolicyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PkiWriteExternalPolicyIssuePolicyRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'format': json['format'] == null ? undefined : json['format'],
        'keyBits': json['key_bits'] == null ? undefined : json['key_bits'],
        'keyType': json['key_type'] == null ? undefined : json['key_type'],
        'privateKeyFormat': json['private_key_format'] == null ? undefined : json['private_key_format'],
        'removeRootsFromChain': json['remove_roots_from_chain'] == null ? undefined : json['remove_roots_from_chain'],
    };
}

export function PkiWriteExternalPolicyIssuePolicyRequestToJSON(json: any): PkiWriteExternalPolicyIssuePolicyRequest {
    return PkiWriteExternalPolicyIssuePolicyRequestToJSONTyped(json, false);
}

export function PkiWriteExternalPolicyIssuePolicyRequestToJSONTyped(value?: PkiWriteExternalPolicyIssuePolicyRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'format': value['format'],
        'key_bits': value['keyBits'],
        'key_type': value['keyType'],
        'private_key_format': value['privateKeyFormat'],
        'remove_roots_from_chain': value['removeRootsFromChain'],
    };
}

