/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SshConfigureCaRequest
 */
export interface SshConfigureCaRequest {
    /**
     * Generate SSH key pair internally rather than use the private_key and public_key fields.
     * @type {boolean}
     * @memberof SshConfigureCaRequest
     */
    generateSigningKey?: boolean;
    /**
     * Specifies the desired key bits when generating variable-length keys (such as when key_type="ssh-rsa") or which NIST P-curve to use when key_type="ec" (256, 384, or 521).
     * @type {number}
     * @memberof SshConfigureCaRequest
     */
    keyBits?: number;
    /**
     * Specifies the desired key type when generating; could be a OpenSSH key type identifier (ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, ecdsa-sha2-nistp521, or ssh-ed25519) or an algorithm (rsa, ec, ed25519).
     * @type {string}
     * @memberof SshConfigureCaRequest
     */
    keyType?: string;
    /**
     * Private half of the SSH key that will be used to sign certificates.
     * @type {string}
     * @memberof SshConfigureCaRequest
     */
    privateKey?: string;
    /**
     * Public half of the SSH key that will be used to sign certificates.
     * @type {string}
     * @memberof SshConfigureCaRequest
     */
    publicKey?: string;
}

/**
 * Check if a given object implements the SshConfigureCaRequest interface.
 */
export function instanceOfSshConfigureCaRequest(value: object): value is SshConfigureCaRequest {
    return true;
}

export function SshConfigureCaRequestFromJSON(json: any): SshConfigureCaRequest {
    return SshConfigureCaRequestFromJSONTyped(json, false);
}

export function SshConfigureCaRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SshConfigureCaRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'generateSigningKey': json['generate_signing_key'] == null ? undefined : json['generate_signing_key'],
        'keyBits': json['key_bits'] == null ? undefined : json['key_bits'],
        'keyType': json['key_type'] == null ? undefined : json['key_type'],
        'privateKey': json['private_key'] == null ? undefined : json['private_key'],
        'publicKey': json['public_key'] == null ? undefined : json['public_key'],
    };
}

export function SshConfigureCaRequestToJSON(json: any): SshConfigureCaRequest {
    return SshConfigureCaRequestToJSONTyped(json, false);
}

export function SshConfigureCaRequestToJSONTyped(value?: SshConfigureCaRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'generate_signing_key': value['generateSigningKey'],
        'key_bits': value['keyBits'],
        'key_type': value['keyType'],
        'private_key': value['privateKey'],
        'public_key': value['publicKey'],
    };
}

