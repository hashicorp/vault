/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransitImportKeyVersionRequest
 */
export interface TransitImportKeyVersionRequest {
    /**
     * The base64-encoded ciphertext of the keys. The AES key should be encrypted using OAEP with the wrapping key and then concatenated with the import key, wrapped by the AES key.
     * @type {string}
     * @memberof TransitImportKeyVersionRequest
     */
    ciphertext?: string;
    /**
     * The hash function used as a random oracle in the OAEP wrapping of the user-generated, ephemeral AES key. Can be one of "SHA1", "SHA224", "SHA256" (default), "SHA384", or "SHA512"
     * @type {string}
     * @memberof TransitImportKeyVersionRequest
     */
    hashFunction?: string;
    /**
     * The plaintext public key to be imported. If "ciphertext" is set, this field is ignored.
     * @type {string}
     * @memberof TransitImportKeyVersionRequest
     */
    publicKey?: string;
    /**
     * Key version to be updated, if left empty, a new version will be created unless a private key is specified and the 'Latest' key is missing a private key.
     * @type {number}
     * @memberof TransitImportKeyVersionRequest
     */
    version?: number;
}

/**
 * Check if a given object implements the TransitImportKeyVersionRequest interface.
 */
export function instanceOfTransitImportKeyVersionRequest(value: object): value is TransitImportKeyVersionRequest {
    return true;
}

export function TransitImportKeyVersionRequestFromJSON(json: any): TransitImportKeyVersionRequest {
    return TransitImportKeyVersionRequestFromJSONTyped(json, false);
}

export function TransitImportKeyVersionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransitImportKeyVersionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'ciphertext': json['ciphertext'] == null ? undefined : json['ciphertext'],
        'hashFunction': json['hash_function'] == null ? undefined : json['hash_function'],
        'publicKey': json['public_key'] == null ? undefined : json['public_key'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function TransitImportKeyVersionRequestToJSON(json: any): TransitImportKeyVersionRequest {
    return TransitImportKeyVersionRequestToJSONTyped(json, false);
}

export function TransitImportKeyVersionRequestToJSONTyped(value?: TransitImportKeyVersionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ciphertext': value['ciphertext'],
        'hash_function': value['hashFunction'],
        'public_key': value['publicKey'],
        'version': value['version'],
    };
}

