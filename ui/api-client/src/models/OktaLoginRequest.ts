/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OktaLoginRequest
 */
export interface OktaLoginRequest {
    /**
     * Nonce provided if performing login that requires number verification challenge. Logins through the vault login CLI command will automatically generate a nonce.
     * @type {string}
     * @memberof OktaLoginRequest
     */
    nonce?: string;
    /**
     * Password for this user.
     * @type {string}
     * @memberof OktaLoginRequest
     */
    password?: string;
    /**
     * Preferred factor provider.
     * @type {string}
     * @memberof OktaLoginRequest
     */
    provider?: string;
    /**
     * TOTP passcode.
     * @type {string}
     * @memberof OktaLoginRequest
     */
    totp?: string;
}

/**
 * Check if a given object implements the OktaLoginRequest interface.
 */
export function instanceOfOktaLoginRequest(value: object): value is OktaLoginRequest {
    return true;
}

export function OktaLoginRequestFromJSON(json: any): OktaLoginRequest {
    return OktaLoginRequestFromJSONTyped(json, false);
}

export function OktaLoginRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): OktaLoginRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'nonce': json['nonce'] == null ? undefined : json['nonce'],
        'password': json['password'] == null ? undefined : json['password'],
        'provider': json['provider'] == null ? undefined : json['provider'],
        'totp': json['totp'] == null ? undefined : json['totp'],
    };
}

export function OktaLoginRequestToJSON(json: any): OktaLoginRequest {
    return OktaLoginRequestToJSONTyped(json, false);
}

export function OktaLoginRequestToJSONTyped(value?: OktaLoginRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'nonce': value['nonce'],
        'password': value['password'],
        'provider': value['provider'],
        'totp': value['totp'],
    };
}

