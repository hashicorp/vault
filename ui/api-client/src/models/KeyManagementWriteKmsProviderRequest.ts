/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KeyManagementWriteKmsProviderRequest
 */
export interface KeyManagementWriteKmsProviderRequest {
    /**
     * The credentials to be used to authenticate with the specified provider. Keys and values will differ depending on the specified provider. Credentials may also be supplied as environment variables.
     * @type {object}
     * @memberof KeyManagementWriteKmsProviderRequest
     */
    credentials?: object;
    /**
     * Refers to a location to store keys in the specified provider. For provider “azurekeyvault”, the name of a Key Vault instance must be supplied. For provider “awskms”, the name of a region must be supplied. For provider “gcpckms”, the relative resource name of a key ring must be supplied. This parameter cannot be modified by an update operation after creation.
     * @type {string}
     * @memberof KeyManagementWriteKmsProviderRequest
     */
    keyCollection: string;
    /**
     * The name of the provider. Currently, "azurekeyvault", "awskms", and "gcpckms" are supported. This parameter cannot be modified by an update operation after creation.
     * @type {string}
     * @memberof KeyManagementWriteKmsProviderRequest
     */
    provider: KeyManagementWriteKmsProviderRequestProviderEnum;
}

/**
* @export
* @enum {string}
*/
export enum KeyManagementWriteKmsProviderRequestProviderEnum {
    AZUREKEYVAULT = 'azurekeyvault',
    AWSKMS = 'awskms',
    GCPCKMS = 'gcpckms'
}


/**
 * Check if a given object implements the KeyManagementWriteKmsProviderRequest interface.
 */
export function instanceOfKeyManagementWriteKmsProviderRequest(value: object): value is KeyManagementWriteKmsProviderRequest {
    if (!('keyCollection' in value) || value['keyCollection'] === undefined) return false;
    if (!('provider' in value) || value['provider'] === undefined) return false;
    return true;
}

export function KeyManagementWriteKmsProviderRequestFromJSON(json: any): KeyManagementWriteKmsProviderRequest {
    return KeyManagementWriteKmsProviderRequestFromJSONTyped(json, false);
}

export function KeyManagementWriteKmsProviderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyManagementWriteKmsProviderRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'credentials': json['credentials'] == null ? undefined : json['credentials'],
        'keyCollection': json['key_collection'],
        'provider': json['provider'],
    };
}

export function KeyManagementWriteKmsProviderRequestToJSON(json: any): KeyManagementWriteKmsProviderRequest {
    return KeyManagementWriteKmsProviderRequestToJSONTyped(json, false);
}

export function KeyManagementWriteKmsProviderRequestToJSONTyped(value?: KeyManagementWriteKmsProviderRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'credentials': value['credentials'],
        'key_collection': value['keyCollection'],
        'provider': value['provider'],
    };
}

