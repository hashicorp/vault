/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface JwtOidcRequestAuthorizationUrlRequest
 */
export interface JwtOidcRequestAuthorizationUrlRequest {
    /**
     * Optional client-provided nonce that must match during callback, if present.
     * @type {string}
     * @memberof JwtOidcRequestAuthorizationUrlRequest
     */
    clientNonce?: string;
    /**
     * The OAuth redirect_uri to use in the authorization URL.
     * @type {string}
     * @memberof JwtOidcRequestAuthorizationUrlRequest
     */
    redirectUri?: string;
    /**
     * The role to issue an OIDC authorization URL against.
     * @type {string}
     * @memberof JwtOidcRequestAuthorizationUrlRequest
     */
    role?: string;
}

/**
 * Check if a given object implements the JwtOidcRequestAuthorizationUrlRequest interface.
 */
export function instanceOfJwtOidcRequestAuthorizationUrlRequest(value: object): value is JwtOidcRequestAuthorizationUrlRequest {
    return true;
}

export function JwtOidcRequestAuthorizationUrlRequestFromJSON(json: any): JwtOidcRequestAuthorizationUrlRequest {
    return JwtOidcRequestAuthorizationUrlRequestFromJSONTyped(json, false);
}

export function JwtOidcRequestAuthorizationUrlRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): JwtOidcRequestAuthorizationUrlRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'clientNonce': json['client_nonce'] == null ? undefined : json['client_nonce'],
        'redirectUri': json['redirect_uri'] == null ? undefined : json['redirect_uri'],
        'role': json['role'] == null ? undefined : json['role'],
    };
}

export function JwtOidcRequestAuthorizationUrlRequestToJSON(json: any): JwtOidcRequestAuthorizationUrlRequest {
    return JwtOidcRequestAuthorizationUrlRequestToJSONTyped(json, false);
}

export function JwtOidcRequestAuthorizationUrlRequestToJSONTyped(value?: JwtOidcRequestAuthorizationUrlRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'client_nonce': value['clientNonce'],
        'redirect_uri': value['redirectUri'],
        'role': value['role'],
    };
}

