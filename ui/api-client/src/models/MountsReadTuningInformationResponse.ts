/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MountsReadTuningInformationResponse
 */
export interface MountsReadTuningInformationResponse {
    /**
     * 
     * @type {Array<string>}
     * @memberof MountsReadTuningInformationResponse
     */
    allowedManagedKeys?: Array<string>;
    /**
     * A list of headers to whitelist and allow a plugin to set on responses.
     * @type {Array<string>}
     * @memberof MountsReadTuningInformationResponse
     */
    allowedResponseHeaders?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof MountsReadTuningInformationResponse
     */
    auditNonHmacRequestKeys?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof MountsReadTuningInformationResponse
     */
    auditNonHmacResponseKeys?: Array<string>;
    /**
     * The default lease TTL for this mount.
     * @type {number}
     * @memberof MountsReadTuningInformationResponse
     */
    defaultLeaseTtl?: number;
    /**
     * A list of auth accessors that the mount is allowed to delegate authentication too
     * @type {Array<string>}
     * @memberof MountsReadTuningInformationResponse
     */
    delegatedAuthAccessors?: Array<string>;
    /**
     * User-friendly description for this credential backend.
     * @type {string}
     * @memberof MountsReadTuningInformationResponse
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MountsReadTuningInformationResponse
     */
    externalEntropyAccess?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MountsReadTuningInformationResponse
     */
    forceNoCache?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MountsReadTuningInformationResponse
     */
    identityTokenKey?: string;
    /**
     * 
     * @type {string}
     * @memberof MountsReadTuningInformationResponse
     */
    listingVisibility?: string;
    /**
     * The max lease TTL for this mount.
     * @type {number}
     * @memberof MountsReadTuningInformationResponse
     */
    maxLeaseTtl?: number;
    /**
     * The options to pass into the backend. Should be a json object with string keys and values.
     * @type {object}
     * @memberof MountsReadTuningInformationResponse
     */
    options?: object;
    /**
     * 
     * @type {Array<string>}
     * @memberof MountsReadTuningInformationResponse
     */
    passthroughRequestHeaders?: Array<string>;
    /**
     * The semantic version of the plugin to use, or image tag if oci_image is provided.
     * @type {string}
     * @memberof MountsReadTuningInformationResponse
     */
    pluginVersion?: string;
    /**
     * The type of token to issue (service or batch).
     * @type {string}
     * @memberof MountsReadTuningInformationResponse
     */
    tokenType?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MountsReadTuningInformationResponse
     */
    trimRequestTrailingSlashes?: boolean;
    /**
     * 
     * @type {number}
     * @memberof MountsReadTuningInformationResponse
     */
    userLockoutCounterResetDuration?: number;
    /**
     * 
     * @type {boolean}
     * @memberof MountsReadTuningInformationResponse
     */
    userLockoutDisable?: boolean;
    /**
     * 
     * @type {number}
     * @memberof MountsReadTuningInformationResponse
     */
    userLockoutDuration?: number;
    /**
     * 
     * @type {number}
     * @memberof MountsReadTuningInformationResponse
     */
    userLockoutThreshold?: number;
}

/**
 * Check if a given object implements the MountsReadTuningInformationResponse interface.
 */
export function instanceOfMountsReadTuningInformationResponse(value: object): value is MountsReadTuningInformationResponse {
    return true;
}

export function MountsReadTuningInformationResponseFromJSON(json: any): MountsReadTuningInformationResponse {
    return MountsReadTuningInformationResponseFromJSONTyped(json, false);
}

export function MountsReadTuningInformationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MountsReadTuningInformationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'allowedManagedKeys': json['allowed_managed_keys'] == null ? undefined : json['allowed_managed_keys'],
        'allowedResponseHeaders': json['allowed_response_headers'] == null ? undefined : json['allowed_response_headers'],
        'auditNonHmacRequestKeys': json['audit_non_hmac_request_keys'] == null ? undefined : json['audit_non_hmac_request_keys'],
        'auditNonHmacResponseKeys': json['audit_non_hmac_response_keys'] == null ? undefined : json['audit_non_hmac_response_keys'],
        'defaultLeaseTtl': json['default_lease_ttl'] == null ? undefined : json['default_lease_ttl'],
        'delegatedAuthAccessors': json['delegated_auth_accessors'] == null ? undefined : json['delegated_auth_accessors'],
        'description': json['description'] == null ? undefined : json['description'],
        'externalEntropyAccess': json['external_entropy_access'] == null ? undefined : json['external_entropy_access'],
        'forceNoCache': json['force_no_cache'] == null ? undefined : json['force_no_cache'],
        'identityTokenKey': json['identity_token_key'] == null ? undefined : json['identity_token_key'],
        'listingVisibility': json['listing_visibility'] == null ? undefined : json['listing_visibility'],
        'maxLeaseTtl': json['max_lease_ttl'] == null ? undefined : json['max_lease_ttl'],
        'options': json['options'] == null ? undefined : json['options'],
        'passthroughRequestHeaders': json['passthrough_request_headers'] == null ? undefined : json['passthrough_request_headers'],
        'pluginVersion': json['plugin_version'] == null ? undefined : json['plugin_version'],
        'tokenType': json['token_type'] == null ? undefined : json['token_type'],
        'trimRequestTrailingSlashes': json['trim_request_trailing_slashes'] == null ? undefined : json['trim_request_trailing_slashes'],
        'userLockoutCounterResetDuration': json['user_lockout_counter_reset_duration'] == null ? undefined : json['user_lockout_counter_reset_duration'],
        'userLockoutDisable': json['user_lockout_disable'] == null ? undefined : json['user_lockout_disable'],
        'userLockoutDuration': json['user_lockout_duration'] == null ? undefined : json['user_lockout_duration'],
        'userLockoutThreshold': json['user_lockout_threshold'] == null ? undefined : json['user_lockout_threshold'],
    };
}

export function MountsReadTuningInformationResponseToJSON(json: any): MountsReadTuningInformationResponse {
    return MountsReadTuningInformationResponseToJSONTyped(json, false);
}

export function MountsReadTuningInformationResponseToJSONTyped(value?: MountsReadTuningInformationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowed_managed_keys': value['allowedManagedKeys'],
        'allowed_response_headers': value['allowedResponseHeaders'],
        'audit_non_hmac_request_keys': value['auditNonHmacRequestKeys'],
        'audit_non_hmac_response_keys': value['auditNonHmacResponseKeys'],
        'default_lease_ttl': value['defaultLeaseTtl'],
        'delegated_auth_accessors': value['delegatedAuthAccessors'],
        'description': value['description'],
        'external_entropy_access': value['externalEntropyAccess'],
        'force_no_cache': value['forceNoCache'],
        'identity_token_key': value['identityTokenKey'],
        'listing_visibility': value['listingVisibility'],
        'max_lease_ttl': value['maxLeaseTtl'],
        'options': value['options'],
        'passthrough_request_headers': value['passthroughRequestHeaders'],
        'plugin_version': value['pluginVersion'],
        'token_type': value['tokenType'],
        'trim_request_trailing_slashes': value['trimRequestTrailingSlashes'],
        'user_lockout_counter_reset_duration': value['userLockoutCounterResetDuration'],
        'user_lockout_disable': value['userLockoutDisable'],
        'user_lockout_duration': value['userLockoutDuration'],
        'user_lockout_threshold': value['userLockoutThreshold'],
    };
}

