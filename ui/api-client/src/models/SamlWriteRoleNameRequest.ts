/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SamlWriteRoleNameRequest
 */
export interface SamlWriteRoleNameRequest {
    /**
     * Mapping of attribute names to values to assert exist in the SAML Response's Assertion.
     * @type {object}
     * @memberof SamlWriteRoleNameRequest
     */
    boundAttributes?: object;
    /**
     * The type of matching assertion to perform on bound_attributes key-value pairs. If 'string', requires a direct string match in values. If 'glob', allows for wildcard matching using the '*' character in values.
     * @type {string}
     * @memberof SamlWriteRoleNameRequest
     */
    boundAttributesType?: SamlWriteRoleNameRequestBoundAttributesTypeEnum;
    /**
     * The subject to assert is in the SAML Response. The subject in theSAML Response needs to match one of the values configured.
     * @type {Array<string>}
     * @memberof SamlWriteRoleNameRequest
     */
    boundSubjects?: Array<string>;
    /**
     * The type of matching assertion to perform on bound_subject. If 'string', requires a direct string match. If 'glob', allows for wildcardmatching using the '*' character.
     * @type {string}
     * @memberof SamlWriteRoleNameRequest
     */
    boundSubjectsType?: SamlWriteRoleNameRequestBoundSubjectsTypeEnum;
    /**
     * The attribute to use for Vault Identity group alias names.
     * @type {string}
     * @memberof SamlWriteRoleNameRequest
     */
    groupsAttribute?: string;
    /**
     * Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
     * @type {Array<string>}
     * @memberof SamlWriteRoleNameRequest
     */
    tokenBoundCidrs?: Array<string>;
    /**
     * If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
     * @type {string}
     * @memberof SamlWriteRoleNameRequest
     */
    tokenExplicitMaxTtl?: string;
    /**
     * The maximum lifetime of the generated token
     * @type {string}
     * @memberof SamlWriteRoleNameRequest
     */
    tokenMaxTtl?: string;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     * @type {boolean}
     * @memberof SamlWriteRoleNameRequest
     */
    tokenNoDefaultPolicy?: boolean;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     * @type {number}
     * @memberof SamlWriteRoleNameRequest
     */
    tokenNumUses?: number;
    /**
     * If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. "24h").
     * @type {string}
     * @memberof SamlWriteRoleNameRequest
     */
    tokenPeriod?: string;
    /**
     * Comma-separated list of policies
     * @type {Array<string>}
     * @memberof SamlWriteRoleNameRequest
     */
    tokenPolicies?: Array<string>;
    /**
     * The initial ttl of the token to generate
     * @type {string}
     * @memberof SamlWriteRoleNameRequest
     */
    tokenTtl?: string;
    /**
     * The type of token to generate, service or batch
     * @type {string}
     * @memberof SamlWriteRoleNameRequest
     */
    tokenType?: string;
}

/**
* @export
* @enum {string}
*/
export enum SamlWriteRoleNameRequestBoundAttributesTypeEnum {
    STRING = 'string',
    GLOB = 'glob'
}
/**
* @export
* @enum {string}
*/
export enum SamlWriteRoleNameRequestBoundSubjectsTypeEnum {
    STRING = 'string',
    GLOB = 'glob'
}


/**
 * Check if a given object implements the SamlWriteRoleNameRequest interface.
 */
export function instanceOfSamlWriteRoleNameRequest(value: object): value is SamlWriteRoleNameRequest {
    return true;
}

export function SamlWriteRoleNameRequestFromJSON(json: any): SamlWriteRoleNameRequest {
    return SamlWriteRoleNameRequestFromJSONTyped(json, false);
}

export function SamlWriteRoleNameRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SamlWriteRoleNameRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'boundAttributes': json['bound_attributes'] == null ? undefined : json['bound_attributes'],
        'boundAttributesType': json['bound_attributes_type'] == null ? undefined : json['bound_attributes_type'],
        'boundSubjects': json['bound_subjects'] == null ? undefined : json['bound_subjects'],
        'boundSubjectsType': json['bound_subjects_type'] == null ? undefined : json['bound_subjects_type'],
        'groupsAttribute': json['groups_attribute'] == null ? undefined : json['groups_attribute'],
        'tokenBoundCidrs': json['token_bound_cidrs'] == null ? undefined : json['token_bound_cidrs'],
        'tokenExplicitMaxTtl': json['token_explicit_max_ttl'] == null ? undefined : json['token_explicit_max_ttl'],
        'tokenMaxTtl': json['token_max_ttl'] == null ? undefined : json['token_max_ttl'],
        'tokenNoDefaultPolicy': json['token_no_default_policy'] == null ? undefined : json['token_no_default_policy'],
        'tokenNumUses': json['token_num_uses'] == null ? undefined : json['token_num_uses'],
        'tokenPeriod': json['token_period'] == null ? undefined : json['token_period'],
        'tokenPolicies': json['token_policies'] == null ? undefined : json['token_policies'],
        'tokenTtl': json['token_ttl'] == null ? undefined : json['token_ttl'],
        'tokenType': json['token_type'] == null ? undefined : json['token_type'],
    };
}

export function SamlWriteRoleNameRequestToJSON(json: any): SamlWriteRoleNameRequest {
    return SamlWriteRoleNameRequestToJSONTyped(json, false);
}

export function SamlWriteRoleNameRequestToJSONTyped(value?: SamlWriteRoleNameRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bound_attributes': value['boundAttributes'],
        'bound_attributes_type': value['boundAttributesType'],
        'bound_subjects': value['boundSubjects'],
        'bound_subjects_type': value['boundSubjectsType'],
        'groups_attribute': value['groupsAttribute'],
        'token_bound_cidrs': value['tokenBoundCidrs'],
        'token_explicit_max_ttl': value['tokenExplicitMaxTtl'],
        'token_max_ttl': value['tokenMaxTtl'],
        'token_no_default_policy': value['tokenNoDefaultPolicy'],
        'token_num_uses': value['tokenNumUses'],
        'token_period': value['tokenPeriod'],
        'token_policies': value['tokenPolicies'],
        'token_ttl': value['tokenTtl'],
        'token_type': value['tokenType'],
    };
}

