/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RabbitMqWriteRoleRequest
 */
export interface RabbitMqWriteRoleRequest {
    /**
     * Comma-separated list of tags for this role.
     * @type {string}
     * @memberof RabbitMqWriteRoleRequest
     */
    tags?: string;
    /**
     * A nested map of virtual hosts and exchanges to topic permissions.
     * @type {string}
     * @memberof RabbitMqWriteRoleRequest
     */
    vhostTopics?: string;
    /**
     * A map of virtual hosts to permissions.
     * @type {string}
     * @memberof RabbitMqWriteRoleRequest
     */
    vhosts?: string;
}

/**
 * Check if a given object implements the RabbitMqWriteRoleRequest interface.
 */
export function instanceOfRabbitMqWriteRoleRequest(value: object): value is RabbitMqWriteRoleRequest {
    return true;
}

export function RabbitMqWriteRoleRequestFromJSON(json: any): RabbitMqWriteRoleRequest {
    return RabbitMqWriteRoleRequestFromJSONTyped(json, false);
}

export function RabbitMqWriteRoleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RabbitMqWriteRoleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'tags': json['tags'] == null ? undefined : json['tags'],
        'vhostTopics': json['vhost_topics'] == null ? undefined : json['vhost_topics'],
        'vhosts': json['vhosts'] == null ? undefined : json['vhosts'],
    };
}

export function RabbitMqWriteRoleRequestToJSON(json: any): RabbitMqWriteRoleRequest {
    return RabbitMqWriteRoleRequestToJSONTyped(json, false);
}

export function RabbitMqWriteRoleRequestToJSONTyped(value?: RabbitMqWriteRoleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tags': value['tags'],
        'vhost_topics': value['vhostTopics'],
        'vhosts': value['vhosts'],
    };
}

