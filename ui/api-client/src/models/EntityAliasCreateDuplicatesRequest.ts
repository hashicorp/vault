/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EntityAliasCreateDuplicatesRequest
 */
export interface EntityAliasCreateDuplicatesRequest {
    /**
     * The canonical entity ID to attach the local alias to
     * @type {string}
     * @memberof EntityAliasCreateDuplicatesRequest
     */
    canonicalId?: string;
    /**
     * Metadata
     * @type {object}
     * @memberof EntityAliasCreateDuplicatesRequest
     */
    metadata?: object;
    /**
     * Mount accessor ID for the alias
     * @type {string}
     * @memberof EntityAliasCreateDuplicatesRequest
     */
    mountAccessor?: string;
    /**
     * Name of the entities to create
     * @type {string}
     * @memberof EntityAliasCreateDuplicatesRequest
     */
    name?: string;
    /**
     * NamespaceID of the entities to create
     * @type {string}
     * @memberof EntityAliasCreateDuplicatesRequest
     */
    namespaceId?: string;
}

/**
 * Check if a given object implements the EntityAliasCreateDuplicatesRequest interface.
 */
export function instanceOfEntityAliasCreateDuplicatesRequest(value: object): value is EntityAliasCreateDuplicatesRequest {
    return true;
}

export function EntityAliasCreateDuplicatesRequestFromJSON(json: any): EntityAliasCreateDuplicatesRequest {
    return EntityAliasCreateDuplicatesRequestFromJSONTyped(json, false);
}

export function EntityAliasCreateDuplicatesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityAliasCreateDuplicatesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'canonicalId': json['canonical_id'] == null ? undefined : json['canonical_id'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'mountAccessor': json['mount_accessor'] == null ? undefined : json['mount_accessor'],
        'name': json['name'] == null ? undefined : json['name'],
        'namespaceId': json['namespace_id'] == null ? undefined : json['namespace_id'],
    };
}

export function EntityAliasCreateDuplicatesRequestToJSON(json: any): EntityAliasCreateDuplicatesRequest {
    return EntityAliasCreateDuplicatesRequestToJSONTyped(json, false);
}

export function EntityAliasCreateDuplicatesRequestToJSONTyped(value?: EntityAliasCreateDuplicatesRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'canonical_id': value['canonicalId'],
        'metadata': value['metadata'],
        'mount_accessor': value['mountAccessor'],
        'name': value['name'],
        'namespace_id': value['namespaceId'],
    };
}

