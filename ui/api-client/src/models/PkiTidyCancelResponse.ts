/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PkiTidyCancelResponse
 */
export interface PkiTidyCancelResponse {
    /**
     * The number of revoked acme accounts removed
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    acmeAccountDeletedCount?: number;
    /**
     * The number of unused acme accounts revoked
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    acmeAccountRevokedCount?: number;
    /**
     * Safety buffer after creation after which accounts lacking orders are revoked
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    acmeAccountSafetyBuffer?: number;
    /**
     * The number of expired, unused acme orders removed
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    acmeOrdersDeletedCount?: number;
    /**
     * The number of metadata entries removed
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    certMetadataDeletedCount?: number;
    /**
     * The number of certificate storage entries deleted
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    certStoreDeletedCount?: number;
    /**
     * The number of CMPv2 nonces removed
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    cmpv2NonceDeletedCount?: number;
    /**
     * 
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    crossRevokedCertDeletedCount?: number;
    /**
     * The number of revoked certificate entries deleted
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    currentCertStoreCount?: number;
    /**
     * The number of revoked certificate entries deleted
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    currentRevokedCertCount?: number;
    /**
     * The error message
     * @type {string}
     * @memberof PkiTidyCancelResponse
     */
    error?: string;
    /**
     * 
     * @type {string}
     * @memberof PkiTidyCancelResponse
     */
    internalBackendUuid?: string;
    /**
     * Issuer safety buffer
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    issuerSafetyBuffer?: number;
    /**
     * Time the last auto-tidy operation finished
     * @type {string}
     * @memberof PkiTidyCancelResponse
     */
    lastAutoTidyFinished?: string;
    /**
     * Message of the operation
     * @type {string}
     * @memberof PkiTidyCancelResponse
     */
    message?: string;
    /**
     * 
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    missingIssuerCertCount?: number;
    /**
     * Duration to pause between tidying certificates
     * @type {string}
     * @memberof PkiTidyCancelResponse
     */
    pauseDuration?: string;
    /**
     * 
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    revocationQueueDeletedCount?: number;
    /**
     * Revocation queue safety buffer
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    revocationQueueSafetyBuffer?: number;
    /**
     * The number of revoked certificate entries deleted
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    revokedCertDeletedCount?: number;
    /**
     * Safety buffer time duration
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    safetyBuffer?: number;
    /**
     * One of Inactive, Running, Finished, or Error
     * @type {string}
     * @memberof PkiTidyCancelResponse
     */
    state?: string;
    /**
     * Tidy Unused Acme Accounts, and Orders
     * @type {boolean}
     * @memberof PkiTidyCancelResponse
     */
    tidyAcme?: boolean;
    /**
     * Tidy cert metadata
     * @type {boolean}
     * @memberof PkiTidyCancelResponse
     */
    tidyCertMetadata?: boolean;
    /**
     * Tidy certificate store
     * @type {boolean}
     * @memberof PkiTidyCancelResponse
     */
    tidyCertStore?: boolean;
    /**
     * Tidy CMPv2 nonce store
     * @type {boolean}
     * @memberof PkiTidyCancelResponse
     */
    tidyCmpv2NonceStore?: boolean;
    /**
     * Tidy the cross-cluster revoked certificate store
     * @type {boolean}
     * @memberof PkiTidyCancelResponse
     */
    tidyCrossClusterRevokedCerts?: boolean;
    /**
     * Tidy expired issuers
     * @type {boolean}
     * @memberof PkiTidyCancelResponse
     */
    tidyExpiredIssuers?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PkiTidyCancelResponse
     */
    tidyMoveLegacyCaBundle?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PkiTidyCancelResponse
     */
    tidyRevocationQueue?: boolean;
    /**
     * Tidy revoked certificate issuer associations
     * @type {boolean}
     * @memberof PkiTidyCancelResponse
     */
    tidyRevokedCertIssuerAssociations?: boolean;
    /**
     * Tidy revoked certificates
     * @type {boolean}
     * @memberof PkiTidyCancelResponse
     */
    tidyRevokedCerts?: boolean;
    /**
     * Time the operation finished
     * @type {string}
     * @memberof PkiTidyCancelResponse
     */
    timeFinished?: string;
    /**
     * Time the operation started
     * @type {string}
     * @memberof PkiTidyCancelResponse
     */
    timeStarted?: string;
    /**
     * Total number of acme accounts iterated over
     * @type {number}
     * @memberof PkiTidyCancelResponse
     */
    totalAcmeAccountCount?: number;
}

/**
 * Check if a given object implements the PkiTidyCancelResponse interface.
 */
export function instanceOfPkiTidyCancelResponse(value: object): value is PkiTidyCancelResponse {
    return true;
}

export function PkiTidyCancelResponseFromJSON(json: any): PkiTidyCancelResponse {
    return PkiTidyCancelResponseFromJSONTyped(json, false);
}

export function PkiTidyCancelResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PkiTidyCancelResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'acmeAccountDeletedCount': json['acme_account_deleted_count'] == null ? undefined : json['acme_account_deleted_count'],
        'acmeAccountRevokedCount': json['acme_account_revoked_count'] == null ? undefined : json['acme_account_revoked_count'],
        'acmeAccountSafetyBuffer': json['acme_account_safety_buffer'] == null ? undefined : json['acme_account_safety_buffer'],
        'acmeOrdersDeletedCount': json['acme_orders_deleted_count'] == null ? undefined : json['acme_orders_deleted_count'],
        'certMetadataDeletedCount': json['cert_metadata_deleted_count'] == null ? undefined : json['cert_metadata_deleted_count'],
        'certStoreDeletedCount': json['cert_store_deleted_count'] == null ? undefined : json['cert_store_deleted_count'],
        'cmpv2NonceDeletedCount': json['cmpv2_nonce_deleted_count'] == null ? undefined : json['cmpv2_nonce_deleted_count'],
        'crossRevokedCertDeletedCount': json['cross_revoked_cert_deleted_count'] == null ? undefined : json['cross_revoked_cert_deleted_count'],
        'currentCertStoreCount': json['current_cert_store_count'] == null ? undefined : json['current_cert_store_count'],
        'currentRevokedCertCount': json['current_revoked_cert_count'] == null ? undefined : json['current_revoked_cert_count'],
        'error': json['error'] == null ? undefined : json['error'],
        'internalBackendUuid': json['internal_backend_uuid'] == null ? undefined : json['internal_backend_uuid'],
        'issuerSafetyBuffer': json['issuer_safety_buffer'] == null ? undefined : json['issuer_safety_buffer'],
        'lastAutoTidyFinished': json['last_auto_tidy_finished'] == null ? undefined : json['last_auto_tidy_finished'],
        'message': json['message'] == null ? undefined : json['message'],
        'missingIssuerCertCount': json['missing_issuer_cert_count'] == null ? undefined : json['missing_issuer_cert_count'],
        'pauseDuration': json['pause_duration'] == null ? undefined : json['pause_duration'],
        'revocationQueueDeletedCount': json['revocation_queue_deleted_count'] == null ? undefined : json['revocation_queue_deleted_count'],
        'revocationQueueSafetyBuffer': json['revocation_queue_safety_buffer'] == null ? undefined : json['revocation_queue_safety_buffer'],
        'revokedCertDeletedCount': json['revoked_cert_deleted_count'] == null ? undefined : json['revoked_cert_deleted_count'],
        'safetyBuffer': json['safety_buffer'] == null ? undefined : json['safety_buffer'],
        'state': json['state'] == null ? undefined : json['state'],
        'tidyAcme': json['tidy_acme'] == null ? undefined : json['tidy_acme'],
        'tidyCertMetadata': json['tidy_cert_metadata'] == null ? undefined : json['tidy_cert_metadata'],
        'tidyCertStore': json['tidy_cert_store'] == null ? undefined : json['tidy_cert_store'],
        'tidyCmpv2NonceStore': json['tidy_cmpv2_nonce_store'] == null ? undefined : json['tidy_cmpv2_nonce_store'],
        'tidyCrossClusterRevokedCerts': json['tidy_cross_cluster_revoked_certs'] == null ? undefined : json['tidy_cross_cluster_revoked_certs'],
        'tidyExpiredIssuers': json['tidy_expired_issuers'] == null ? undefined : json['tidy_expired_issuers'],
        'tidyMoveLegacyCaBundle': json['tidy_move_legacy_ca_bundle'] == null ? undefined : json['tidy_move_legacy_ca_bundle'],
        'tidyRevocationQueue': json['tidy_revocation_queue'] == null ? undefined : json['tidy_revocation_queue'],
        'tidyRevokedCertIssuerAssociations': json['tidy_revoked_cert_issuer_associations'] == null ? undefined : json['tidy_revoked_cert_issuer_associations'],
        'tidyRevokedCerts': json['tidy_revoked_certs'] == null ? undefined : json['tidy_revoked_certs'],
        'timeFinished': json['time_finished'] == null ? undefined : json['time_finished'],
        'timeStarted': json['time_started'] == null ? undefined : json['time_started'],
        'totalAcmeAccountCount': json['total_acme_account_count'] == null ? undefined : json['total_acme_account_count'],
    };
}

export function PkiTidyCancelResponseToJSON(json: any): PkiTidyCancelResponse {
    return PkiTidyCancelResponseToJSONTyped(json, false);
}

export function PkiTidyCancelResponseToJSONTyped(value?: PkiTidyCancelResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'acme_account_deleted_count': value['acmeAccountDeletedCount'],
        'acme_account_revoked_count': value['acmeAccountRevokedCount'],
        'acme_account_safety_buffer': value['acmeAccountSafetyBuffer'],
        'acme_orders_deleted_count': value['acmeOrdersDeletedCount'],
        'cert_metadata_deleted_count': value['certMetadataDeletedCount'],
        'cert_store_deleted_count': value['certStoreDeletedCount'],
        'cmpv2_nonce_deleted_count': value['cmpv2NonceDeletedCount'],
        'cross_revoked_cert_deleted_count': value['crossRevokedCertDeletedCount'],
        'current_cert_store_count': value['currentCertStoreCount'],
        'current_revoked_cert_count': value['currentRevokedCertCount'],
        'error': value['error'],
        'internal_backend_uuid': value['internalBackendUuid'],
        'issuer_safety_buffer': value['issuerSafetyBuffer'],
        'last_auto_tidy_finished': value['lastAutoTidyFinished'],
        'message': value['message'],
        'missing_issuer_cert_count': value['missingIssuerCertCount'],
        'pause_duration': value['pauseDuration'],
        'revocation_queue_deleted_count': value['revocationQueueDeletedCount'],
        'revocation_queue_safety_buffer': value['revocationQueueSafetyBuffer'],
        'revoked_cert_deleted_count': value['revokedCertDeletedCount'],
        'safety_buffer': value['safetyBuffer'],
        'state': value['state'],
        'tidy_acme': value['tidyAcme'],
        'tidy_cert_metadata': value['tidyCertMetadata'],
        'tidy_cert_store': value['tidyCertStore'],
        'tidy_cmpv2_nonce_store': value['tidyCmpv2NonceStore'],
        'tidy_cross_cluster_revoked_certs': value['tidyCrossClusterRevokedCerts'],
        'tidy_expired_issuers': value['tidyExpiredIssuers'],
        'tidy_move_legacy_ca_bundle': value['tidyMoveLegacyCaBundle'],
        'tidy_revocation_queue': value['tidyRevocationQueue'],
        'tidy_revoked_cert_issuer_associations': value['tidyRevokedCertIssuerAssociations'],
        'tidy_revoked_certs': value['tidyRevokedCerts'],
        'time_finished': value['timeFinished'],
        'time_started': value['timeStarted'],
        'total_acme_account_count': value['totalAcmeAccountCount'],
    };
}

