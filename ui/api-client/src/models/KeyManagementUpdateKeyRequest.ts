/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KeyManagementUpdateKeyRequest
 */
export interface KeyManagementUpdateKeyRequest {
    /**
     * Specifies if the key is allowed to be deleted. This parameter can only be specified during an update operation.
     * @type {boolean}
     * @memberof KeyManagementUpdateKeyRequest
     */
    deletionAllowed?: boolean;
    /**
     * Specifies the minimum version of the key that is enabled. All versions less than the specified value will be disabled. If set to zero, all versions of the key will be enabled. This parameter can only be specified during an update operation.
     * @type {number}
     * @memberof KeyManagementUpdateKeyRequest
     */
    minEnabledVersion?: number;
    /**
     * Specifies the type of key to create. Currently, "rsa-2048" (asymmetric), "rsa-3072" (asymmetric), "rsa-4096" (asymmetric), "ecdsa-p256" (asymmetric), "ecdsa-p384" (asymmetric), "ecdsa-p521" (asymmetric), and "aes256-gcm96" (symmetric) are supported. The default is "rsa-2048". This parameter cannot be modified by an update operation after creation.
     * @type {string}
     * @memberof KeyManagementUpdateKeyRequest
     */
    type?: KeyManagementUpdateKeyRequestTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum KeyManagementUpdateKeyRequestTypeEnum {
    RSA_2048 = 'rsa-2048',
    RSA_3072 = 'rsa-3072',
    RSA_4096 = 'rsa-4096',
    ECDSA_P256 = 'ecdsa-p256',
    ECDSA_P384 = 'ecdsa-p384',
    ECDSA_P521 = 'ecdsa-p521',
    AES256_GCM96 = 'aes256-gcm96'
}


/**
 * Check if a given object implements the KeyManagementUpdateKeyRequest interface.
 */
export function instanceOfKeyManagementUpdateKeyRequest(value: object): value is KeyManagementUpdateKeyRequest {
    return true;
}

export function KeyManagementUpdateKeyRequestFromJSON(json: any): KeyManagementUpdateKeyRequest {
    return KeyManagementUpdateKeyRequestFromJSONTyped(json, false);
}

export function KeyManagementUpdateKeyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyManagementUpdateKeyRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'deletionAllowed': json['deletion_allowed'] == null ? undefined : json['deletion_allowed'],
        'minEnabledVersion': json['min_enabled_version'] == null ? undefined : json['min_enabled_version'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function KeyManagementUpdateKeyRequestToJSON(json: any): KeyManagementUpdateKeyRequest {
    return KeyManagementUpdateKeyRequestToJSONTyped(json, false);
}

export function KeyManagementUpdateKeyRequestToJSONTyped(value?: KeyManagementUpdateKeyRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'deletion_allowed': value['deletionAllowed'],
        'min_enabled_version': value['minEnabledVersion'],
        'type': value['type'],
    };
}

