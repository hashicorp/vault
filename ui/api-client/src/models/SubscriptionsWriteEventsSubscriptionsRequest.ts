/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SubscriptionsWriteEventsSubscriptionsRequest
 */
export interface SubscriptionsWriteEventsSubscriptionsRequest {
    /**
     * 
     * @type {object}
     * @memberof SubscriptionsWriteEventsSubscriptionsRequest
     */
    config?: object;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionsWriteEventsSubscriptionsRequest
     */
    eventType?: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionsWriteEventsSubscriptionsRequest
     */
    filter?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SubscriptionsWriteEventsSubscriptionsRequest
     */
    list?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionsWriteEventsSubscriptionsRequest
     */
    plugin?: string;
}

/**
 * Check if a given object implements the SubscriptionsWriteEventsSubscriptionsRequest interface.
 */
export function instanceOfSubscriptionsWriteEventsSubscriptionsRequest(value: object): value is SubscriptionsWriteEventsSubscriptionsRequest {
    return true;
}

export function SubscriptionsWriteEventsSubscriptionsRequestFromJSON(json: any): SubscriptionsWriteEventsSubscriptionsRequest {
    return SubscriptionsWriteEventsSubscriptionsRequestFromJSONTyped(json, false);
}

export function SubscriptionsWriteEventsSubscriptionsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionsWriteEventsSubscriptionsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'config': json['config'] == null ? undefined : json['config'],
        'eventType': json['event_type'] == null ? undefined : json['event_type'],
        'filter': json['filter'] == null ? undefined : json['filter'],
        'list': json['list'] == null ? undefined : json['list'],
        'plugin': json['plugin'] == null ? undefined : json['plugin'],
    };
}

export function SubscriptionsWriteEventsSubscriptionsRequestToJSON(json: any): SubscriptionsWriteEventsSubscriptionsRequest {
    return SubscriptionsWriteEventsSubscriptionsRequestToJSONTyped(json, false);
}

export function SubscriptionsWriteEventsSubscriptionsRequestToJSONTyped(value?: SubscriptionsWriteEventsSubscriptionsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'config': value['config'],
        'event_type': value['eventType'],
        'filter': value['filter'],
        'list': value['list'],
        'plugin': value['plugin'],
    };
}

