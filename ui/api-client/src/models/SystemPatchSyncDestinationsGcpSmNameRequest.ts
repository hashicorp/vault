/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SystemPatchSyncDestinationsGcpSmNameRequest
 */
export interface SystemPatchSyncDestinationsGcpSmNameRequest {
    /**
     * Sets which IPv4 addresses Vault is allowed to connect to for syncing secrets.
     * @type {Array<string>}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    allowedIpv4Addresses?: Array<string>;
    /**
     * Sets which IPv6 addresses Vault is allowed to connect to for syncing secrets.
     * @type {Array<string>}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    allowedIpv6Addresses?: Array<string>;
    /**
     * Sets which port numbers Vault is allowed to connect through for syncing secrets.
     * @type {Array<string>}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    allowedPorts?: Array<string>;
    /**
     * GCP IAM service account credentials JSON string to access the secret manager
     * @type {string}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    credentials?: string;
    /**
     * Custom tags to set on the secret managed at the destination. Custom tags are merged with system tags.
     * @type {object}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    customTags?: object;
    /**
     * Allows all IP addresses and ports to be connected to for syncing secrets.
     * @type {boolean}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    disableStrictNetworking?: boolean;
    /**
     * The encryption key resource name when using global, automatic replications. Mutually exclusive with locational_kms_keys.
     * @type {string}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    globalKmsKey?: string;
    /**
     * Determines what level of information is synced as a distinct resource at the destination. Supports `secret-path` and `secret-key`.
     * @type {string}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    granularity?: string;
    /**
     * A list of pairs of replication locations and user-managed encryption keys. For each pair, the key is the location name and the value is the encryption key resource name. When specifying 'replication_locations', the encryption key resource must be located within the same region. When using multiple 'replication_locations', a key name is required for each one.
     * @type {object}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    locationalKmsKeys?: object;
    /**
     * The target project to manage secrets in. If set, overrides the project derived from the service account JSON credentials or application default credentials. The credentials must be authorized to perform actions in the target project.
     * @type {string}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    projectId?: string;
    /**
     * Asynchronously unsyncs all associated secrets with the destination then deletes the destination config.
     * @type {boolean}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    purge?: boolean;
    /**
     * The names of the allowed locations for secrets to be replicated into. Secrets are still globally accessible regardless of their selected locations.
     * @type {Array<string>}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    replicationLocations?: Array<string>;
    /**
     * Template describing how to generate external secret names. Supports a subset of the Go Template syntax.
     * @type {string}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    secretNameTemplate?: string;
    /**
     * List of custom tags to remove for patch requests. This field is ignored on create and update requests.
     * @type {Array<string>}
     * @memberof SystemPatchSyncDestinationsGcpSmNameRequest
     */
    tagsToRemove?: Array<string>;
}

/**
 * Check if a given object implements the SystemPatchSyncDestinationsGcpSmNameRequest interface.
 */
export function instanceOfSystemPatchSyncDestinationsGcpSmNameRequest(value: object): value is SystemPatchSyncDestinationsGcpSmNameRequest {
    return true;
}

export function SystemPatchSyncDestinationsGcpSmNameRequestFromJSON(json: any): SystemPatchSyncDestinationsGcpSmNameRequest {
    return SystemPatchSyncDestinationsGcpSmNameRequestFromJSONTyped(json, false);
}

export function SystemPatchSyncDestinationsGcpSmNameRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemPatchSyncDestinationsGcpSmNameRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'allowedIpv4Addresses': json['allowed_ipv4_addresses'] == null ? undefined : json['allowed_ipv4_addresses'],
        'allowedIpv6Addresses': json['allowed_ipv6_addresses'] == null ? undefined : json['allowed_ipv6_addresses'],
        'allowedPorts': json['allowed_ports'] == null ? undefined : json['allowed_ports'],
        'credentials': json['credentials'] == null ? undefined : json['credentials'],
        'customTags': json['custom_tags'] == null ? undefined : json['custom_tags'],
        'disableStrictNetworking': json['disable_strict_networking'] == null ? undefined : json['disable_strict_networking'],
        'globalKmsKey': json['global_kms_key'] == null ? undefined : json['global_kms_key'],
        'granularity': json['granularity'] == null ? undefined : json['granularity'],
        'locationalKmsKeys': json['locational_kms_keys'] == null ? undefined : json['locational_kms_keys'],
        'projectId': json['project_id'] == null ? undefined : json['project_id'],
        'purge': json['purge'] == null ? undefined : json['purge'],
        'replicationLocations': json['replication_locations'] == null ? undefined : json['replication_locations'],
        'secretNameTemplate': json['secret_name_template'] == null ? undefined : json['secret_name_template'],
        'tagsToRemove': json['tags_to_remove'] == null ? undefined : json['tags_to_remove'],
    };
}

export function SystemPatchSyncDestinationsGcpSmNameRequestToJSON(json: any): SystemPatchSyncDestinationsGcpSmNameRequest {
    return SystemPatchSyncDestinationsGcpSmNameRequestToJSONTyped(json, false);
}

export function SystemPatchSyncDestinationsGcpSmNameRequestToJSONTyped(value?: SystemPatchSyncDestinationsGcpSmNameRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowed_ipv4_addresses': value['allowedIpv4Addresses'],
        'allowed_ipv6_addresses': value['allowedIpv6Addresses'],
        'allowed_ports': value['allowedPorts'],
        'credentials': value['credentials'],
        'custom_tags': value['customTags'],
        'disable_strict_networking': value['disableStrictNetworking'],
        'global_kms_key': value['globalKmsKey'],
        'granularity': value['granularity'],
        'locational_kms_keys': value['locationalKmsKeys'],
        'project_id': value['projectId'],
        'purge': value['purge'],
        'replication_locations': value['replicationLocations'],
        'secret_name_template': value['secretNameTemplate'],
        'tags_to_remove': value['tagsToRemove'],
    };
}

