/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AzureWriteRoleRequest
 */
export interface AzureWriteRoleRequest {
    /**
     * Application Object ID to use for static service principal credentials.
     * @type {string}
     * @memberof AzureWriteRoleRequest
     */
    applicationObjectId?: string;
    /**
     * JSON list of Azure groups to add the service principal to.
     * @type {string}
     * @memberof AzureWriteRoleRequest
     */
    azureGroups?: string;
    /**
     * JSON list of Azure roles to assign.
     * @type {string}
     * @memberof AzureWriteRoleRequest
     */
    azureRoles?: string;
    /**
     * Maximum lifetime of the lease and service principal. If not set or set to 0, will use the system default.
     * @type {string}
     * @memberof AzureWriteRoleRequest
     */
    explicitMaxTtl?: string;
    /**
     * Maximum time a service principal. If not set or set to 0, will use system default.
     * @type {string}
     * @memberof AzureWriteRoleRequest
     */
    maxTtl?: string;
    /**
     * Indicates whether new application objects should be permanently deleted. If not set, objects will not be permanently deleted.
     * @type {boolean}
     * @memberof AzureWriteRoleRequest
     */
    permanentlyDelete?: boolean;
    /**
     * Persist the app between generated credentials. Useful if the app needs to maintain owner ship of resources it creates
     * @type {boolean}
     * @memberof AzureWriteRoleRequest
     */
    persistApp?: boolean;
    /**
     * Specifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount
     * @type {string}
     * @memberof AzureWriteRoleRequest
     */
    signInAudience?: string;
    /**
     * Azure tags to attach to an application.
     * @type {Array<string>}
     * @memberof AzureWriteRoleRequest
     */
    tags?: Array<string>;
    /**
     * Default lease for generated credentials. If not set or set to 0, will use system default.
     * @type {string}
     * @memberof AzureWriteRoleRequest
     */
    ttl?: string;
}

/**
 * Check if a given object implements the AzureWriteRoleRequest interface.
 */
export function instanceOfAzureWriteRoleRequest(value: object): value is AzureWriteRoleRequest {
    return true;
}

export function AzureWriteRoleRequestFromJSON(json: any): AzureWriteRoleRequest {
    return AzureWriteRoleRequestFromJSONTyped(json, false);
}

export function AzureWriteRoleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AzureWriteRoleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'applicationObjectId': json['application_object_id'] == null ? undefined : json['application_object_id'],
        'azureGroups': json['azure_groups'] == null ? undefined : json['azure_groups'],
        'azureRoles': json['azure_roles'] == null ? undefined : json['azure_roles'],
        'explicitMaxTtl': json['explicit_max_ttl'] == null ? undefined : json['explicit_max_ttl'],
        'maxTtl': json['max_ttl'] == null ? undefined : json['max_ttl'],
        'permanentlyDelete': json['permanently_delete'] == null ? undefined : json['permanently_delete'],
        'persistApp': json['persist_app'] == null ? undefined : json['persist_app'],
        'signInAudience': json['sign_in_audience'] == null ? undefined : json['sign_in_audience'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'ttl': json['ttl'] == null ? undefined : json['ttl'],
    };
}

export function AzureWriteRoleRequestToJSON(json: any): AzureWriteRoleRequest {
    return AzureWriteRoleRequestToJSONTyped(json, false);
}

export function AzureWriteRoleRequestToJSONTyped(value?: AzureWriteRoleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'application_object_id': value['applicationObjectId'],
        'azure_groups': value['azureGroups'],
        'azure_roles': value['azureRoles'],
        'explicit_max_ttl': value['explicitMaxTtl'],
        'max_ttl': value['maxTtl'],
        'permanently_delete': value['permanentlyDelete'],
        'persist_app': value['persistApp'],
        'sign_in_audience': value['signInAudience'],
        'tags': value['tags'],
        'ttl': value['ttl'],
    };
}

