/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PkiReadAutoTidyConfigurationResponse
 */
export interface PkiReadAutoTidyConfigurationResponse {
    /**
     * Safety buffer after creation after which accounts lacking orders are revoked
     * @type {number}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    acmeAccountSafetyBuffer?: number;
    /**
     * Specifies whether automatic tidy is enabled or not
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    enabled?: boolean;
    /**
     * Specifies the duration between automatic tidy operation
     * @type {number}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    intervalDuration?: number;
    /**
     * Issuer safety buffer
     * @type {number}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    issuerSafetyBuffer?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    maintainStoredCertificateCounts?: boolean;
    /**
     * The maximum amount of time in seconds auto-tidy will be delayed after startup
     * @type {number}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    maxStartupBackoffDuration?: number;
    /**
     * The minimum amount of time in seconds auto-tidy will be delayed after startup
     * @type {number}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    minStartupBackoffDuration?: number;
    /**
     * Duration to pause between tidying certificates
     * @type {string}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    pauseDuration?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    publishStoredCertificateCountMetrics?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    revocationQueueSafetyBuffer?: number;
    /**
     * Safety buffer time duration
     * @type {number}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    safetyBuffer?: number;
    /**
     * Tidy Unused Acme Accounts, and Orders
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    tidyAcme?: boolean;
    /**
     * Tidy cert metadata
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    tidyCertMetadata?: boolean;
    /**
     * Specifies whether to tidy up the certificate store
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    tidyCertStore?: boolean;
    /**
     * Tidy CMPv2 nonce store
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    tidyCmpv2NonceStore?: boolean;
    /**
     * Tidy the cross-cluster revoked certificate store
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    tidyCrossClusterRevokedCerts?: boolean;
    /**
     * Specifies whether tidy expired issuers
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    tidyExpiredIssuers?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    tidyMoveLegacyCaBundle?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    tidyRevocationQueue?: boolean;
    /**
     * Specifies whether to associate revoked certificates with their corresponding issuers
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    tidyRevokedCertIssuerAssociations?: boolean;
    /**
     * Specifies whether to remove all invalid and expired certificates from storage
     * @type {boolean}
     * @memberof PkiReadAutoTidyConfigurationResponse
     */
    tidyRevokedCerts?: boolean;
}

/**
 * Check if a given object implements the PkiReadAutoTidyConfigurationResponse interface.
 */
export function instanceOfPkiReadAutoTidyConfigurationResponse(value: object): value is PkiReadAutoTidyConfigurationResponse {
    return true;
}

export function PkiReadAutoTidyConfigurationResponseFromJSON(json: any): PkiReadAutoTidyConfigurationResponse {
    return PkiReadAutoTidyConfigurationResponseFromJSONTyped(json, false);
}

export function PkiReadAutoTidyConfigurationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PkiReadAutoTidyConfigurationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'acmeAccountSafetyBuffer': json['acme_account_safety_buffer'] == null ? undefined : json['acme_account_safety_buffer'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'intervalDuration': json['interval_duration'] == null ? undefined : json['interval_duration'],
        'issuerSafetyBuffer': json['issuer_safety_buffer'] == null ? undefined : json['issuer_safety_buffer'],
        'maintainStoredCertificateCounts': json['maintain_stored_certificate_counts'] == null ? undefined : json['maintain_stored_certificate_counts'],
        'maxStartupBackoffDuration': json['max_startup_backoff_duration'] == null ? undefined : json['max_startup_backoff_duration'],
        'minStartupBackoffDuration': json['min_startup_backoff_duration'] == null ? undefined : json['min_startup_backoff_duration'],
        'pauseDuration': json['pause_duration'] == null ? undefined : json['pause_duration'],
        'publishStoredCertificateCountMetrics': json['publish_stored_certificate_count_metrics'] == null ? undefined : json['publish_stored_certificate_count_metrics'],
        'revocationQueueSafetyBuffer': json['revocation_queue_safety_buffer'] == null ? undefined : json['revocation_queue_safety_buffer'],
        'safetyBuffer': json['safety_buffer'] == null ? undefined : json['safety_buffer'],
        'tidyAcme': json['tidy_acme'] == null ? undefined : json['tidy_acme'],
        'tidyCertMetadata': json['tidy_cert_metadata'] == null ? undefined : json['tidy_cert_metadata'],
        'tidyCertStore': json['tidy_cert_store'] == null ? undefined : json['tidy_cert_store'],
        'tidyCmpv2NonceStore': json['tidy_cmpv2_nonce_store'] == null ? undefined : json['tidy_cmpv2_nonce_store'],
        'tidyCrossClusterRevokedCerts': json['tidy_cross_cluster_revoked_certs'] == null ? undefined : json['tidy_cross_cluster_revoked_certs'],
        'tidyExpiredIssuers': json['tidy_expired_issuers'] == null ? undefined : json['tidy_expired_issuers'],
        'tidyMoveLegacyCaBundle': json['tidy_move_legacy_ca_bundle'] == null ? undefined : json['tidy_move_legacy_ca_bundle'],
        'tidyRevocationQueue': json['tidy_revocation_queue'] == null ? undefined : json['tidy_revocation_queue'],
        'tidyRevokedCertIssuerAssociations': json['tidy_revoked_cert_issuer_associations'] == null ? undefined : json['tidy_revoked_cert_issuer_associations'],
        'tidyRevokedCerts': json['tidy_revoked_certs'] == null ? undefined : json['tidy_revoked_certs'],
    };
}

export function PkiReadAutoTidyConfigurationResponseToJSON(json: any): PkiReadAutoTidyConfigurationResponse {
    return PkiReadAutoTidyConfigurationResponseToJSONTyped(json, false);
}

export function PkiReadAutoTidyConfigurationResponseToJSONTyped(value?: PkiReadAutoTidyConfigurationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'acme_account_safety_buffer': value['acmeAccountSafetyBuffer'],
        'enabled': value['enabled'],
        'interval_duration': value['intervalDuration'],
        'issuer_safety_buffer': value['issuerSafetyBuffer'],
        'maintain_stored_certificate_counts': value['maintainStoredCertificateCounts'],
        'max_startup_backoff_duration': value['maxStartupBackoffDuration'],
        'min_startup_backoff_duration': value['minStartupBackoffDuration'],
        'pause_duration': value['pauseDuration'],
        'publish_stored_certificate_count_metrics': value['publishStoredCertificateCountMetrics'],
        'revocation_queue_safety_buffer': value['revocationQueueSafetyBuffer'],
        'safety_buffer': value['safetyBuffer'],
        'tidy_acme': value['tidyAcme'],
        'tidy_cert_metadata': value['tidyCertMetadata'],
        'tidy_cert_store': value['tidyCertStore'],
        'tidy_cmpv2_nonce_store': value['tidyCmpv2NonceStore'],
        'tidy_cross_cluster_revoked_certs': value['tidyCrossClusterRevokedCerts'],
        'tidy_expired_issuers': value['tidyExpiredIssuers'],
        'tidy_move_legacy_ca_bundle': value['tidyMoveLegacyCaBundle'],
        'tidy_revocation_queue': value['tidyRevocationQueue'],
        'tidy_revoked_cert_issuer_associations': value['tidyRevokedCertIssuerAssociations'],
        'tidy_revoked_certs': value['tidyRevokedCerts'],
    };
}

