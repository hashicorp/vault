/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RawWriteRequest
 */
export interface RawWriteRequest {
    /**
     * 
     * @type {boolean}
     * @memberof RawWriteRequest
     */
    compressed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RawWriteRequest
     */
    compressionType?: string;
    /**
     * 
     * @type {string}
     * @memberof RawWriteRequest
     */
    encoding?: string;
    /**
     * 
     * @type {string}
     * @memberof RawWriteRequest
     */
    value?: string;
}

/**
 * Check if a given object implements the RawWriteRequest interface.
 */
export function instanceOfRawWriteRequest(value: object): value is RawWriteRequest {
    return true;
}

export function RawWriteRequestFromJSON(json: any): RawWriteRequest {
    return RawWriteRequestFromJSONTyped(json, false);
}

export function RawWriteRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RawWriteRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'compressed': json['compressed'] == null ? undefined : json['compressed'],
        'compressionType': json['compression_type'] == null ? undefined : json['compression_type'],
        'encoding': json['encoding'] == null ? undefined : json['encoding'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function RawWriteRequestToJSON(json: any): RawWriteRequest {
    return RawWriteRequestToJSONTyped(json, false);
}

export function RawWriteRequestToJSONTyped(value?: RawWriteRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'compressed': value['compressed'],
        'compression_type': value['compressionType'],
        'encoding': value['encoding'],
        'value': value['value'],
    };
}

