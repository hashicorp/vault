/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KmipConfigureRequest
 */
export interface KmipConfigureRequest {
    /**
     * Client certificate key bits, valid values depend on key type
     * @type {number}
     * @memberof KmipConfigureRequest
     */
    defaultTlsClientKeyBits?: number;
    /**
     * Client certificate key type, rsa or ec
     * @type {string}
     * @memberof KmipConfigureRequest
     */
    defaultTlsClientKeyType?: KmipConfigureRequestDefaultTlsClientKeyTypeEnum;
    /**
     * Client certificate TTL in either an integer number of seconds (3600) or an integer time unit (1h)
     * @type {string}
     * @memberof KmipConfigureRequest
     */
    defaultTlsClientTtl?: string;
    /**
     * A list of address:port to listen on. A bare address without port may be provided, in which case port 5696 is assumed.
     * @type {Array<string>}
     * @memberof KmipConfigureRequest
     */
    listenAddrs?: Array<string>;
    /**
     * A list of hostnames to include in the server's TLS certificate as SAN DNS names. The first will be used as the common name (CN).
     * @type {Array<string>}
     * @memberof KmipConfigureRequest
     */
    serverHostnames?: Array<string>;
    /**
     * A list of IP to include in the server's TLS certificate as SAN IP addresses.
     * @type {Array<string>}
     * @memberof KmipConfigureRequest
     */
    serverIps?: Array<string>;
    /**
     * CA key bits, valid values depend on key type
     * @type {number}
     * @memberof KmipConfigureRequest
     */
    tlsCaKeyBits?: number;
    /**
     * CA key type, rsa or ec
     * @type {string}
     * @memberof KmipConfigureRequest
     */
    tlsCaKeyType?: KmipConfigureRequestTlsCaKeyTypeEnum;
    /**
     * Min TLS version
     * @type {string}
     * @memberof KmipConfigureRequest
     */
    tlsMinVersion?: string;
}

/**
* @export
* @enum {string}
*/
export enum KmipConfigureRequestDefaultTlsClientKeyTypeEnum {
    RSA = 'rsa',
    EC = 'ec'
}
/**
* @export
* @enum {string}
*/
export enum KmipConfigureRequestTlsCaKeyTypeEnum {
    RSA = 'rsa',
    EC = 'ec'
}


/**
 * Check if a given object implements the KmipConfigureRequest interface.
 */
export function instanceOfKmipConfigureRequest(value: object): value is KmipConfigureRequest {
    return true;
}

export function KmipConfigureRequestFromJSON(json: any): KmipConfigureRequest {
    return KmipConfigureRequestFromJSONTyped(json, false);
}

export function KmipConfigureRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): KmipConfigureRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'defaultTlsClientKeyBits': json['default_tls_client_key_bits'] == null ? undefined : json['default_tls_client_key_bits'],
        'defaultTlsClientKeyType': json['default_tls_client_key_type'] == null ? undefined : json['default_tls_client_key_type'],
        'defaultTlsClientTtl': json['default_tls_client_ttl'] == null ? undefined : json['default_tls_client_ttl'],
        'listenAddrs': json['listen_addrs'] == null ? undefined : json['listen_addrs'],
        'serverHostnames': json['server_hostnames'] == null ? undefined : json['server_hostnames'],
        'serverIps': json['server_ips'] == null ? undefined : json['server_ips'],
        'tlsCaKeyBits': json['tls_ca_key_bits'] == null ? undefined : json['tls_ca_key_bits'],
        'tlsCaKeyType': json['tls_ca_key_type'] == null ? undefined : json['tls_ca_key_type'],
        'tlsMinVersion': json['tls_min_version'] == null ? undefined : json['tls_min_version'],
    };
}

export function KmipConfigureRequestToJSON(json: any): KmipConfigureRequest {
    return KmipConfigureRequestToJSONTyped(json, false);
}

export function KmipConfigureRequestToJSONTyped(value?: KmipConfigureRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'default_tls_client_key_bits': value['defaultTlsClientKeyBits'],
        'default_tls_client_key_type': value['defaultTlsClientKeyType'],
        'default_tls_client_ttl': value['defaultTlsClientTtl'],
        'listen_addrs': value['listenAddrs'],
        'server_hostnames': value['serverHostnames'],
        'server_ips': value['serverIps'],
        'tls_ca_key_bits': value['tlsCaKeyBits'],
        'tls_ca_key_type': value['tlsCaKeyType'],
        'tls_min_version': value['tlsMinVersion'],
    };
}

