/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuditingEnableDeviceRequest
 */
export interface AuditingEnableDeviceRequest {
    /**
     * User-friendly description for this audit backend.
     * @type {string}
     * @memberof AuditingEnableDeviceRequest
     */
    description?: string;
    /**
     * Mark the mount as a local mount, which is not replicated and is unaffected by replication.
     * @type {boolean}
     * @memberof AuditingEnableDeviceRequest
     */
    local?: boolean;
    /**
     * Configuration options for the audit backend.
     * @type {object}
     * @memberof AuditingEnableDeviceRequest
     */
    options?: object;
    /**
     * The type of the backend. Example: "mysql"
     * @type {string}
     * @memberof AuditingEnableDeviceRequest
     */
    type?: string;
}

/**
 * Check if a given object implements the AuditingEnableDeviceRequest interface.
 */
export function instanceOfAuditingEnableDeviceRequest(value: object): value is AuditingEnableDeviceRequest {
    return true;
}

export function AuditingEnableDeviceRequestFromJSON(json: any): AuditingEnableDeviceRequest {
    return AuditingEnableDeviceRequestFromJSONTyped(json, false);
}

export function AuditingEnableDeviceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditingEnableDeviceRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'local': json['local'] == null ? undefined : json['local'],
        'options': json['options'] == null ? undefined : json['options'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function AuditingEnableDeviceRequestToJSON(json: any): AuditingEnableDeviceRequest {
    return AuditingEnableDeviceRequestToJSONTyped(json, false);
}

export function AuditingEnableDeviceRequestToJSONTyped(value?: AuditingEnableDeviceRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'local': value['local'],
        'options': value['options'],
        'type': value['type'],
    };
}

