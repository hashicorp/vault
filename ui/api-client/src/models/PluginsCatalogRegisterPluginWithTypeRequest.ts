/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PluginsCatalogRegisterPluginWithTypeRequest
 */
export interface PluginsCatalogRegisterPluginWithTypeRequest {
    /**
     * The args passed to plugin command.
     * @type {Array<string>}
     * @memberof PluginsCatalogRegisterPluginWithTypeRequest
     */
    args?: Array<string>;
    /**
     * The command used to start the plugin. The executable defined in this command must exist in vault's plugin directory.
     * @type {string}
     * @memberof PluginsCatalogRegisterPluginWithTypeRequest
     */
    command?: string;
    /**
     * The environment variables passed to plugin command. Each entry is of the form "key=value".
     * @type {Array<string>}
     * @memberof PluginsCatalogRegisterPluginWithTypeRequest
     */
    env?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PluginsCatalogRegisterPluginWithTypeRequest
     */
    ociImage?: string;
    /**
     * The Vault plugin runtime to use when running the plugin.
     * @type {string}
     * @memberof PluginsCatalogRegisterPluginWithTypeRequest
     */
    runtime?: string;
    /**
     * The SHA256 sum of the executable or container to be run. This should be HEX encoded.
     * @type {string}
     * @memberof PluginsCatalogRegisterPluginWithTypeRequest
     */
    sha256?: string;
    /**
     * The semantic version of the plugin to use, or image tag if oci_image is provided.
     * @type {string}
     * @memberof PluginsCatalogRegisterPluginWithTypeRequest
     */
    version?: string;
}

/**
 * Check if a given object implements the PluginsCatalogRegisterPluginWithTypeRequest interface.
 */
export function instanceOfPluginsCatalogRegisterPluginWithTypeRequest(value: object): value is PluginsCatalogRegisterPluginWithTypeRequest {
    return true;
}

export function PluginsCatalogRegisterPluginWithTypeRequestFromJSON(json: any): PluginsCatalogRegisterPluginWithTypeRequest {
    return PluginsCatalogRegisterPluginWithTypeRequestFromJSONTyped(json, false);
}

export function PluginsCatalogRegisterPluginWithTypeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginsCatalogRegisterPluginWithTypeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'args': json['args'] == null ? undefined : json['args'],
        'command': json['command'] == null ? undefined : json['command'],
        'env': json['env'] == null ? undefined : json['env'],
        'ociImage': json['oci_image'] == null ? undefined : json['oci_image'],
        'runtime': json['runtime'] == null ? undefined : json['runtime'],
        'sha256': json['sha256'] == null ? undefined : json['sha256'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function PluginsCatalogRegisterPluginWithTypeRequestToJSON(json: any): PluginsCatalogRegisterPluginWithTypeRequest {
    return PluginsCatalogRegisterPluginWithTypeRequestToJSONTyped(json, false);
}

export function PluginsCatalogRegisterPluginWithTypeRequestToJSONTyped(value?: PluginsCatalogRegisterPluginWithTypeRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'args': value['args'],
        'command': value['command'],
        'env': value['env'],
        'oci_image': value['ociImage'],
        'runtime': value['runtime'],
        'sha256': value['sha256'],
        'version': value['version'],
    };
}

