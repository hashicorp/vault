/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GenerateUtilizationReportResponse
 */
export interface GenerateUtilizationReportResponse {
    /**
     * A map of auth methods, by type, to the number of mounts of that type across all namespaces.
     * @type {object}
     * @memberof GenerateUtilizationReportResponse
     */
    authMethods?: object;
    /**
     * Number of KVv1 secrets across all mounts and namespaces.
     * @type {number}
     * @memberof GenerateUtilizationReportResponse
     */
    kvv1Secrets?: number;
    /**
     * Number of KVv2 secrets across all mounts and namespaces.
     * @type {number}
     * @memberof GenerateUtilizationReportResponse
     */
    kvv2Secrets?: number;
    /**
     * A map containing details of lease count quotas, if in use, including total quotas and the status of the global lease count quota, if one is configured.
     * @type {object}
     * @memberof GenerateUtilizationReportResponse
     */
    leaseCountQuotas?: object;
    /**
     * A map of all auth methods, by type, to the number of active leases created by auth mounts of that type across all namespaces.
     * @type {object}
     * @memberof GenerateUtilizationReportResponse
     */
    leasesByAuthMethod?: object;
    /**
     * Number of namespaces.
     * @type {number}
     * @memberof GenerateUtilizationReportResponse
     */
    namespaces?: number;
    /**
     * A map containing 'total_roles' and 'total_issuers' for all PKI mounts across all namespaces, if PKI is in use.
     * @type {object}
     * @memberof GenerateUtilizationReportResponse
     */
    pki?: object;
    /**
     * A map containing details about replication status.
     * @type {object}
     * @memberof GenerateUtilizationReportResponse
     */
    replicationStatus?: object;
    /**
     * A map of secret engines, by type, to the number of mounts of that type across all namespaces.
     * @type {object}
     * @memberof GenerateUtilizationReportResponse
     */
    secretEngines?: object;
    /**
     * A map containing 'total_sources' and 'total_destinations' for secret syncs, if configured.
     * @type {object}
     * @memberof GenerateUtilizationReportResponse
     */
    secretSync?: object;
}

/**
 * Check if a given object implements the GenerateUtilizationReportResponse interface.
 */
export function instanceOfGenerateUtilizationReportResponse(value: object): value is GenerateUtilizationReportResponse {
    return true;
}

export function GenerateUtilizationReportResponseFromJSON(json: any): GenerateUtilizationReportResponse {
    return GenerateUtilizationReportResponseFromJSONTyped(json, false);
}

export function GenerateUtilizationReportResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateUtilizationReportResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'authMethods': json['auth_methods'] == null ? undefined : json['auth_methods'],
        'kvv1Secrets': json['kvv1_secrets'] == null ? undefined : json['kvv1_secrets'],
        'kvv2Secrets': json['kvv2_secrets'] == null ? undefined : json['kvv2_secrets'],
        'leaseCountQuotas': json['lease_count_quotas'] == null ? undefined : json['lease_count_quotas'],
        'leasesByAuthMethod': json['leases_by_auth_method'] == null ? undefined : json['leases_by_auth_method'],
        'namespaces': json['namespaces'] == null ? undefined : json['namespaces'],
        'pki': json['pki'] == null ? undefined : json['pki'],
        'replicationStatus': json['replication_status'] == null ? undefined : json['replication_status'],
        'secretEngines': json['secret_engines'] == null ? undefined : json['secret_engines'],
        'secretSync': json['secret_sync'] == null ? undefined : json['secret_sync'],
    };
}

export function GenerateUtilizationReportResponseToJSON(json: any): GenerateUtilizationReportResponse {
    return GenerateUtilizationReportResponseToJSONTyped(json, false);
}

export function GenerateUtilizationReportResponseToJSONTyped(value?: GenerateUtilizationReportResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'auth_methods': value['authMethods'],
        'kvv1_secrets': value['kvv1Secrets'],
        'kvv2_secrets': value['kvv2Secrets'],
        'lease_count_quotas': value['leaseCountQuotas'],
        'leases_by_auth_method': value['leasesByAuthMethod'],
        'namespaces': value['namespaces'],
        'pki': value['pki'],
        'replication_status': value['replicationStatus'],
        'secret_engines': value['secretEngines'],
        'secret_sync': value['secretSync'],
    };
}

