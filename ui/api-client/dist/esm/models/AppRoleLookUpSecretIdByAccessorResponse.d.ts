/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AppRoleLookUpSecretIdByAccessorResponse
 */
export interface AppRoleLookUpSecretIdByAccessorResponse {
    /**
     * List of CIDR blocks enforcing secret IDs to be used from specific set of IP addresses. If 'bound_cidr_list' is set on the role, then the list of CIDR blocks listed here should be a subset of the CIDR blocks listed on the role.
     * @type {Array<string>}
     * @memberof AppRoleLookUpSecretIdByAccessorResponse
     */
    cidrList?: Array<string>;
    /**
     *
     * @type {Date}
     * @memberof AppRoleLookUpSecretIdByAccessorResponse
     */
    creationTime?: Date;
    /**
     *
     * @type {Date}
     * @memberof AppRoleLookUpSecretIdByAccessorResponse
     */
    expirationTime?: Date;
    /**
     *
     * @type {Date}
     * @memberof AppRoleLookUpSecretIdByAccessorResponse
     */
    lastUpdatedTime?: Date;
    /**
     *
     * @type {object}
     * @memberof AppRoleLookUpSecretIdByAccessorResponse
     */
    metadata?: object;
    /**
     * Accessor of the secret ID
     * @type {string}
     * @memberof AppRoleLookUpSecretIdByAccessorResponse
     */
    secretIdAccessor?: string;
    /**
     * Number of times a secret ID can access the role, after which the secret ID will expire.
     * @type {number}
     * @memberof AppRoleLookUpSecretIdByAccessorResponse
     */
    secretIdNumUses?: number;
    /**
     * Duration in seconds after which the issued secret ID expires.
     * @type {number}
     * @memberof AppRoleLookUpSecretIdByAccessorResponse
     */
    secretIdTtl?: number;
    /**
     * List of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token. Should be a subset of the token CIDR blocks listed on the role, if any.
     * @type {Array<string>}
     * @memberof AppRoleLookUpSecretIdByAccessorResponse
     */
    tokenBoundCidrs?: Array<string>;
}
/**
 * Check if a given object implements the AppRoleLookUpSecretIdByAccessorResponse interface.
 */
export declare function instanceOfAppRoleLookUpSecretIdByAccessorResponse(value: object): value is AppRoleLookUpSecretIdByAccessorResponse;
export declare function AppRoleLookUpSecretIdByAccessorResponseFromJSON(json: any): AppRoleLookUpSecretIdByAccessorResponse;
export declare function AppRoleLookUpSecretIdByAccessorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppRoleLookUpSecretIdByAccessorResponse;
export declare function AppRoleLookUpSecretIdByAccessorResponseToJSON(json: any): AppRoleLookUpSecretIdByAccessorResponse;
export declare function AppRoleLookUpSecretIdByAccessorResponseToJSONTyped(value?: AppRoleLookUpSecretIdByAccessorResponse | null, ignoreDiscriminator?: boolean): any;
