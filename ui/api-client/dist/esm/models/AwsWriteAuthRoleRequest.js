/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the AwsWriteAuthRoleRequest interface.
 */
export function instanceOfAwsWriteAuthRoleRequest(value) {
    return true;
}
export function AwsWriteAuthRoleRequestFromJSON(json) {
    return AwsWriteAuthRoleRequestFromJSONTyped(json, false);
}
export function AwsWriteAuthRoleRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'allowInstanceMigration': json['allow_instance_migration'] == null ? undefined : json['allow_instance_migration'],
        'authType': json['auth_type'] == null ? undefined : json['auth_type'],
        'boundAccountId': json['bound_account_id'] == null ? undefined : json['bound_account_id'],
        'boundAmiId': json['bound_ami_id'] == null ? undefined : json['bound_ami_id'],
        'boundEc2InstanceId': json['bound_ec2_instance_id'] == null ? undefined : json['bound_ec2_instance_id'],
        'boundIamInstanceProfileArn': json['bound_iam_instance_profile_arn'] == null ? undefined : json['bound_iam_instance_profile_arn'],
        'boundIamPrincipalArn': json['bound_iam_principal_arn'] == null ? undefined : json['bound_iam_principal_arn'],
        'boundIamRoleArn': json['bound_iam_role_arn'] == null ? undefined : json['bound_iam_role_arn'],
        'boundRegion': json['bound_region'] == null ? undefined : json['bound_region'],
        'boundSubnetId': json['bound_subnet_id'] == null ? undefined : json['bound_subnet_id'],
        'boundVpcId': json['bound_vpc_id'] == null ? undefined : json['bound_vpc_id'],
        'disallowReauthentication': json['disallow_reauthentication'] == null ? undefined : json['disallow_reauthentication'],
        'inferredAwsRegion': json['inferred_aws_region'] == null ? undefined : json['inferred_aws_region'],
        'inferredEntityType': json['inferred_entity_type'] == null ? undefined : json['inferred_entity_type'],
        'maxTtl': json['max_ttl'] == null ? undefined : json['max_ttl'],
        'period': json['period'] == null ? undefined : json['period'],
        'policies': json['policies'] == null ? undefined : json['policies'],
        'resolveAwsUniqueIds': json['resolve_aws_unique_ids'] == null ? undefined : json['resolve_aws_unique_ids'],
        'roleTag': json['role_tag'] == null ? undefined : json['role_tag'],
        'tokenBoundCidrs': json['token_bound_cidrs'] == null ? undefined : json['token_bound_cidrs'],
        'tokenExplicitMaxTtl': json['token_explicit_max_ttl'] == null ? undefined : json['token_explicit_max_ttl'],
        'tokenMaxTtl': json['token_max_ttl'] == null ? undefined : json['token_max_ttl'],
        'tokenNoDefaultPolicy': json['token_no_default_policy'] == null ? undefined : json['token_no_default_policy'],
        'tokenNumUses': json['token_num_uses'] == null ? undefined : json['token_num_uses'],
        'tokenPeriod': json['token_period'] == null ? undefined : json['token_period'],
        'tokenPolicies': json['token_policies'] == null ? undefined : json['token_policies'],
        'tokenTtl': json['token_ttl'] == null ? undefined : json['token_ttl'],
        'tokenType': json['token_type'] == null ? undefined : json['token_type'],
        'ttl': json['ttl'] == null ? undefined : json['ttl'],
    };
}
export function AwsWriteAuthRoleRequestToJSON(json) {
    return AwsWriteAuthRoleRequestToJSONTyped(json, false);
}
export function AwsWriteAuthRoleRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'allow_instance_migration': value['allowInstanceMigration'],
        'auth_type': value['authType'],
        'bound_account_id': value['boundAccountId'],
        'bound_ami_id': value['boundAmiId'],
        'bound_ec2_instance_id': value['boundEc2InstanceId'],
        'bound_iam_instance_profile_arn': value['boundIamInstanceProfileArn'],
        'bound_iam_principal_arn': value['boundIamPrincipalArn'],
        'bound_iam_role_arn': value['boundIamRoleArn'],
        'bound_region': value['boundRegion'],
        'bound_subnet_id': value['boundSubnetId'],
        'bound_vpc_id': value['boundVpcId'],
        'disallow_reauthentication': value['disallowReauthentication'],
        'inferred_aws_region': value['inferredAwsRegion'],
        'inferred_entity_type': value['inferredEntityType'],
        'max_ttl': value['maxTtl'],
        'period': value['period'],
        'policies': value['policies'],
        'resolve_aws_unique_ids': value['resolveAwsUniqueIds'],
        'role_tag': value['roleTag'],
        'token_bound_cidrs': value['tokenBoundCidrs'],
        'token_explicit_max_ttl': value['tokenExplicitMaxTtl'],
        'token_max_ttl': value['tokenMaxTtl'],
        'token_no_default_policy': value['tokenNoDefaultPolicy'],
        'token_num_uses': value['tokenNumUses'],
        'token_period': value['tokenPeriod'],
        'token_policies': value['tokenPolicies'],
        'token_ttl': value['tokenTtl'],
        'token_type': value['tokenType'],
        'ttl': value['ttl'],
    };
}
