/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the LdapWriteDynamicRoleRequest interface.
 */
export function instanceOfLdapWriteDynamicRoleRequest(value) {
    if (!('creationLdif' in value) || value['creationLdif'] === undefined)
        return false;
    if (!('deletionLdif' in value) || value['deletionLdif'] === undefined)
        return false;
    return true;
}
export function LdapWriteDynamicRoleRequestFromJSON(json) {
    return LdapWriteDynamicRoleRequestFromJSONTyped(json, false);
}
export function LdapWriteDynamicRoleRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'creationLdif': json['creation_ldif'],
        'defaultTtl': json['default_ttl'] == null ? undefined : json['default_ttl'],
        'deletionLdif': json['deletion_ldif'],
        'maxTtl': json['max_ttl'] == null ? undefined : json['max_ttl'],
        'rollbackLdif': json['rollback_ldif'] == null ? undefined : json['rollback_ldif'],
        'usernameTemplate': json['username_template'] == null ? undefined : json['username_template'],
    };
}
export function LdapWriteDynamicRoleRequestToJSON(json) {
    return LdapWriteDynamicRoleRequestToJSONTyped(json, false);
}
export function LdapWriteDynamicRoleRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'creation_ldif': value['creationLdif'],
        'default_ttl': value['defaultTtl'],
        'deletion_ldif': value['deletionLdif'],
        'max_ttl': value['maxTtl'],
        'rollback_ldif': value['rollbackLdif'],
        'username_template': value['usernameTemplate'],
    };
}
