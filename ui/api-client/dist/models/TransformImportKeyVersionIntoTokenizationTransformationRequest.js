"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfTransformImportKeyVersionIntoTokenizationTransformationRequest = instanceOfTransformImportKeyVersionIntoTokenizationTransformationRequest;
exports.TransformImportKeyVersionIntoTokenizationTransformationRequestFromJSON = TransformImportKeyVersionIntoTokenizationTransformationRequestFromJSON;
exports.TransformImportKeyVersionIntoTokenizationTransformationRequestFromJSONTyped = TransformImportKeyVersionIntoTokenizationTransformationRequestFromJSONTyped;
exports.TransformImportKeyVersionIntoTokenizationTransformationRequestToJSON = TransformImportKeyVersionIntoTokenizationTransformationRequestToJSON;
exports.TransformImportKeyVersionIntoTokenizationTransformationRequestToJSONTyped = TransformImportKeyVersionIntoTokenizationTransformationRequestToJSONTyped;
/**
 * Check if a given object implements the TransformImportKeyVersionIntoTokenizationTransformationRequest interface.
 */
function instanceOfTransformImportKeyVersionIntoTokenizationTransformationRequest(value) {
    return true;
}
function TransformImportKeyVersionIntoTokenizationTransformationRequestFromJSON(json) {
    return TransformImportKeyVersionIntoTokenizationTransformationRequestFromJSONTyped(json, false);
}
function TransformImportKeyVersionIntoTokenizationTransformationRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'ciphertext': json['ciphertext'] == null ? undefined : json['ciphertext'],
        'hashFunction': json['hash_function'] == null ? undefined : json['hash_function'],
    };
}
function TransformImportKeyVersionIntoTokenizationTransformationRequestToJSON(json) {
    return TransformImportKeyVersionIntoTokenizationTransformationRequestToJSONTyped(json, false);
}
function TransformImportKeyVersionIntoTokenizationTransformationRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'ciphertext': value['ciphertext'],
        'hash_function': value['hashFunction'],
    };
}
