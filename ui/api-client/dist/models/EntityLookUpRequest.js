"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfEntityLookUpRequest = instanceOfEntityLookUpRequest;
exports.EntityLookUpRequestFromJSON = EntityLookUpRequestFromJSON;
exports.EntityLookUpRequestFromJSONTyped = EntityLookUpRequestFromJSONTyped;
exports.EntityLookUpRequestToJSON = EntityLookUpRequestToJSON;
exports.EntityLookUpRequestToJSONTyped = EntityLookUpRequestToJSONTyped;
/**
 * Check if a given object implements the EntityLookUpRequest interface.
 */
function instanceOfEntityLookUpRequest(value) {
    return true;
}
function EntityLookUpRequestFromJSON(json) {
    return EntityLookUpRequestFromJSONTyped(json, false);
}
function EntityLookUpRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'aliasId': json['alias_id'] == null ? undefined : json['alias_id'],
        'aliasMountAccessor': json['alias_mount_accessor'] == null ? undefined : json['alias_mount_accessor'],
        'aliasName': json['alias_name'] == null ? undefined : json['alias_name'],
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}
function EntityLookUpRequestToJSON(json) {
    return EntityLookUpRequestToJSONTyped(json, false);
}
function EntityLookUpRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'alias_id': value['aliasId'],
        'alias_mount_accessor': value['aliasMountAccessor'],
        'alias_name': value['aliasName'],
        'id': value['id'],
        'name': value['name'],
    };
}
