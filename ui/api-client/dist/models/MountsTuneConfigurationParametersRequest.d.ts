/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface MountsTuneConfigurationParametersRequest
 */
export interface MountsTuneConfigurationParametersRequest {
    /**
     *
     * @type {Array<string>}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    allowedManagedKeys?: Array<string>;
    /**
     * A list of headers to whitelist and allow a plugin to set on responses.
     * @type {Array<string>}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    allowedResponseHeaders?: Array<string>;
    /**
     * The list of keys in the request data object that will not be HMAC'd by audit devices.
     * @type {Array<string>}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    auditNonHmacRequestKeys?: Array<string>;
    /**
     * The list of keys in the response data object that will not be HMAC'd by audit devices.
     * @type {Array<string>}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    auditNonHmacResponseKeys?: Array<string>;
    /**
     * The default lease TTL for this mount.
     * @type {string}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    defaultLeaseTtl?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    delegatedAuthAccessors?: Array<string>;
    /**
     * User-friendly description for this credential backend.
     * @type {string}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    description?: string;
    /**
     * The name of the key used to sign plugin identity tokens. Defaults to the default key.
     * @type {string}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    identityTokenKey?: string;
    /**
     * Determines the visibility of the mount in the UI-specific listing endpoint. Accepted value are 'unauth' and 'hidden', with the empty default ('') behaving like 'hidden'.
     * @type {string}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    listingVisibility?: string;
    /**
     * The max lease TTL for this mount.
     * @type {string}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    maxLeaseTtl?: string;
    /**
     * The options to pass into the backend. Should be a json object with string keys and values.
     * @type {object}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    options?: object;
    /**
     * A list of headers to whitelist and pass from the request to the plugin.
     * @type {Array<string>}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    passthroughRequestHeaders?: Array<string>;
    /**
     * The semantic version of the plugin to use, or image tag if oci_image is provided.
     * @type {string}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    pluginVersion?: string;
    /**
     * The type of token to issue (service or batch).
     * @type {string}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    tokenType?: string;
    /**
     * Whether to trim a trailing slash on incoming requests to this mount
     * @type {boolean}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    trimRequestTrailingSlashes?: boolean;
    /**
     * The user lockout configuration to pass into the backend. Should be a json object with string keys and values.
     * @type {object}
     * @memberof MountsTuneConfigurationParametersRequest
     */
    userLockoutConfig?: object;
}
/**
 * Check if a given object implements the MountsTuneConfigurationParametersRequest interface.
 */
export declare function instanceOfMountsTuneConfigurationParametersRequest(value: object): value is MountsTuneConfigurationParametersRequest;
export declare function MountsTuneConfigurationParametersRequestFromJSON(json: any): MountsTuneConfigurationParametersRequest;
export declare function MountsTuneConfigurationParametersRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MountsTuneConfigurationParametersRequest;
export declare function MountsTuneConfigurationParametersRequestToJSON(json: any): MountsTuneConfigurationParametersRequest;
export declare function MountsTuneConfigurationParametersRequestToJSONTyped(value?: MountsTuneConfigurationParametersRequest | null, ignoreDiscriminator?: boolean): any;
