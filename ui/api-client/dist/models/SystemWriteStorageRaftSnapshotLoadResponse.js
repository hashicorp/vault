"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSystemWriteStorageRaftSnapshotLoadResponse = instanceOfSystemWriteStorageRaftSnapshotLoadResponse;
exports.SystemWriteStorageRaftSnapshotLoadResponseFromJSON = SystemWriteStorageRaftSnapshotLoadResponseFromJSON;
exports.SystemWriteStorageRaftSnapshotLoadResponseFromJSONTyped = SystemWriteStorageRaftSnapshotLoadResponseFromJSONTyped;
exports.SystemWriteStorageRaftSnapshotLoadResponseToJSON = SystemWriteStorageRaftSnapshotLoadResponseToJSON;
exports.SystemWriteStorageRaftSnapshotLoadResponseToJSONTyped = SystemWriteStorageRaftSnapshotLoadResponseToJSONTyped;
/**
 * Check if a given object implements the SystemWriteStorageRaftSnapshotLoadResponse interface.
 */
function instanceOfSystemWriteStorageRaftSnapshotLoadResponse(value) {
    return true;
}
function SystemWriteStorageRaftSnapshotLoadResponseFromJSON(json) {
    return SystemWriteStorageRaftSnapshotLoadResponseFromJSONTyped(json, false);
}
function SystemWriteStorageRaftSnapshotLoadResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'autoSnapshotConfig': json['auto_snapshot_config'] == null ? undefined : json['auto_snapshot_config'],
        'clusterId': json['cluster_id'] == null ? undefined : json['cluster_id'],
        'error': json['error'] == null ? undefined : json['error'],
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
        'snapshotId': json['snapshot_id'] == null ? undefined : json['snapshot_id'],
        'status': json['status'] == null ? undefined : json['status'],
        'uploaderEntityId': json['uploader_entity_id'] == null ? undefined : json['uploader_entity_id'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}
function SystemWriteStorageRaftSnapshotLoadResponseToJSON(json) {
    return SystemWriteStorageRaftSnapshotLoadResponseToJSONTyped(json, false);
}
function SystemWriteStorageRaftSnapshotLoadResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'auto_snapshot_config': value['autoSnapshotConfig'],
        'cluster_id': value['clusterId'],
        'error': value['error'],
        'expires_at': value['expiresAt'] == null ? undefined : ((value['expiresAt']).toISOString()),
        'snapshot_id': value['snapshotId'],
        'status': value['status'],
        'uploader_entity_id': value['uploaderEntityId'],
        'url': value['url'],
    };
}
