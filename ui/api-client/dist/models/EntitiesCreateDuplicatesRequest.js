"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfEntitiesCreateDuplicatesRequest = instanceOfEntitiesCreateDuplicatesRequest;
exports.EntitiesCreateDuplicatesRequestFromJSON = EntitiesCreateDuplicatesRequestFromJSON;
exports.EntitiesCreateDuplicatesRequestFromJSONTyped = EntitiesCreateDuplicatesRequestFromJSONTyped;
exports.EntitiesCreateDuplicatesRequestToJSON = EntitiesCreateDuplicatesRequestToJSON;
exports.EntitiesCreateDuplicatesRequestToJSONTyped = EntitiesCreateDuplicatesRequestToJSONTyped;
/**
 * Check if a given object implements the EntitiesCreateDuplicatesRequest interface.
 */
function instanceOfEntitiesCreateDuplicatesRequest(value) {
    return true;
}
function EntitiesCreateDuplicatesRequestFromJSON(json) {
    return EntitiesCreateDuplicatesRequestFromJSONTyped(json, false);
}
function EntitiesCreateDuplicatesRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'count': json['count'] == null ? undefined : json['count'],
        'differentCase': json['different_case'] == null ? undefined : json['different_case'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'name': json['name'] == null ? undefined : json['name'],
        'namespaceId': json['namespace_id'] == null ? undefined : json['namespace_id'],
        'policies': json['policies'] == null ? undefined : json['policies'],
    };
}
function EntitiesCreateDuplicatesRequestToJSON(json) {
    return EntitiesCreateDuplicatesRequestToJSONTyped(json, false);
}
function EntitiesCreateDuplicatesRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'count': value['count'],
        'different_case': value['differentCase'],
        'metadata': value['metadata'],
        'name': value['name'],
        'namespace_id': value['namespaceId'],
        'policies': value['policies'],
    };
}
