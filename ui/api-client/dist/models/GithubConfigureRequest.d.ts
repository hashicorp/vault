/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.20.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface GithubConfigureRequest
 */
export interface GithubConfigureRequest {
    /**
     * The API endpoint to use. Useful if you are running GitHub Enterprise or an API-compatible authentication server.
     * @type {string}
     * @memberof GithubConfigureRequest
     */
    baseUrl?: string;
    /**
     * Use "token_max_ttl" instead. If this and "token_max_ttl" are both specified, only "token_max_ttl" will be used.
     * @type {string}
     * @memberof GithubConfigureRequest
     * @deprecated
     */
    maxTtl?: string;
    /**
     * The organization users must be part of
     * @type {string}
     * @memberof GithubConfigureRequest
     */
    organization: string;
    /**
     * The ID of the organization users must be part of
     * @type {number}
     * @memberof GithubConfigureRequest
     */
    organizationId?: number;
    /**
     * Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
     * @type {Array<string>}
     * @memberof GithubConfigureRequest
     */
    tokenBoundCidrs?: Array<string>;
    /**
     * If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
     * @type {string}
     * @memberof GithubConfigureRequest
     */
    tokenExplicitMaxTtl?: string;
    /**
     * The maximum lifetime of the generated token
     * @type {string}
     * @memberof GithubConfigureRequest
     */
    tokenMaxTtl?: string;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     * @type {boolean}
     * @memberof GithubConfigureRequest
     */
    tokenNoDefaultPolicy?: boolean;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     * @type {number}
     * @memberof GithubConfigureRequest
     */
    tokenNumUses?: number;
    /**
     * If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. "24h").
     * @type {string}
     * @memberof GithubConfigureRequest
     */
    tokenPeriod?: string;
    /**
     * Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any policies configured for specific users/groups.
     * @type {Array<string>}
     * @memberof GithubConfigureRequest
     */
    tokenPolicies?: Array<string>;
    /**
     * The initial ttl of the token to generate
     * @type {string}
     * @memberof GithubConfigureRequest
     */
    tokenTtl?: string;
    /**
     * The type of token to generate, service or batch
     * @type {string}
     * @memberof GithubConfigureRequest
     */
    tokenType?: string;
    /**
     * Use "token_ttl" instead. If this and "token_ttl" are both specified, only "token_ttl" will be used.
     * @type {string}
     * @memberof GithubConfigureRequest
     * @deprecated
     */
    ttl?: string;
}
/**
 * Check if a given object implements the GithubConfigureRequest interface.
 */
export declare function instanceOfGithubConfigureRequest(value: object): value is GithubConfigureRequest;
export declare function GithubConfigureRequestFromJSON(json: any): GithubConfigureRequest;
export declare function GithubConfigureRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GithubConfigureRequest;
export declare function GithubConfigureRequestToJSON(json: any): GithubConfigureRequest;
export declare function GithubConfigureRequestToJSONTyped(value?: GithubConfigureRequest | null, ignoreDiscriminator?: boolean): any;
