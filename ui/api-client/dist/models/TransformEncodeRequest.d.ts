/**
 * HashiCorp Vault API
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.21.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TransformEncodeRequest
 */
export interface TransformEncodeRequest {
    /**
     * Specifies a list of items to be encoded in a single batch. If this parameter is set, the parameters 'value', 'transformation' and 'tweak' will be ignored. Each batch item within the list can specify these parameters instead.
     * @type {Array<object>}
     * @memberof TransformEncodeRequest
     */
    batchInput?: Array<object>;
    /**
     * The absolute expiration for the encoded token. This will be capped by the 'max_ttl' value on the transformation if set. Only valid for tokenization transformations. It is an error to specify both 'ttl' and 'expiration'.
     * @type {Date}
     * @memberof TransformEncodeRequest
     */
    expiration?: Date;
    /**
     * Map of key value pairs associated with the tokenized plaintext. Only valid for tokenization transformations.
     * @type {object}
     * @memberof TransformEncodeRequest
     */
    metadata?: object;
    /**
     * The transformation to perform. If no value is provided and the role contains a single transformation, this value will be inferred from the role.
     * @type {string}
     * @memberof TransformEncodeRequest
     */
    transformation?: string;
    /**
     * The TTL for the encoded token. This will be capped by the 'max_ttl' value on the transformation if set. Only valid for tokenization transformations. It is an error to specify both 'ttl' and 'expiration'.
     * @type {string}
     * @memberof TransformEncodeRequest
     */
    ttl?: string;
    /**
     * The tweak value to use. Only applicable for FPE transformations
     * @type {string}
     * @memberof TransformEncodeRequest
     */
    tweak?: string;
    /**
     * The value in which to encode.
     * @type {string}
     * @memberof TransformEncodeRequest
     */
    value?: string;
}
/**
 * Check if a given object implements the TransformEncodeRequest interface.
 */
export declare function instanceOfTransformEncodeRequest(value: object): value is TransformEncodeRequest;
export declare function TransformEncodeRequestFromJSON(json: any): TransformEncodeRequest;
export declare function TransformEncodeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransformEncodeRequest;
export declare function TransformEncodeRequestToJSON(json: any): TransformEncodeRequest;
export declare function TransformEncodeRequestToJSONTyped(value?: TransformEncodeRequest | null, ignoreDiscriminator?: boolean): any;
