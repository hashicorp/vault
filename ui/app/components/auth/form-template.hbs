{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: BUSL-1.1
}}

<div {{did-insert this.initializeState}}>
  {{#if this.formComponent}}
    {{#let (component this.formComponent) as |AuthFormComponent|}}
      {{! renders Auth::Form::Base or Auth::Form::<Type>}}
      <AuthFormComponent
        @authType={{this.selectedAuthMethod}}
        @cluster={{@cluster}}
        @onError={{this.handleError}}
        @onSuccess={{@onSuccess}}
      >
        <:namespace>
          {{#if (has-feature "Namespaces")}}
            <Auth::NamespaceInput
              @disabled={{@oidcProviderQueryParam}}
              @hvdManagedNamespace={{this.flags.hvdManagedNamespaceRoot}}
              @namespaceValue={{this.namespaceInput}}
              @updateNamespace={{this.handleNamespaceUpdate}}
            />
          {{/if}}
        </:namespace>

        <:back>
          {{#if this.showOtherMethods}}
            <Hds::Button
              @text="Back"
              {{on "click" this.toggleView}}
              @color="tertiary"
              @icon="arrow-left"
              data-test-back-button
            />
          {{/if}}
        </:back>

        <:authSelectOptions>
          <div class="has-bottom-margin-m">
            {{! If any sort of login configuration exists, it renders here }}
            {{#if (eq this.authViewMode "directLink")}}
              {{! URL contains a "with" query param that references a mount with listing_visibility="unauth" }}
              {{! Treat it as a "preferred" mount and hide all other tabs }}
              <Auth::MountsDisplay
                @mounts={{array @directLinkData}}
                @shouldRenderPath={{not-eq this.selectedAuthMethod "token"}}
              />
            {{else if (eq this.authViewMode "loginSettingsDefault")}}
              <Hds::Text::Body
                @tag="p"
                @weight="semibold"
                class="has-bottom-margin-m"
                data-test-auth-method={{this.selectedAuthMethod}}
              >
                {{!-- {{auth-display-name @loginSettings.defaultType}} --}}
                {{auth-display-name this.selectedAuthMethod}}
              </Hds::Text::Body>
              {{#let (get @visibleMountsByType this.selectedAuthMethod) as |mounts|}}
                {{#if mounts.length}}
                  <Auth::MountsDisplay
                    @hideType={{true}}
                    @mounts={{mounts}}
                    @shouldRenderPath={{not-eq this.selectedAuthMethod "token"}}
                  />
                {{/if}}
              {{/let}}
            {{else if (eq this.authViewMode "tabs")}}
              {{! Tabs are either preferred methods from login settings or visible mounts }}
              <Auth::Tabs
                @authTabData={{or this.backupMethodTabs @visibleMountsByType}}
                @handleTabClick={{this.setAuthType}}
                @selectedAuthMethod={{this.selectedAuthMethod}}
              />
            {{else if (eq this.authViewMode "backupTabs")}}
              <Auth::Tabs
                @authTabData={{this.backupMethodTabs}}
                @handleTabClick={{this.setAuthType}}
                @selectedAuthMethod={{this.selectedAuthMethod}}
              />
            {{else}}
              {{! Fallback is dropdown with all auth methods }}
              <Hds::Form::Select::Field
                name="selectedAuthMethod"
                {{on "input" this.setTypeFromDropdown}}
                data-test-select="auth type"
                as |F|
              >
                <F.Label class="has-top-margin-m">Method</F.Label>
                <F.Options>
                  {{#each this.availableMethodTypes as |type|}}
                    <option selected={{eq this.selectedAuthMethod type}} value={{type}}>
                      {{auth-display-name type}}
                    </option>
                  {{/each}}
                </F.Options>
              </Hds::Form::Select::Field>
            {{/if}}
          </div>
        </:authSelectOptions>

        <:error>
          {{#if this.errorMessage}}
            <MessageError @errorMessage={{this.errorMessage}} />
          {{/if}}
        </:error>

        <:advancedSettings>
          {{#if this.showAdvancedSettings}}
            <Hds::Reveal @text="Advanced settings" data-test-auth-form-options-toggle class="is-fullwidth">
              <Hds::Form::TextInput::Field name="path" data-test-input="path" as |F|>
                <F.Label class="has-top-margin-m">Mount path</F.Label>
                <F.HelperText>
                  If this authentication method was mounted using a non-default path, input it below. Otherwise Vault will
                  assume the default path
                  <Hds::Text::Code class="code-in-text">{{this.selectedAuthMethod}}</Hds::Text::Code>
                  .</F.HelperText>
              </Hds::Form::TextInput::Field>
            </Hds::Reveal>
          {{/if}}
        </:advancedSettings>

        <:footer>
          {{#if this.canToggleViews}}
            <Hds::Button
              {{on "click" this.toggleView}}
              @color="tertiary"
              @icon="arrow-right"
              @iconPosition="trailing"
              @isInline={{true}}
              @text="Sign in with other methods"
              data-test-other-methods-button
            />
          {{/if}}
        </:footer>
      </AuthFormComponent>
    {{/let}}
  {{/if}}
</div>