{"version":3,"file":"export.js","sources":["../../../../src/components/vault-reporting/dashboard/export.gts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: BUSL-1.1\n */\n\nimport Component from '@glimmer/component';\nimport { HdsDropdown } from '@hashicorp/design-system-components/components';\nimport { on } from '@ember/modifier';\nimport { fn } from '@ember/helper';\n\nimport type { UsageDashboardData } from '../../../types';\nimport type ReportingAnalyticsService from '../../../services/reporting-analytics';\nimport { service } from '@ember/service';\n\nexport interface DashboardExportSignature {\n  Args: {\n    data?: UsageDashboardData;\n  };\n\n  Blocks: {\n    default: [];\n  };\n  Element: HTMLElement;\n}\n\nexport default class DashboardExport extends Component<DashboardExportSignature> {\n  @service declare readonly reportingAnalytics: ReportingAnalyticsService;\n\n  #getNestedRows(records: Record<string, number>, prefix: string = '') {\n    return Object.entries(records).map(([key, value]) => {\n      return [`${prefix} ${key}`, value];\n    });\n  }\n\n  handleTrackExportToggle = () => {\n    this.reportingAnalytics.trackEvent('export_toggle');\n  };\n\n  handleTrackExportOption = (option: string) => {\n    this.reportingAnalytics.trackEvent(`export_option`, { option });\n  };\n\n  get dataAsDownloadableJSONString() {\n    const { data } = this.args;\n    const file = new Blob([JSON.stringify(data, null, '    ')], {\n      type: 'application/json',\n    });\n    return URL.createObjectURL(file);\n  }\n\n  get dataAsDownloadableCSVString() {\n    const headers = ['Metric', 'Count/Breakdown'];\n    // Manually define rows as looping through the data does not leave the most legible structure\n    const rows = [\n      headers,\n      ['Child Namespaces', this.args?.data?.namespaces || 0],\n      [\n        'Total KV Secrets',\n        (this.args.data?.kvv1Secrets || 0) + (this.args.data?.kvv2Secrets || 0),\n      ],\n      ['KV V1 Secrets', this.args.data?.kvv1Secrets || 0],\n      ['KV V2 Secrets', this.args.data?.kvv2Secrets || 0],\n      ['Secret Syncs', this.args.data?.secretSync?.totalDestinations || 0],\n      ['PKI Roles', this.args.data?.pki?.totalRoles || 0],\n      ...this.#getNestedRows(\n        this.args.data?.secretEngines || {},\n        'Secret Engine',\n      ),\n      ...this.#getNestedRows(this.args.data?.authMethods || {}, 'Auth Method'),\n      [\n        'Global Lease Count',\n        this.args.data?.leaseCountQuotas.globalLeaseCountQuota.count || 0,\n      ],\n      [\n        'Global Lease Quota',\n        this.args.data?.leaseCountQuotas.globalLeaseCountQuota.capacity || 0,\n      ],\n      [\n        'Cluster Disaster Recovery',\n        this.args?.data?.replicationStatus.drState || '-',\n      ],\n      [\n        'Cluster Disaster Recovery Primary',\n        this.args?.data?.replicationStatus.drPrimary ?? '-',\n      ],\n      [\n        'Cluster Performance',\n        this.args?.data?.replicationStatus.prState || '-',\n      ],\n      [\n        'Cluster Performance Primary',\n        this.args?.data?.replicationStatus.prPrimary ?? '-',\n      ],\n    ];\n    // Escape double quotes, quote cell content and separate with comma\n    const csvString = rows\n      .map((row) =>\n        row\n          .map((cell) => {\n            const escaped = String(cell).replace(/\"/g, '\"\"');\n            return `\"${escaped}\"`;\n          })\n          .join(','),\n      )\n      .join('\\r\\n');\n\n    const blob = new Blob([csvString], { type: 'text/csv' });\n\n    return URL.createObjectURL(blob);\n  }\n\n  <template>\n    {{#if @data}}\n      <HdsDropdown @matchToggleWidth={{true}} as |D|>\n        <D.ToggleButton\n          data-test-vault-reporting-export-toggle\n          @text=\"Export\"\n          {{on \"click\" this.handleTrackExportToggle}}\n        />\n        <D.Interactive\n          data-test-vault-reporting-export-json\n          @href={{this.dataAsDownloadableJSONString}}\n          download=\"vault-usage-dashboard.json\"\n          {{on \"click\" (fn this.handleTrackExportOption \"json\")}}\n        >JSON</D.Interactive>\n        <D.Interactive\n          data-test-vault-reporting-export-csv\n          @href={{this.dataAsDownloadableCSVString}}\n          download=\"vault-usage-dashboard.csv\"\n          {{on \"click\" (fn this.handleTrackExportOption \"csv\")}}\n        >CSV</D.Interactive>\n      </HdsDropdown>\n    {{/if}}\n  </template>\n}\n"],"names":["DashboardExport","Component","g","prototype","service","i","void 0","#getNestedRows","records","prefix","Object","entries","map","key","value","handleTrackExportToggle","reportingAnalytics","trackEvent","handleTrackExportOption","option","dataAsDownloadableJSONString","data","args","file","Blob","JSON","stringify","type","URL","createObjectURL","dataAsDownloadableCSVString","headers","rows","namespaces","kvv1Secrets","kvv2Secrets","secretSync","totalDestinations","pki","totalRoles","secretEngines","authMethods","leaseCountQuotas","globalLeaseCountQuota","count","capacity","replicationStatus","drState","drPrimary","prState","prPrimary","csvString","row","cell","escaped","String","replace","join","blob","setComponentTemplate","precompileTemplate","strictMode","scope","HdsDropdown","on","fn"],"mappings":"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"}