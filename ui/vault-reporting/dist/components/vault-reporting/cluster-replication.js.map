{"version":3,"file":"cluster-replication.js","sources":["../../../src/components/vault-reporting/cluster-replication.gts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: BUSL-1.1\n */\n\nimport Component from '@glimmer/component';\nimport {\n  HdsCardContainer,\n  HdsTextBody,\n  HdsBadge,\n} from '@hashicorp/design-system-components/components';\nimport TitleRow from './base/title-row.gts';\nimport { REPLICATION_ENABLED_STATE } from '../../types/index.ts';\nimport type { IconName } from '@hashicorp/flight-icons/svg';\nimport { htmlSafe } from '@ember/template';\n\nimport './cluster-replication.scss';\n\nexport interface ClusterReplicationSignature {\n  Args: {\n    disasterRecoveryState: REPLICATION_ENABLED_STATE | 'disabled';\n    performanceState: REPLICATION_ENABLED_STATE | 'disabled';\n    isVaultDedicated: boolean;\n  };\n\n  Blocks: {\n    default: [];\n  };\n\n  Element: HTMLElement;\n}\n\nexport default class ClusterReplication extends Component<ClusterReplicationSignature> {\n  getState = (state: REPLICATION_ENABLED_STATE | 'disabled' = 'disabled') => {\n    return state;\n  };\n\n  get isEmpty() {\n    return (\n      this.getState(this.args.disasterRecoveryState) === 'disabled' &&\n      this.getState(this.args.performanceState) === 'disabled'\n    );\n  }\n\n  get description() {\n    if (this.isEmpty) {\n      return htmlSafe(\n        'Enable <a class=\"hds-link-inline--color-secondary\" href=\"https://developer.hashicorp.com/vault/docs/internals/replication\" target=\"_blank\" data-test-vault-reporting-cluster-replication-description-link>replication</a> to replicate data across clusters.',\n      );\n    } else {\n      return 'Status of disaster recovery and performance replication.';\n    }\n  }\n\n  getIcon = (state: REPLICATION_ENABLED_STATE | 'disabled' = 'disabled') => {\n    const iconMap: Record<string, IconName> = {\n      disabled: 'x',\n      primary: 'check',\n      secondary: 'check',\n      bootstrapping: 'loading',\n    };\n    return iconMap[state] || iconMap['disabled'];\n  };\n\n  getColor = (state: REPLICATION_ENABLED_STATE | 'disabled' = 'disabled') => {\n    const colorMap: Record<string, HdsBadge['color']> = {\n      disabled: 'neutral',\n      primary: 'success',\n      secondary: 'success',\n      bootstrapping: 'neutral',\n    };\n    return colorMap[state] || colorMap['disabled'];\n  };\n\n  get linkUrl() {\n    const { isVaultDedicated = false } = this.args;\n    if (isVaultDedicated) {\n      return;\n    }\n    return 'replication';\n  }\n\n  <template>\n    <HdsCardContainer\n      data-test-vault-reporting-cluster-replication\n      @hasBorder={{true}}\n      class=\"ssu-cluster-replication\"\n      ...attributes\n    >\n      <TitleRow\n        @title=\"Cluster replication\"\n        @description={{this.description}}\n        @linkUrl={{this.linkUrl}}\n      />\n\n      <HdsTextBody\n        @size=\"300\"\n        data-test-vault-reporting-cluster-replication-dr-row\n      >\n        Disaster Recovery\n        <HdsBadge\n          class=\"ssu-cluster-replication__list-row__badge\"\n          data-test-vault-reporting-cluster-replication-dr-badge\n          @icon={{this.getIcon @disasterRecoveryState}}\n          @text={{this.getState @disasterRecoveryState}}\n          @color={{this.getColor @disasterRecoveryState}}\n          @type=\"outlined\"\n          @size=\"small\"\n        />\n      </HdsTextBody>\n\n      <HdsTextBody\n        @size=\"300\"\n        data-test-vault-reporting-cluster-replication-perf-row\n      >\n        Performance\n        <HdsBadge\n          class=\"ssu-cluster-replication__list-row__badge\"\n          data-test-vault-reporting-cluster-replication-perf-badge\n          @icon={{this.getIcon @performanceState}}\n          @text={{this.getState @performanceState}}\n          @color={{this.getColor @performanceState}}\n          @type=\"outlined\"\n          @size=\"small\"\n        />\n      </HdsTextBody>\n\n    </HdsCardContainer>\n  </template>\n}\n"],"names":["ClusterReplication","Component","getState","state","isEmpty","args","disasterRecoveryState","performanceState","description","htmlSafe","getIcon","iconMap","disabled","primary","secondary","bootstrapping","getColor","colorMap","linkUrl","isVaultDedicated","setComponentTemplate","precompileTemplate","strictMode","scope","HdsCardContainer","TitleRow","HdsTextBody","HdsBadge"],"mappings":";;;;;;;AAAA;;;AAGC;AA6Bc,MAAMA,2BAA2BC,SAAU,CAAA;AACxDC,EAAAA,QAAA,GAAWA,CAACC,KAAmC,GAAa,UAAU,KAAA;AACpE,IAAA,OAAOA,KAAA;GACP;EAEF,IAAIC,OAAUA,GAAA;IACZ,OACE,IAAI,CAACF,QAAQ,CAAC,IAAI,CAACG,IAAI,CAACC,qBAAqB,CAAA,KAAM,cACnD,IAAI,CAACJ,QAAQ,CAAC,IAAI,CAACG,IAAI,CAACE,gBAAgB,CAAA,KAAM,UAChD;AACF;EAEA,IAAIC,WAAcA,GAAA;IAChB,IAAI,IAAI,CAACJ,OAAO,EAAE;MAChB,OAAOK,QACL,CAAA,8PAAA,CAAA;AAEJ,KAAO,MAAA;AACL,MAAA,OAAO,0DAAA;AACT;AACF;AAEAC,EAAAA,OAAA,GAAUA,CAACP,KAAmC,GAAa,UAAU,KAAA;AACnE,IAAA,MAAMQ,OAAoC,GAAA;AACxCC,MAAAA,QAAU,EAAA,GAAA;AACVC,MAAAA,OAAS,EAAA,OAAA;AACTC,MAAAA,SAAW,EAAA,OAAA;AACXC,MAAAA,aAAe,EAAA;KACjB;IACA,OAAOJ,OAAO,CAACR,KAAA,CAAM,IAAIQ,OAAO,CAAC,UAAW,CAAA;GAC5C;AAEFK,EAAAA,QAAA,GAAWA,CAACb,KAAmC,GAAa,UAAU,KAAA;AACpE,IAAA,MAAMc,QAA8C,GAAA;AAClDL,MAAAA,QAAU,EAAA,SAAA;AACVC,MAAAA,OAAS,EAAA,SAAA;AACTC,MAAAA,SAAW,EAAA,SAAA;AACXC,MAAAA,aAAe,EAAA;KACjB;IACA,OAAOE,QAAQ,CAACd,KAAA,CAAM,IAAIc,QAAQ,CAAC,UAAW,CAAA;GAC9C;EAEF,IAAIC,OAAUA,GAAA;IACZ,MAAM;AAAEC,MAAAA,gBAAmB,GAAA;KAAO,GAAG,IAAI,CAACd,IAAI;AAC9C,IAAA,IAAIc,gBAAkB,EAAA;AACpB,MAAA;AACF;AACA,IAAA,OAAO,aAAA;AACT;AAEA,EAAA;IAAAC,oBAAA,CAAAC,kBAAA,CA8CA,+nCAAA,EAAA;MAAAC,UAAA,EAAA,IAAA;AAAAC,MAAAA,KAAA,EAAAA,OAAA;QAAAC,gBAAA;QAAAC,QAAA;QAAAC,WAAA;AAAAC,QAAAA;AAAA,OAAA;KAAU,CAAA,EAAV,IAAW,CAAA;AAAD;AACZ;;;;"}