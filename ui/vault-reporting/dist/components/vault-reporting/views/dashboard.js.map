{"version":3,"file":"dashboard.js","sources":["../../../../src/components/vault-reporting/views/dashboard.gts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: BUSL-1.1\n */\n\nimport Component from '@glimmer/component';\nimport { array } from '@ember/helper';\nimport './dashboard.scss';\nimport ReportingCounter from '../counter.gts';\nimport ReportingHorizontalBarChart from '../horizontal-bar-chart.gts';\nimport GlobalLease from '../global-lease.gts';\nimport ClusterReplication from '../cluster-replication.gts';\nimport DashboardExport from '../dashboard/export.gts';\n\nimport type {\n  UsageDashboardData,\n  SimpleDatum,\n  getUsageDataFunction,\n} from '../../../types';\nimport { tracked } from '@glimmer/tracking';\nimport type { IconName } from '@hashicorp/flight-icons/svg';\nimport {\n  HdsPageHeader,\n  HdsLinkInline,\n  HdsCardContainer,\n  HdsBadge,\n  HdsAlert,\n  HdsTextBody,\n} from '@hashicorp/design-system-components/components';\nimport { service } from '@ember/service';\nimport type ReportingAnalyticsService from '../../../services/reporting-analytics';\nimport { on } from '@ember/modifier';\n\ninterface CounterBlock {\n  title: string;\n  tooltipMessage: string;\n  data: number;\n  icon?: IconName;\n  suffix?: string;\n  link?: string;\n  emptyText?: string;\n  emptyLink?: string;\n}\n\nexport interface SSUViewDashboardSignature {\n  Args: {\n    onFetchUsageData: getUsageDataFunction;\n    isVaultDedicated: boolean;\n  };\n\n  Blocks: {\n    default: [];\n  };\n\n  Element: HTMLElement;\n}\nexport default class SSUViewDashboard extends Component<SSUViewDashboardSignature> {\n  @service declare readonly reportingAnalytics: ReportingAnalyticsService;\n\n  @tracked\n  data?: UsageDashboardData;\n\n  @tracked\n  lastUpdatedTime: string = '';\n\n  @tracked\n  error?: unknown;\n\n  constructor(owner: unknown, args: SSUViewDashboardSignature['Args']) {\n    super(owner, args);\n    this.fetchAllData();\n  }\n\n  fetchAllData: () => void = async () => {\n    try {\n      this.error = undefined;\n      this.data = await this.args.onFetchUsageData();\n      this.lastUpdatedTime = new Intl.DateTimeFormat('en-US', {\n        timeStyle: 'medium',\n      }).format(new Date());\n    } catch (e) {\n      this.error = e;\n    }\n  };\n\n  handleTrackAnalyticsEvent = (\n    eventName: string,\n    properties?: object,\n    options?: object,\n  ) => {\n    this.reportingAnalytics.trackEvent(eventName, properties, options);\n  };\n\n  handleTrackSurveyLink: () => void = () => {\n    this.handleTrackAnalyticsEvent('survey_link');\n  };\n\n  handleRefresh: () => void = () => {\n    this.fetchAllData();\n    this.handleTrackAnalyticsEvent('refresh_button');\n  };\n\n  getBarChartData: (\n    map: Record<string, number>,\n    exclude?: string[],\n  ) => SimpleDatum[] = (map = {}, exclude?: string[]) => {\n    return Object.entries(map)\n      .map(([label, value]) => {\n        return {\n          label,\n          value,\n        };\n      })\n      .filter((item) => {\n        return !exclude?.includes(item.label);\n      });\n  };\n\n  get isVaultDedicated(): boolean {\n    return this.args.isVaultDedicated ?? false;\n  }\n\n  get kvSecretsTooltipMessage(): string {\n    const { kvv1Secrets = 0, kvv2Secrets = 0 } = this.data ?? {};\n    const kvv1Formatted = Intl.NumberFormat().format(kvv1Secrets);\n    const kvv2Formatted = Intl.NumberFormat().format(kvv2Secrets);\n\n    if (kvv1Secrets && kvv2Secrets) {\n      return `Combined count of ${kvv1Formatted} KV version 1 secrets and ${kvv2Formatted} KV version 2 secrets.`;\n    }\n    if (kvv1Secrets) {\n      return `Total number of ${kvv1Formatted} KV version 1 secrets.`;\n    }\n    if (kvv2Secrets) {\n      return `Total number of ${kvv2Formatted} KV version 2 secrets.`;\n    }\n    return '';\n  }\n\n  get counters(): CounterBlock[] {\n    const { kvv1Secrets = 0, kvv2Secrets = 0 } = this.data ?? {};\n    return [\n      {\n        title: 'Child namespaces',\n        tooltipMessage: 'Total number of namespaces for this cluster.',\n        data: this.data?.namespaces ?? 0,\n        link: 'access/namespaces',\n      },\n      {\n        title: 'KV secrets',\n        tooltipMessage: this.kvSecretsTooltipMessage,\n        data: kvv1Secrets + kvv2Secrets,\n        emptyText: 'No secrets stored',\n        emptyLink: 'secrets',\n      },\n      {\n        title: 'Secrets sync',\n        tooltipMessage:\n          'Total number of destinations (e.g. third-party integrations) synced with secrets from this namespace.',\n        data: this.data?.secretSync?.totalDestinations ?? 0,\n        link: 'sync/secrets/overview',\n        emptyText: 'Not activated',\n        suffix: 'destinations',\n      },\n      {\n        title: 'PKI roles',\n        tooltipMessage: 'Total number of PKI roles configured.',\n        data: this.data?.pki?.totalRoles ?? 0,\n        emptyText: 'No roles created',\n      },\n    ];\n  }\n\n  get namespace(): string {\n    return this.isVaultDedicated ? 'admin' : 'root';\n  }\n\n  <template>\n    <div class=\"dashboard\" data-test-dashboard-container>\n      <HdsPageHeader as |PH|>\n        <PH.Title>\n          Vault Usage\n          <HdsBadge\n            class=\"dashboard__badge\"\n            @size=\"medium\"\n            @icon=\"org\"\n            @color=\"neutral\"\n            @text={{this.namespace}}\n          />\n        </PH.Title>\n        <PH.Description class=\"dashboard__description\">\n          {{#if this.lastUpdatedTime}}\n            <HdsTextBody @tag=\"p\" @size=\"200\" @color=\"faint\">\n              Updated today at\n              {{this.lastUpdatedTime}}.\n\n            </HdsTextBody>\n          {{/if}}\n          <HdsTextBody @tag=\"p\" @size=\"200\" @color=\"primary\">\n            View and export your Vault usage. Don't see what you're looking for?\n            <HdsLinkInline\n              data-test-vault-reporting-dashboard-survey-link\n              @icon=\"external-link\"\n              @href=\"https://hashicorp.sjc1.qualtrics.com/jfe/form/SV_bqhLeB3deLd2caa\"\n              target=\"_blank\"\n              {{on \"click\" this.handleTrackSurveyLink}}\n            >Share feedback</HdsLinkInline>\n          </HdsTextBody>\n        </PH.Description>\n        <PH.Actions>\n          <DashboardExport @data={{this.data}} />\n        </PH.Actions>\n      </HdsPageHeader>\n      {{#if this.error}}\n        <HdsAlert\n          data-test-vault-reporting-dashboard-error\n          @type=\"inline\"\n          @color=\"critical\"\n          class=\"dashboard__error\"\n          as |A|\n        >\n          <A.Title>Error</A.Title>\n          <A.Description\n            data-test-vault-reporting-dashboard-error-description\n          >An error occurred, please try again.</A.Description>\n        </HdsAlert>\n      {{/if}}\n      {{#if this.data}}\n        <HdsCardContainer\n          @hasBorder={{true}}\n          {{! @glint-expect-error }}\n          @background=\"neutral-secondary\"\n          class=\"dashboard__counters\"\n          data-test-vault-reporting-dashboard-counters\n        >\n          {{#each this.counters as |counter|}}\n            <ReportingCounter\n              @title={{counter.title}}\n              @tooltipMessage={{counter.tooltipMessage}}\n              @count={{counter.data}}\n              @icon={{counter.icon}}\n              @suffix={{counter.suffix}}\n              @link={{counter.link}}\n              @emptyText={{counter.emptyText}}\n              @emptyLink={{counter.emptyLink}}\n            />\n          {{/each}}\n        </HdsCardContainer>\n        <div\n          data-test-vault-reporting-dashboard-viz-blocks\n          class=\"dashboard__viz-blocks\"\n        >\n          <div>\n            <ReportingHorizontalBarChart\n              @data={{this.getBarChartData this.data.authMethods}}\n              @title=\"Authentication methods\"\n              @description=\"Enabled authentication methods for this cluster.\"\n              @linkUrl=\"access\"\n              class=\"dashboard__viz-block\"\n              data-test-vault-reporting-dashboard-auth-methods\n            />\n\n            <ReportingHorizontalBarChart\n              @data={{this.getBarChartData\n                this.data.secretEngines\n                (array \"system\" \"identity\")\n              }}\n              @title=\"Secret engines\"\n              @description=\"Enabled secret engines for this cluster.\"\n              @linkUrl=\"secrets\"\n              class=\"dashboard__viz-block\"\n              data-test-vault-reporting-dashboard-secret-engines\n            />\n\n            <ClusterReplication\n              @disasterRecoveryState={{this.data.replicationStatus.drState}}\n              @performanceState={{this.data.replicationStatus.prState}}\n              @isVaultDedicated={{this.isVaultDedicated}}\n              data-test-vault-reporting-dashboard-cluster-replication\n            />\n          </div>\n\n          <div>\n            <ReportingHorizontalBarChart\n              @data={{this.getBarChartData this.data.leasesByAuthMethod}}\n              @title=\"Leases by authentication methods\"\n              @description=\"Active leases issued per authentication method.\"\n              @linkUrl=\"https://developer.hashicorp.com/vault/docs/concepts/auth#auth-leases\"\n              @linkText=\"Documentation\"\n              @linkIcon=\"docs-link\"\n              @linkTarget=\"_blank\"\n              class=\"dashboard__viz-block\"\n              data-test-vault-reporting-dashboard-leases-by-auth-method\n            >\n              <:empty as |A|>\n                <A.Body\n                  @text=\"Lease are created when clients authenticate. Add an authentication method to monitor leases across this namespace.\"\n                />\n                <A.Footer as |F|>\n                  <F.LinkStandalone\n                    @icon=\"docs-link\"\n                    @text=\"Authentication leases\"\n                    @href=\"https://developer.hashicorp.com/vault/docs/concepts/auth#auth-leases\"\n                  />\n                </A.Footer>\n              </:empty>\n            </ReportingHorizontalBarChart>\n            <GlobalLease\n              @count={{this.data.leaseCountQuotas.globalLeaseCountQuota.count}}\n              @quota={{this.data.leaseCountQuotas.globalLeaseCountQuota.capacity}}\n              class=\"dashboard__viz-block\"\n              data-test-vault-reporting-dashboard-lease-count\n            />\n          </div>\n\n        </div>\n      {{/if}}\n    </div>\n  </template>\n}\n"],"names":["SSUViewDashboard","Component","g","prototype","service","i","void 0","tracked","constructor","owner","args","fetchAllData","error","undefined","data","onFetchUsageData","lastUpdatedTime","Intl","DateTimeFormat","timeStyle","format","Date","e","handleTrackAnalyticsEvent","eventName","properties","options","reportingAnalytics","trackEvent","handleTrackSurveyLink","handleRefresh","getBarChartData","map","exclude","Object","entries","label","value","filter","item","includes","isVaultDedicated","kvSecretsTooltipMessage","kvv1Secrets","kvv2Secrets","kvv1Formatted","NumberFormat","kvv2Formatted","counters","title","tooltipMessage","namespaces","link","emptyText","emptyLink","secretSync","totalDestinations","suffix","pki","totalRoles","namespace","setComponentTemplate","precompileTemplate","strictMode","scope","HdsPageHeader","HdsBadge","HdsTextBody","HdsLinkInline","on","DashboardExport","HdsAlert","HdsCardContainer","ReportingCounter","ReportingHorizontalBarChart","array","ClusterReplication","GlobalLease"],"mappings":"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"}