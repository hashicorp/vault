{"version":3,"file":"dashboard.js","sources":["../../../../src/components/vault-reporting/views/dashboard.gts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: BUSL-1.1\n */\n\nimport Component from '@glimmer/component';\nimport { concat } from '@ember/helper';\nimport './dashboard.scss';\nimport ReportingCounter from '../counter.gts';\nimport ReportingHorizontalBarChart from '../horizontal-bar-chart.gts';\nimport GlobalLease from '../global-lease.gts';\nimport ClusterReplication from '../cluster-replication.gts';\nimport DashboardExport from '../dashboard/export.gts';\n\nimport type {\n  UsageDashboardData,\n  SimpleDatum,\n  getUsageDataFunction,\n} from '../../../types';\nimport { tracked } from '@glimmer/tracking';\nimport type { IconName } from '@hashicorp/flight-icons/svg';\nimport { on } from '@ember/modifier';\nimport {\n  HdsSeparator,\n  HdsTextDisplay,\n  HdsPageHeader,\n  HdsLinkInline,\n  HdsButton,\n  HdsCardContainer,\n  HdsBadge,\n  HdsAlert,\n} from '@hashicorp/design-system-components/components';\n\ninterface CounterBlock {\n  title: string;\n  tooltipMessage: string;\n  data: number;\n  icon?: IconName;\n  suffix?: string;\n  link?: string;\n  emptyText?: string;\n}\n\nexport interface SSUViewDashboardSignature {\n  Args: {\n    onFetchUsageData: getUsageDataFunction;\n    isVaultDedicated: boolean;\n  };\n\n  Blocks: {\n    default: [];\n  };\n\n  Element: HTMLElement;\n}\nexport default class SSUViewDashboard extends Component<SSUViewDashboardSignature> {\n  @tracked\n  data?: UsageDashboardData;\n\n  @tracked\n  lastUpdatedTime: string = '';\n\n  @tracked\n  error?: unknown;\n\n  constructor(owner: unknown, args: SSUViewDashboardSignature['Args']) {\n    super(owner, args);\n    this.fetchAllData();\n  }\n\n  fetchAllData: () => void = async () => {\n    try {\n      this.error = undefined;\n      this.data = await this.args.onFetchUsageData();\n      this.lastUpdatedTime = new Intl.DateTimeFormat('en-US', {\n        dateStyle: 'medium',\n        timeStyle: 'medium',\n      }).format(new Date());\n    } catch (e) {\n      this.error = e;\n    }\n  };\n\n  getBarChartData: (map: Record<string, number>) => SimpleDatum[] = (\n    map = {},\n  ) => {\n    return Object.entries(map).map(([label, value]) => {\n      return {\n        label,\n        value,\n      };\n    });\n  };\n\n  get isVaultDedicated(): boolean {\n    return this.args.isVaultDedicated ?? true;\n  }\n\n  get kvSecretsTooltipMessage(): string {\n    const kvv1Secrets = this.data?.kvv1_secrets ?? 0;\n    const kvv2Secrets = this.data?.kvv2_secrets ?? 0;\n    const kvv1Formatted = Intl.NumberFormat().format(kvv1Secrets);\n    const kvv2Formatted = Intl.NumberFormat().format(kvv2Secrets);\n\n    if (kvv1Secrets && kvv2Secrets) {\n      return `Combined count of ${kvv1Formatted} KV v1 secrets and ${kvv2Formatted} KV v2 secrets in this namespace`;\n    }\n    if (kvv1Secrets) {\n      return `Total number of ${kvv1Formatted} KV v1 secrets in this namespace`;\n    }\n    if (kvv2Secrets) {\n      return `Total number of ${kvv2Formatted} KV v2 secrets in this namespace`;\n    }\n    return '';\n  }\n\n  get counters(): CounterBlock[] {\n    return [\n      {\n        title: 'Child namespaces',\n        tooltipMessage: this.isVaultDedicated\n          ? 'Total number of direct child namespaces under the root/ namespace'\n          : 'Total number of direct child namespaces under the admin/ namespace',\n        data: this.data?.namespaces ?? 0,\n        link: 'access/namespaces',\n      },\n      {\n        title: 'KV secrets',\n        tooltipMessage: this.kvSecretsTooltipMessage,\n        data: (this.data?.kvv1_secrets ?? 0) + (this.data?.kvv2_secrets ?? 0),\n        emptyText: 'No secrets stored',\n      },\n      {\n        title: 'Secrets sync',\n        tooltipMessage: this.isVaultDedicated\n          ? 'Total number of destinations (e.g. third-party integrations) synced with secrets from this namespace'\n          : '',\n        data: this.data?.secrets_sync ?? 0,\n        link: 'sync/secrets/overview',\n        emptyText: 'Not configured',\n        suffix: 'destinations',\n      },\n      {\n        title: 'PKI roles',\n        tooltipMessage: this.isVaultDedicated\n          ? 'Total number of PKI roles configured in this namespace'\n          : '',\n        data: this.data?.pki?.total_roles ?? 0,\n        emptyText: 'No roles created',\n      },\n    ];\n  }\n\n  get namespace(): string {\n    return this.isVaultDedicated ? 'Admin' : 'Root';\n  }\n\n  <template>\n    <div class=\"dashboard\">\n      <HdsPageHeader as |PH|>\n        <PH.Title>Vault Usage\n          <HdsBadge\n            class=\"dashboard__badge\"\n            @size=\"small\"\n            @type=\"inverted\"\n            @text={{concat \"Namespace: \" this.namespace}}\n          />\n        </PH.Title>\n        <PH.Description>\n          {{#if this.lastUpdatedTime}}\n            Last updated\n            {{this.lastUpdatedTime}}.\n          {{/if}}\n          Don't see what you're looking for?\n          <HdsLinkInline @icon=\"external-link\" @href=\"#\">Share feedback.</HdsLinkInline>\n        </PH.Description>\n        <PH.Actions>\n          <HdsButton\n            @text=\"Refresh\"\n            @icon=\"reload\"\n            @iconPosition=\"leading\"\n            @color=\"secondary\"\n            data-test-dashboard-refresh-button\n            {{on \"click\" this.fetchAllData}}\n          />\n          <DashboardExport @data={{this.data}} />\n        </PH.Actions>\n      </HdsPageHeader>\n      {{#if this.error}}\n        <HdsAlert\n          data-test-dashboard-error\n          @type=\"inline\"\n          @color=\"critical\"\n          class=\"dashboard__error\"\n          as |A|\n        >\n          <A.Title>Error</A.Title>\n          <A.Description data-test-dashboard-error-description>An error\n            occurred, please try again.</A.Description>\n        </HdsAlert>\n      {{/if}}\n      {{#if this.data}}\n        <HdsCardContainer\n          @hasBorder={{true}}\n          class=\"dashboard__counters\"\n          data-test-dashboard-counters\n        >\n          {{#each this.counters as |counter|}}\n            <ReportingCounter\n              @title={{counter.title}}\n              @tooltipMessage={{counter.tooltipMessage}}\n              @count={{counter.data}}\n              @icon={{counter.icon}}\n              @suffix={{counter.suffix}}\n              @link={{counter.link}}\n              @emptyText={{counter.emptyText}}\n            />\n          {{/each}}\n        </HdsCardContainer>\n        <HdsSeparator />\n        <HdsTextDisplay\n          @tag=\"h2\"\n          @size=\"400\"\n          class=\"dashboard__inventory-header\"\n        >Resource inventory</HdsTextDisplay>\n        <div class=\"dashboard__viz-blocks\">\n          <div>\n            <ReportingHorizontalBarChart\n              @data={{this.getBarChartData this.data.secret_engines}}\n              @title=\"Secret engines\"\n              @description=\"Breakdown of secret engines for this namespace(s)\"\n              @linkUrl=\"secrets\"\n              class=\"dashboard__viz-block\"\n              data-test-dashboard-secret-engines\n            />\n            <GlobalLease\n              @count={{this.data.lease_count_quotas.global_lease_count_quota.count}}\n              @quota={{this.data.lease_count_quotas.global_lease_count_quota.capacity}}\n              class=\"dashboard__viz-block\"\n              data-test-dashboard-lease-count\n            />\n          </div>\n\n          <div>\n            <ReportingHorizontalBarChart\n              @data={{this.getBarChartData this.data.auth_methods}}\n              @title=\"Authentication methods\"\n              @description=\"Breakdown of authentication methods\"\n              @linkUrl=\"access\"\n              class=\"dashboard__viz-block\"\n              data-test-dashboard-auth-methods\n            />\n\n            <ClusterReplication\n              @isDisasterRecoveryPrimary={{this.data.replication_status.dr_primary}}\n              @disasterRecoveryState={{this.data.replication_status.dr_state}}\n              @isPerformancePrimary={{this.data.replication_status.pr_primary}}\n              @performanceState={{this.data.replication_status.pr_state}}\n              data-test-dashboard-cluster-replication\n            />\n          </div>\n        </div>\n      {{/if}}\n    </div>\n  </template>\n}\n"],"names":["SSUViewDashboard","Component","g","prototype","tracked","i","void 0","constructor","owner","args","fetchAllData","error","undefined","data","onFetchUsageData","lastUpdatedTime","Intl","DateTimeFormat","dateStyle","timeStyle","format","Date","e","getBarChartData","map","Object","entries","label","value","isVaultDedicated","kvSecretsTooltipMessage","kvv1Secrets","kvv1_secrets","kvv2Secrets","kvv2_secrets","kvv1Formatted","NumberFormat","kvv2Formatted","counters","title","tooltipMessage","namespaces","link","emptyText","secrets_sync","suffix","pki","total_roles","namespace","setComponentTemplate","precompileTemplate","strictMode","scope","HdsPageHeader","HdsBadge","concat","HdsLinkInline","HdsButton","on","DashboardExport","HdsAlert","HdsCardContainer","ReportingCounter","HdsSeparator","HdsTextDisplay","ReportingHorizontalBarChart","GlobalLease","ClusterReplication"],"mappings":";;;;;;;;;;;;;;AAAA;;;AAGC;AAoDc,MAAMA,yBAAyBC,SAAU,CAAA;AAAA,EAAA;IAAAC,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,MAAA,EAAA,CACrDC,OAAA,CAAA,CAAA;AAAA;AAAA,EAAA,KAAA,IAAAC,CAAA,CAAA,IAAA,EAAA,MAAA,CAAA,EAAAC,MAAA;AAAA,EAAA;IAAAJ,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,iBAAA,EAAA,CAGAC,OAAA,CAAA,EAAA,YAAA;AAAA,MAAA,OACyB,EAAG;AAAA,KAAA,CAAA;AAAA;AAAA,EAAA,gBAAA,IAAAC,CAAA,CAAA,IAAA,EAAA,iBAAA,CAAA,EAAAC,MAAA;AAAA,EAAA;IAAAJ,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,OAAA,EAAA,CAE5BC,OAAA,CAAA,CAAA;AAAA;AAAA,EAAA,MAAA,IAAAC,CAAA,CAAA,IAAA,EAAA,OAAA,CAAA,EAAAC,MAAA;AAGDC,EAAAA,WAAAA,CAAYC,KAAc,EAAEC,IAAuC,EAAE;AACnE,IAAA,KAAK,CAACD,KAAO,EAAAC,IAAA,CAAA;IACb,IAAI,CAACC,YAAY,EAAA;AACnB;EAEAA,YAAA,GAA2B,YAAA;IACzB,IAAI;MACF,IAAI,CAACC,KAAK,GAAGC,SAAA;MACb,IAAI,CAACC,IAAI,GAAG,MAAM,IAAI,CAACJ,IAAI,CAACK,gBAAgB,EAAA;MAC5C,IAAI,CAACC,eAAe,GAAG,IAAIC,IAAK,CAAAC,cAAc,CAAC,OAAS,EAAA;AACtDC,QAAAA,SAAW,EAAA,QAAA;AACXC,QAAAA,SAAW,EAAA;OACV,CAAA,CAAAC,MAAM,CAAC,IAAIC,IAAA,EAAA,CAAA;KAChB,CAAE,OAAOC,CAAG,EAAA;MACV,IAAI,CAACX,KAAK,GAAGW,CAAA;AACf;GACA;AAEFC,EAAAA,eAAkB,GAAgDA,CAChEC,GAAM,GAAA,EAAE,KAAA;AAER,IAAA,OAAOC,MAAA,CAAOC,OAAO,CAACF,GAAA,CAAA,CAAKA,GAAG,CAAC,CAAC,CAACG,KAAA,EAAOC,KAAM,CAAA,KAAA;MAC5C,OAAO;QACLD,KAAA;AACAC,QAAAA;OACF;AACF,KAAA,CAAA;GACA;EAEF,IAAIC,gBAAAA,GAA4B;AAC9B,IAAA,OAAO,IAAI,CAACpB,IAAI,CAACoB,gBAAgB,IAAI,IAAA;AACvC;EAEA,IAAIC,uBAAAA,GAAkC;IACpC,MAAMC,WAAc,GAAA,IAAI,CAAClB,IAAI,EAAEmB,YAAgB,IAAA,CAAA;IAC/C,MAAMC,WAAc,GAAA,IAAI,CAACpB,IAAI,EAAEqB,YAAgB,IAAA,CAAA;IAC/C,MAAMC,aAAgB,GAAAnB,IAAA,CAAKoB,YAAY,EAAA,CAAGhB,MAAM,CAACW,WAAA,CAAA;IACjD,MAAMM,aAAgB,GAAArB,IAAA,CAAKoB,YAAY,EAAA,CAAGhB,MAAM,CAACa,WAAA,CAAA;IAEjD,IAAIF,eAAeE,WAAa,EAAA;AAC9B,MAAA,OAAO,CAAqBE,kBAAAA,EAAAA,aAAA,CAAmCE,mBAAAA,EAAAA,aAAA,CAA+C,gCAAA,CAAA;AAChH;AACA,IAAA,IAAIN,WAAa,EAAA;MACf,OAAO,CAAA,gBAAA,EAAmBI,aAAA,CAA+C,gCAAA,CAAA;AAC3E;AACA,IAAA,IAAIF,WAAa,EAAA;MACf,OAAO,CAAA,gBAAA,EAAmBI,aAAA,CAA+C,gCAAA,CAAA;AAC3E;AACA,IAAA,OAAO,EAAA;AACT;EAEA,IAAIC,WAA2B;AAC7B,IAAA,OAAO,CACL;AACEC,MAAAA,KAAO,EAAA,kBAAA;AACPC,MAAAA,cAAA,EAAgB,IAAI,CAACX,gBAAgB,GACjC,mEACA,GAAA,oEAAA;AACJhB,MAAAA,IAAA,EAAM,IAAI,CAACA,IAAI,EAAE4B,UAAc,IAAA,CAAA;AAC/BC,MAAAA,IAAM,EAAA;AACR,KAAA,EACA;AACEH,MAAAA,KAAO,EAAA,YAAA;MACPC,cAAgB,EAAA,IAAI,CAACV,uBAAuB;AAC5CjB,MAAAA,IAAA,EAAM,CAAC,IAAI,CAACA,IAAI,EAAEmB,YAAgB,IAAA,CAAC,KAAK,IAAI,CAACnB,IAAI,EAAEqB,gBAAgB,CAAC,CAAA;AACpES,MAAAA,SAAW,EAAA;AACb,KAAA,EACA;AACEJ,MAAAA,KAAO,EAAA,cAAA;AACPC,MAAAA,cAAA,EAAgB,IAAI,CAACX,gBAAgB,GACjC,sGACA,GAAA,EAAA;AACJhB,MAAAA,IAAA,EAAM,IAAI,CAACA,IAAI,EAAE+B,YAAgB,IAAA,CAAA;AACjCF,MAAAA,IAAM,EAAA,uBAAA;AACNC,MAAAA,SAAW,EAAA,gBAAA;AACXE,MAAAA,MAAQ,EAAA;AACV,KAAA,EACA;AACEN,MAAAA,KAAO,EAAA,WAAA;AACPC,MAAAA,cAAA,EAAgB,IAAI,CAACX,gBAAgB,GACjC,wDACA,GAAA,EAAA;MACJhB,IAAA,EAAM,IAAI,CAACA,IAAI,EAAEiC,KAAKC,WAAe,IAAA,CAAA;AACrCJ,MAAAA,SAAW,EAAA;AACb,KAAA,CACD;AACH;EAEA,IAAIK,SAAAA,GAAoB;AACtB,IAAA,OAAO,IAAI,CAACnB,gBAAgB,GAAG,OAAU,GAAA,MAAA;AAC3C;AAEA,EAAA;IAAAoB,oBAAA,CAAAC,kBAAA,CA2GA,4iGAAA,EAAA;MAAAC,UAAA,EAAA,IAAA;AAAAC,MAAAA,KAAA,EAAAA,OAAA;QAAAC,aAAA;QAAAC,QAAA;QAAAC,MAAA;QAAAC,aAAA;QAAAC,SAAA;QAAAC,EAAA;QAAAC,eAAA;QAAAC,QAAA;QAAAC,gBAAA;0BAAAC,mBAAA;QAAAC,YAAA;QAAAC,cAAA;qCAAAC,8BAAA;QAAAC,WAAA;AAAAC,QAAAA;AAAA,OAAA;KAAU,CAAA,EAAV,IAAW,CAAA;AAAD;AACZ;;;;"}