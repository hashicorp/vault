{"version":3,"file":"axis-offset.js","sources":["../../src/modifiers/axis-offset.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: BUSL-1.1\n */\n\nimport { modifier } from 'ember-modifier';\n/**\n * By default the axis elements are outside of the bounds of the svg and rely on the containing element having\n * enough padding to compensate. A fixed padding is not flexible to varied width of axis labels.\n *\n * This modifier is used to pad compensate for the width of the axis element. It also returns a value\n * that can be used to set the chart width based on the offset amount.\n */\nexport default modifier(\n  (\n    element: SVGElement,\n    [onOffset, additionalPadding = 0]: [\n      (offset: number) => unknown,\n      additionalPadding?: number,\n    ],\n  ) => {\n    const axis = element.querySelector('g.axis');\n\n    if (!axis) {\n      return;\n    }\n\n    const axisOffset = axis.getBoundingClientRect().width;\n    element.style.transform = `translateX(${axisOffset + additionalPadding}px)`;\n    if (onOffset) {\n      onOffset(axisOffset + additionalPadding);\n    }\n  },\n);\n"],"names":["modifier","element","onOffset","additionalPadding","axis","querySelector","axisOffset","getBoundingClientRect","width","style","transform"],"mappings":";;AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAeA,QAAQ,CACrB,CACEC,OAAmB,EACnB,CAACC,QAAQ,EAAEC,iBAAiB,GAAG,CAAC,CAG/B,KACE;AACH,EAAA,MAAMC,IAAI,GAAGH,OAAO,CAACI,aAAa,CAAC,QAAQ,CAAC;EAE5C,IAAI,CAACD,IAAI,EAAE;AACT,IAAA;AACF;EAEA,MAAME,UAAU,GAAGF,IAAI,CAACG,qBAAqB,EAAE,CAACC,KAAK;EACrDP,OAAO,CAACQ,KAAK,CAACC,SAAS,GAAG,CAAcJ,WAAAA,EAAAA,UAAU,GAAGH,iBAAiB,CAAK,GAAA,CAAA;AAC3E,EAAA,IAAID,QAAQ,EAAE;AACZA,IAAAA,QAAQ,CAACI,UAAU,GAAGH,iBAAiB,CAAC;AAC1C;AACF,CACF,CAAC;;;;"}