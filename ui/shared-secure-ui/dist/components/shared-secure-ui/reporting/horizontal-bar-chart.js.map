{"version":3,"file":"horizontal-bar-chart.js","sources":["../../../../src/components/shared-secure-ui/reporting/horizontal-bar-chart.gts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: BUSL-1.1\n */\n\nimport './horizontal-bar-chart.scss';\nimport Component from '@glimmer/component';\n\nimport {\n  HdsCardContainer,\n  HdsSeparator,\n  HdsTextBody,\n} from '@hashicorp/design-system-components/components';\nimport TitleRow from './base/title-row.gts';\n\nimport LinealFluid from '@lineal-viz/lineal/components/lineal/fluid/index.js';\nimport LinealHBars from '@lineal-viz/lineal/components/lineal/h-bars/index.js';\nimport scaleLinear from '@lineal-viz/lineal/helpers/scale-linear.js';\nimport scaleBand from '@lineal-viz/lineal/helpers/scale-band.js';\nimport stackH from '@lineal-viz/lineal/helpers/stack-h.js';\nimport LinealAxis from '@lineal-viz/lineal/components/lineal/axis/index.js';\nimport axisOffset from '../../../modifiers/axis-offset.ts';\nimport { tracked } from '@glimmer/tracking';\nimport type { SimpleDatum } from '../../../types/reporting/index.ts';\n\nexport interface SSUReportingHorizontalBarChartSignature {\n  Args: {\n    data: SimpleDatum[];\n    title: string;\n    description?: string;\n    linkUrl?: string;\n  };\n\n  Blocks: {\n    default: [];\n  };\n\n  Element: HTMLElement;\n}\nexport default class SSUReportingHorizontalBarChart extends Component<SSUReportingHorizontalBarChartSignature> {\n  @tracked xRangeOffsetWidth = 0;\n\n  get data() {\n    // Filtering DESC for now per designs, could make configurable if needed\n    return (this.args.data || [])\n      .filter(({ value }) => value !== 0)\n      .sort((a, b) => {\n        return b.value - a.value;\n      });\n  }\n\n  get total() {\n    return this.data.reduce((runningTotal, { value }) => {\n      return runningTotal + value;\n    }, 0);\n  }\n\n  get a11yLabel() {\n    const title = `Total of ${this.total} ${this.args.title}.`;\n\n    const itemsDescription = this.data\n      .map(({ value, label }) => {\n        return `${value} ${label}`;\n      })\n      .join(', ');\n\n    return `${title} Comprised of ${itemsDescription}.`;\n  }\n\n  get yDomain() {\n    return this.data.map(({ label }) => label);\n  }\n\n  get xDomain() {\n    return [0, Math.max(0, ...this.data.map(({ value }) => value))];\n  }\n\n  get rangeHeight() {\n    return this.data.length * 26;\n  }\n\n  get yRange() {\n    return [0, this.rangeHeight];\n  }\n\n  getXRange = (width: number) => {\n    return [0, Math.max(0, width - this.xRangeOffsetWidth - 32)];\n  };\n\n  handleAxisOffset = (offsetWidth: number) => {\n    this.xRangeOffsetWidth = offsetWidth;\n  };\n\n  <template>\n    <HdsCardContainer\n      ...attributes\n      class=\"ssu-horizontal-bar-chart__container\"\n      @hasBorder={{true}}\n    >\n      <TitleRow\n        @title={{@title}}\n        @description={{@description}}\n        @linkUrl={{@linkUrl}}\n      />\n\n      {{! TODO: Figure out glint errors on lineal components }}\n      {{! @glint-expect-error }}\n      <LinealFluid class=\"ssu-horizontal-bar-chart__chart\" as |width|>\n        <svg\n          height={{this.rangeHeight}}\n          width=\"100%\"\n          {{axisOffset this.handleAxisOffset 8}}\n          data-test-horizontal-bar-chart-svg\n        >\n          {{! We are using the stacked version of the HBars as there seems to be an issue in the non-stacked version for how the x position is calculated.  }}\n          {{#let\n            (scaleLinear range=(this.getXRange width) domain=this.xDomain)\n            (scaleBand range=this.yRange domain=this.yDomain)\n            (stackH data=this.data x=\"value\" y=\"label\" z=\"\")\n            as |xScale yScale stacked|\n          }}\n            {{#if xScale.isValid}}\n              <LinealAxis\n                @scale={{yScale}}\n                {{! @glint-expect-error }}\n                @orientation=\"left\"\n                @includeDomain={{false}}\n              />\n              {{! TODO: Extra wrapper exists only for test attribute, figure out a better way }}\n              <g data-test-horizontal-bar-chart-bars>\n                <LinealHBars\n                  @data={{stacked.data}}\n                  {{! @glint-expect-error }}\n                  @x=\"x\"\n                  {{! @glint-expect-error }}\n                  @y=\"y\"\n                  {{! @glint-expect-error }}\n                  @height={{10}}\n                  @xScale={{xScale}}\n                  @yScale={{yScale}}\n                />\n              </g>\n              <g>\n                {{! @glint-expect-error }}\n                {{#each stacked.data as |dataset|}}\n                  {{#each dataset as |datum|}}\n                    <text\n                      class=\"ssu-horizontal-bar-chart__label\"\n                      {{! @glint-expect-error }}\n                      y={{yScale.compute datum.y}}\n                      x={{xScale.compute datum.x}}\n                      dy=\"16px\"\n                      dx=\"8px\"\n                      data-test-horizontal-bar-chart-inline-count\n                    >\n                      {{datum.x}}\n                    </text>\n                  {{/each}}\n                {{/each}}\n              </g>\n            {{/if}}\n          {{/let}}\n        </svg>\n      </LinealFluid>\n      <HdsSeparator class=\"ssu-horizontal-bar-chart__separator\" @spacing=\"0\" />\n      <HdsTextBody\n        class=\"ssu-horizontal-bar-chart__total\"\n        @size=\"200\"\n        @tag=\"p\"\n        data-test-horizontal-bar-chart-total\n      >\n        Total:\n        {{this.total}}\n      </HdsTextBody>\n    </HdsCardContainer>\n  </template>\n}\n"],"names":["SSUReportingHorizontalBarChart","Component","g","prototype","tracked","i","void 0","data","args","filter","value","sort","a","b","total","reduce","runningTotal","a11yLabel","title","itemsDescription","map","label","join","yDomain","xDomain","Math","max","rangeHeight","length","yRange","getXRange","width","xRangeOffsetWidth","handleAxisOffset","offsetWidth","setComponentTemplate","precompileTemplate","strictMode","scope","HdsCardContainer","TitleRow","LinealFluid","axisOffset","scaleLinear","scaleBand","stackH","LinealAxis","LinealHBars","HdsSeparator","HdsTextBody"],"mappings":"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"}