{"version":3,"file":"dashboard.js","sources":["../../../../src/components/shared-secure-ui/views/dashboard.gts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: BUSL-1.1\n */\n\nimport Component from '@glimmer/component';\nimport './dashboard.scss';\nimport ReportingCounter from '../reporting/counter.gts';\nimport ReportingHorizontalBarChart from '../reporting/horizontal-bar-chart.gts';\nimport GlobalLease from '../reporting/global-lease.gts';\nimport ClusterReplication from '../reporting/cluster-replication.gts';\nimport type {\n  IUsageDashboardService,\n  UsageDashboardData,\n  SimpleDatum,\n} from '../../../types/reporting';\nimport { tracked } from '@glimmer/tracking';\nimport type { IconName } from '@hashicorp/flight-icons/svg';\nimport { on } from '@ember/modifier';\nimport {\n  HdsSeparator,\n  HdsTextDisplay,\n  HdsPageHeader,\n  HdsLinkInline,\n  HdsButton,\n  HdsCardContainer,\n} from '@hashicorp/design-system-components/components';\n\ninterface CounterBlock {\n  title: string;\n  data: number;\n  icon?: IconName;\n  suffix?: string;\n  link?: string;\n}\n\nexport interface SSUViewDashboardSignature {\n  Args: {\n    service: IUsageDashboardService;\n  };\n\n  Blocks: {\n    default: [];\n  };\n\n  Element: HTMLElement;\n}\nexport default class SSUViewDashboard extends Component<SSUViewDashboardSignature> {\n  @tracked\n  data?: UsageDashboardData;\n\n  @tracked\n  lastUpdatedTime: string = '';\n\n  constructor(owner: unknown, args: SSUViewDashboardSignature['Args']) {\n    super(owner, args);\n\n    this.fetchAllData().catch((error) => {\n      console.error('Error fetching data', error);\n    });\n  }\n\n  fetchAllData = async () => {\n    this.data = await this.args.service.getUsageData();\n    this.lastUpdatedTime = new Intl.DateTimeFormat('en-US', {\n      dateStyle: 'medium',\n      timeStyle: 'medium',\n    }).format(new Date());\n  };\n\n  getBarChartData: (map: Record<string, number>) => SimpleDatum[] = (map) => {\n    return Object.entries(map).map(([label, value]) => {\n      return {\n        label,\n        value,\n      };\n    });\n  };\n\n  get counters(): CounterBlock[] {\n    return [\n      {\n        title: 'Child namespaces',\n        data: this.data?.namespaces ?? 0,\n        link: '/access/namespaces',\n      },\n      {\n        title: 'KV secrets',\n        data: (this.data?.kvv1_secrets ?? 0) + (this.data?.kvv2_secrets ?? 0),\n      },\n      {\n        title: 'Secrets sync',\n        data: this.data?.secrets_sync ?? 0,\n        link: '/sync/secrets',\n      },\n      {\n        title: 'PKI roles',\n        data: this.data?.pki.total_roles ?? 0,\n      },\n    ];\n  }\n\n  <template>\n    <div class=\"dashboard\">\n      <HdsPageHeader as |PH|>\n        <PH.Title>Vault Usage</PH.Title>\n        <PH.Description>\n          {{#if this.lastUpdatedTime}}\n            Last updated\n            {{this.lastUpdatedTime}}.\n          {{/if}}\n          Don't see what you're looking for?\n          <HdsLinkInline @icon=\"external-link\" @href=\"#\">Share feedback.</HdsLinkInline>\n        </PH.Description>\n        <PH.Actions>\n          <HdsButton\n            @text=\"Refresh\"\n            @icon=\"reload\"\n            @iconPosition=\"leading\"\n            @color=\"secondary\"\n            {{on \"click\" this.fetchAllData}}\n          />\n        </PH.Actions>\n      </HdsPageHeader>\n      {{#if this.data}}\n        <HdsCardContainer @hasBorder={{true}} class=\"dashboard__counters\">\n          {{#each this.counters as |counter|}}\n            <ReportingCounter\n              @title={{counter.title}}\n              @count={{counter.data}}\n              @icon={{counter.icon}}\n              @suffix={{counter.suffix}}\n              @link={{counter.link}}\n            />\n          {{/each}}\n        </HdsCardContainer>\n        <HdsSeparator />\n        <HdsTextDisplay\n          @tag=\"h2\"\n          @size=\"400\"\n          class=\"dashboard__inventory-header\"\n        >Resource inventory</HdsTextDisplay>\n        <div class=\"dashboard__viz-blocks\">\n          <div>\n            <ReportingHorizontalBarChart\n              @data={{this.getBarChartData this.data.secret_engines}}\n              @title=\"Secret engines\"\n              @description=\"Breakdown of secret engines for this namespace(s)\"\n              @linkUrl=\"secrets\"\n              class=\"dashboard__viz-block\"\n            />\n            <GlobalLease\n              @count={{this.data.lease_count_quotas.global_lease_count_quota.count}}\n              @quota={{this.data.lease_count_quotas.global_lease_count_quota.capacity}}\n              class=\"dashboard__viz-block\"\n            />\n          </div>\n\n          <div>\n            <ReportingHorizontalBarChart\n              @data={{this.getBarChartData this.data.auth_methods}}\n              @title=\"Authentication methods\"\n              @description=\"Breakdown of authentication methods\"\n              @linkUrl=\"access\"\n              class=\"dashboard__viz-block\"\n            />\n\n            <ClusterReplication\n              @isDisasterRecoveryPrimary={{this.data.replication_status.dr_primary}}\n              @disasterRecoveryState={{this.data.replication_status.dr_state}}\n              @isPerformancePrimary={{this.data.replication_status.pr_primary}}\n              @performanceState={{this.data.replication_status.pr_state}}\n            />\n          </div>\n        </div>\n      {{/if}}\n    </div>\n  </template>\n}\n"],"names":["SSUViewDashboard","Component","g","prototype","tracked","i","void 0","constructor","owner","args","fetchAllData","catch","error","console","data","service","getUsageData","lastUpdatedTime","Intl","DateTimeFormat","dateStyle","timeStyle","format","Date","getBarChartData","map","Object","entries","label","value","counters","title","namespaces","link","kvv1_secrets","kvv2_secrets","secrets_sync","pki","total_roles","setComponentTemplate","precompileTemplate","strictMode","scope","HdsPageHeader","HdsLinkInline","HdsButton","on","HdsCardContainer","ReportingCounter","HdsSeparator","HdsTextDisplay","ReportingHorizontalBarChart","GlobalLease","ClusterReplication"],"mappings":";;;;;;;;;;;;AAAA;;;AAGC;AA4Cc,MAAMA,yBAAyBC,SAAU,CAAA;AAAA,EAAA;IAAAC,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,MAAA,EAAA,CACrDC,OAAA,CAAA,CAAA;AAAA;AAAA,EAAA,KAAA,IAAAC,CAAA,CAAA,IAAA,EAAA,MAAA,CAAA,EAAAC,SAAA;AAAA,EAAA;IAAAJ,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,iBAAA,EAAA,CAGAC,OAAA,CAAA,EAAA,YAAA;AAAA,MAAA,OACyB,EAAG;AAAA,KAAA,CAAA;AAAA;AAAA,EAAA,gBAAA,IAAAC,CAAA,CAAA,IAAA,EAAA,iBAAA,CAAA,EAAAC,SAAA;AAE7BC,EAAAA,WAAAA,CAAYC,KAAc,EAAEC,IAAuC,EAAE;AACnE,IAAA,KAAK,CAACD,KAAO,EAAAC,IAAA,CAAA;IAEb,IAAI,CAACC,YAAY,EAAG,CAAAC,KAAK,CAAEC,KAAA,IAAA;AACzBC,MAAAA,OAAQ,CAAAD,KAAK,CAAC,qBAAuB,EAAAA,KAAA,CAAA;AACvC,KAAA,CAAA;AACF;EAEAF,YAAe,GAAA,YAAA;AACb,IAAA,IAAI,CAACI,IAAI,GAAG,MAAM,IAAI,CAACL,IAAI,CAACM,OAAO,CAACC,YAAY,EAAA;IAChD,IAAI,CAACC,eAAe,GAAG,IAAIC,IAAK,CAAAC,cAAc,CAAC,OAAS,EAAA;AACtDC,MAAAA,SAAW,EAAA,QAAA;AACXC,MAAAA,SAAW,EAAA;KACV,CAAA,CAAAC,MAAM,CAAC,IAAIC,IAAA,EAAA,CAAA;GACd;EAEFC,eAAA,GAAmEC,GAAA,IAAA;AACjE,IAAA,OAAOC,MAAA,CAAOC,OAAO,CAACF,GAAA,CAAA,CAAKA,GAAG,CAAC,CAAC,CAACG,KAAA,EAAOC,KAAM,CAAA,KAAA;MAC5C,OAAO;QACLD,KAAA;AACAC,QAAAA;OACF;AACF,KAAA,CAAA;GACA;EAEF,IAAIC,WAA2B;AAC7B,IAAA,OAAO,CACL;AACEC,MAAAA,KAAO,EAAA,kBAAA;AACPjB,MAAAA,IAAA,EAAM,IAAI,CAACA,IAAI,EAAEkB,UAAc,IAAA,CAAA;AAC/BC,MAAAA,IAAM,EAAA;AACR,KAAA,EACA;AACEF,MAAAA,KAAO,EAAA,YAAA;AACPjB,MAAAA,IAAA,EAAM,CAAC,IAAI,CAACA,IAAI,EAAEoB,YAAgB,IAAA,CAAC,KAAK,IAAI,CAACpB,IAAI,EAAEqB,gBAAgB,CAAC;AACtE,KAAA,EACA;AACEJ,MAAAA,KAAO,EAAA,cAAA;AACPjB,MAAAA,IAAA,EAAM,IAAI,CAACA,IAAI,EAAEsB,YAAgB,IAAA,CAAA;AACjCH,MAAAA,IAAM,EAAA;AACR,KAAA,EACA;AACEF,MAAAA,KAAO,EAAA,WAAA;MACPjB,IAAA,EAAM,IAAI,CAACA,IAAI,EAAEuB,IAAIC,WAAe,IAAA;AACtC,KAAA,CACD;AACH;AAEA,EAAA;IAAAC,oBAAA,CAAAC,kBAAA,CA2EA,wvEAAA,EAAA;MAAAC,UAAA,EAAA,IAAA;AAAAC,MAAAA,KAAA,EAAAA,OAAA;QAAAC,aAAA;QAAAC,aAAA;QAAAC,SAAA;QAAAC,EAAA;QAAAC,gBAAA;0BAAAC,mBAAA;QAAAC,YAAA;QAAAC,cAAA;qCAAAC,8BAAA;QAAAC,WAAA;AAAAC,QAAAA;AAAA,OAAA;KAAU,CAAA,EAAV,IAAW,CAAA;AAAD;AACZ;;;;"}