{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: BUSL-1.1
}}

<PageHeader as |p|>
  <p.levelLeft>
    <h1 class="title is-3">
      UI Login Rules
    </h1>
  </p.levelLeft>
</PageHeader>

<Toolbar />

{{#if @loginRules}}
  {{#each @loginRules as |rule|}}
    <div class="list-item-row linked-block-item is-no-underline">
      <div>
        <div class="is-grid align-items-center linked-block-title">
          <Hds::Icon @name="user-check" @size="24" />
          <div class="has-text-weight-semibold has-left-margin-xs" data-test-rule-name={{rule.Name}}>{{rule.Name}}</div>
        </div>
        <div class="has-top-margin-m" data-test-rule-path={{rule.Namespace}}>{{rule.Namespace}}</div>
      </div>
      <div class="linked-block-popup-menu">
        <Hds::Dropdown @isInline={{true}} as |dd|>
          <dd.ToggleIcon
            @icon="more-horizontal"
            @hasChevron={{false}}
            @text="login rules menu"
            data-test-popup-menu-trigger
          />
          <dd.Interactive @route="login-settings.rule.details" @model={{rule.Name}} data-test-popup-menu="view-rule">
            View
          </dd.Interactive>
          {{#if (has-capability this.capabilities "delete" pathKey="customLogin" params=rule)}}
            <dd.Interactive
              @color="critical"
              data-test-popup-menu="delete-rule"
              {{on "click" (fn (mut this.ruleToDelete) rule)}}
            >Delete</dd.Interactive>
          {{/if}}
        </Hds::Dropdown>
      </div>
    </div>
  {{/each}}
{{else}}
  <EmptyState
    data-test-empty-state="login-rules-list"
    @title="No UI login rules yet"
    @message="Login rules can be used to select default and back up login methods and customize which methods display in the web UI login form. Available to be created via the CLI or HTTP API."
  >
    {{! TODO: update href with tutorial link }}
    {{! <Hds::Link::Standalone @icon="arrow-right" @iconPosition="trailing" @text="Learn more" @href="/" /> }}
  </EmptyState>
{{/if}}

{{#if this.ruleToDelete}}
  <ConfirmModal
    @color="critical"
    @onClose={{fn (mut this.ruleToDelete) null}}
    @confirmMessage="This will permanently delete this rule."
    @onConfirm={{this.onDelete}}
  />
{{/if}}