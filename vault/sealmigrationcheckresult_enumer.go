// Code generated by "enumer -type=sealMigrationCheckResult -trimprefix=sealMigrationCheck -transform=snake"; DO NOT EDIT.

package vault

import (
	"fmt"
)

const _sealMigrationCheckResultName = "errorskipadjustdo_not_ajust"

var _sealMigrationCheckResultIndex = [...]uint8{0, 5, 9, 15, 27}

func (i sealMigrationCheckResult) String() string {
	if i < 0 || i >= sealMigrationCheckResult(len(_sealMigrationCheckResultIndex)-1) {
		return fmt.Sprintf("sealMigrationCheckResult(%d)", i)
	}
	return _sealMigrationCheckResultName[_sealMigrationCheckResultIndex[i]:_sealMigrationCheckResultIndex[i+1]]
}

var _sealMigrationCheckResultValues = []sealMigrationCheckResult{0, 1, 2, 3}

var _sealMigrationCheckResultNameToValueMap = map[string]sealMigrationCheckResult{
	_sealMigrationCheckResultName[0:5]:   0,
	_sealMigrationCheckResultName[5:9]:   1,
	_sealMigrationCheckResultName[9:15]:  2,
	_sealMigrationCheckResultName[15:27]: 3,
}

// sealMigrationCheckResultString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func sealMigrationCheckResultString(s string) (sealMigrationCheckResult, error) {
	if val, ok := _sealMigrationCheckResultNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to sealMigrationCheckResult values", s)
}

// sealMigrationCheckResultValues returns all values of the enum
func sealMigrationCheckResultValues() []sealMigrationCheckResult {
	return _sealMigrationCheckResultValues
}

// IsAsealMigrationCheckResult returns "true" if the value is listed in the enum definition. "false" otherwise
func (i sealMigrationCheckResult) IsAsealMigrationCheckResult() bool {
	for _, v := range _sealMigrationCheckResultValues {
		if i == v {
			return true
		}
	}
	return false
}
