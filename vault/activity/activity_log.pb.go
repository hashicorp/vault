// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: vault/activity/activity_log.proto

package activity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EntityRecord is generated the first time a client is active each month. This
// can store clients associated with entities or nonEntity clients, and really
// is a ClientRecord, not specifically an EntityRecord.
type EntityRecord struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	ClientID    string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	NamespaceID string                 `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceID,proto3" json:"namespace_id,omitempty"`
	// using the Timestamp type would cost us an extra
	// 4 bytes per record to store nanoseconds.
	Timestamp int64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// non_entity records whether the given EntityRecord is
	// for a TWE or an entity-bound token.
	NonEntity bool `protobuf:"varint,4,opt,name=non_entity,json=nonEntity,proto3" json:"non_entity,omitempty"`
	// MountAccessor is the auth mount accessor of the token used to perform the
	// activity.
	MountAccessor string `protobuf:"bytes,5,opt,name=mount_accessor,json=mountAccessor,proto3" json:"mount_accessor,omitempty"`
	// client_type identifies the source of the entity record (entity,
	// non-entity, acme, etc.)
	ClientType    string `protobuf:"bytes,6,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityRecord) Reset() {
	*x = EntityRecord{}
	mi := &file_vault_activity_activity_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityRecord) ProtoMessage() {}

func (x *EntityRecord) ProtoReflect() protoreflect.Message {
	mi := &file_vault_activity_activity_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityRecord.ProtoReflect.Descriptor instead.
func (*EntityRecord) Descriptor() ([]byte, []int) {
	return file_vault_activity_activity_log_proto_rawDescGZIP(), []int{0}
}

func (x *EntityRecord) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *EntityRecord) GetNamespaceID() string {
	if x != nil {
		return x.NamespaceID
	}
	return ""
}

func (x *EntityRecord) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *EntityRecord) GetNonEntity() bool {
	if x != nil {
		return x.NonEntity
	}
	return false
}

func (x *EntityRecord) GetMountAccessor() string {
	if x != nil {
		return x.MountAccessor
	}
	return ""
}

func (x *EntityRecord) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

type LogFragment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// hostname (or node ID?) where the fragment originated,
	// used for debugging.
	OriginatingNode string `protobuf:"bytes,1,opt,name=originating_node,json=originatingNode,proto3" json:"originating_node,omitempty"`
	// active clients not yet in a log segment
	Clients []*EntityRecord `protobuf:"bytes,2,rep,name=clients,proto3" json:"clients,omitempty"`
	// token counts not yet in a log segment,
	// indexed by namespace ID
	NonEntityTokens map[string]uint64 `protobuf:"bytes,3,rep,name=non_entity_tokens,json=nonEntityTokens,proto3" json:"non_entity_tokens,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LogFragment) Reset() {
	*x = LogFragment{}
	mi := &file_vault_activity_activity_log_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFragment) ProtoMessage() {}

func (x *LogFragment) ProtoReflect() protoreflect.Message {
	mi := &file_vault_activity_activity_log_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogFragment.ProtoReflect.Descriptor instead.
func (*LogFragment) Descriptor() ([]byte, []int) {
	return file_vault_activity_activity_log_proto_rawDescGZIP(), []int{1}
}

func (x *LogFragment) GetOriginatingNode() string {
	if x != nil {
		return x.OriginatingNode
	}
	return ""
}

func (x *LogFragment) GetClients() []*EntityRecord {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *LogFragment) GetNonEntityTokens() map[string]uint64 {
	if x != nil {
		return x.NonEntityTokens
	}
	return nil
}

// This activity log stores records for both clients with entities
// and clients without entities
type EntityActivityLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clients       []*EntityRecord        `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityActivityLog) Reset() {
	*x = EntityActivityLog{}
	mi := &file_vault_activity_activity_log_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityActivityLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityActivityLog) ProtoMessage() {}

func (x *EntityActivityLog) ProtoReflect() protoreflect.Message {
	mi := &file_vault_activity_activity_log_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityActivityLog.ProtoReflect.Descriptor instead.
func (*EntityActivityLog) Descriptor() ([]byte, []int) {
	return file_vault_activity_activity_log_proto_rawDescGZIP(), []int{2}
}

func (x *EntityActivityLog) GetClients() []*EntityRecord {
	if x != nil {
		return x.Clients
	}
	return nil
}

type TokenCount struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CountByNamespaceID map[string]uint64      `protobuf:"bytes,1,rep,name=count_by_namespace_id,json=countByNamespaceId,proto3" json:"count_by_namespace_id,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TokenCount) Reset() {
	*x = TokenCount{}
	mi := &file_vault_activity_activity_log_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenCount) ProtoMessage() {}

func (x *TokenCount) ProtoReflect() protoreflect.Message {
	mi := &file_vault_activity_activity_log_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenCount.ProtoReflect.Descriptor instead.
func (*TokenCount) Descriptor() ([]byte, []int) {
	return file_vault_activity_activity_log_proto_rawDescGZIP(), []int{3}
}

func (x *TokenCount) GetCountByNamespaceID() map[string]uint64 {
	if x != nil {
		return x.CountByNamespaceID
	}
	return nil
}

type LogFragmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogFragmentResponse) Reset() {
	*x = LogFragmentResponse{}
	mi := &file_vault_activity_activity_log_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogFragmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFragmentResponse) ProtoMessage() {}

func (x *LogFragmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vault_activity_activity_log_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogFragmentResponse.ProtoReflect.Descriptor instead.
func (*LogFragmentResponse) Descriptor() ([]byte, []int) {
	return file_vault_activity_activity_log_proto_rawDescGZIP(), []int{4}
}

var File_vault_activity_activity_log_proto protoreflect.FileDescriptor

const file_vault_activity_activity_log_proto_rawDesc = "" +
	"\n" +
	"!vault/activity/activity_log.proto\x12\bactivity\"\xd3\x01\n" +
	"\fEntityRecord\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientID\x12!\n" +
	"\fnamespace_id\x18\x02 \x01(\tR\vnamespaceID\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"non_entity\x18\x04 \x01(\bR\tnonEntity\x12%\n" +
	"\x0emount_accessor\x18\x05 \x01(\tR\rmountAccessor\x12\x1f\n" +
	"\vclient_type\x18\x06 \x01(\tR\n" +
	"clientType\"\x86\x02\n" +
	"\vLogFragment\x12)\n" +
	"\x10originating_node\x18\x01 \x01(\tR\x0foriginatingNode\x120\n" +
	"\aclients\x18\x02 \x03(\v2\x16.activity.EntityRecordR\aclients\x12V\n" +
	"\x11non_entity_tokens\x18\x03 \x03(\v2*.activity.LogFragment.NonEntityTokensEntryR\x0fnonEntityTokens\x1aB\n" +
	"\x14NonEntityTokensEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"E\n" +
	"\x11EntityActivityLog\x120\n" +
	"\aclients\x18\x01 \x03(\v2\x16.activity.EntityRecordR\aclients\"\xb4\x01\n" +
	"\n" +
	"TokenCount\x12_\n" +
	"\x15count_by_namespace_id\x18\x01 \x03(\v2,.activity.TokenCount.CountByNamespaceIDEntryR\x12countByNamespaceId\x1aE\n" +
	"\x17CountByNamespaceIDEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"\x15\n" +
	"\x13LogFragmentResponseB+Z)github.com/hashicorp/vault/vault/activityb\x06proto3"

var (
	file_vault_activity_activity_log_proto_rawDescOnce sync.Once
	file_vault_activity_activity_log_proto_rawDescData []byte
)

func file_vault_activity_activity_log_proto_rawDescGZIP() []byte {
	file_vault_activity_activity_log_proto_rawDescOnce.Do(func() {
		file_vault_activity_activity_log_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vault_activity_activity_log_proto_rawDesc), len(file_vault_activity_activity_log_proto_rawDesc)))
	})
	return file_vault_activity_activity_log_proto_rawDescData
}

var file_vault_activity_activity_log_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_vault_activity_activity_log_proto_goTypes = []any{
	(*EntityRecord)(nil),        // 0: activity.EntityRecord
	(*LogFragment)(nil),         // 1: activity.LogFragment
	(*EntityActivityLog)(nil),   // 2: activity.EntityActivityLog
	(*TokenCount)(nil),          // 3: activity.TokenCount
	(*LogFragmentResponse)(nil), // 4: activity.LogFragmentResponse
	nil,                         // 5: activity.LogFragment.NonEntityTokensEntry
	nil,                         // 6: activity.TokenCount.CountByNamespaceIDEntry
}
var file_vault_activity_activity_log_proto_depIDxs = []int32{
	0, // 0: activity.LogFragment.clients:type_name -> activity.EntityRecord
	5, // 1: activity.LogFragment.non_entity_tokens:type_name -> activity.LogFragment.NonEntityTokensEntry
	0, // 2: activity.EntityActivityLog.clients:type_name -> activity.EntityRecord
	6, // 3: activity.TokenCount.count_by_namespace_id:type_name -> activity.TokenCount.CountByNamespaceIDEntry
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_vault_activity_activity_log_proto_init() }
func file_vault_activity_activity_log_proto_init() {
	if File_vault_activity_activity_log_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vault_activity_activity_log_proto_rawDesc), len(file_vault_activity_activity_log_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vault_activity_activity_log_proto_goTypes,
		DependencyIndexes: file_vault_activity_activity_log_proto_depIDxs,
		MessageInfos:      file_vault_activity_activity_log_proto_msgTypes,
	}.Build()
	File_vault_activity_activity_log_proto = out.File
	file_vault_activity_activity_log_proto_goTypes = nil
	file_vault_activity_activity_log_proto_depIDxs = nil
}
