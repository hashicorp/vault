// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: vault/hcp_link/proto/node_status/status.proto

package node_status

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogLevel int32

const (
	LogLevel_NO_LEVEL LogLevel = 0
	LogLevel_TRACE    LogLevel = 1
	LogLevel_DEBUG    LogLevel = 2
	LogLevel_INFO     LogLevel = 3
	LogLevel_WARN     LogLevel = 4
	LogLevel_ERROR    LogLevel = 5
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "NO_LEVEL",
		1: "TRACE",
		2: "DEBUG",
		3: "INFO",
		4: "WARN",
		5: "ERROR",
	}
	LogLevel_value = map[string]int32{
		"NO_LEVEL": 0,
		"TRACE":    1,
		"DEBUG":    2,
		"INFO":     3,
		"WARN":     4,
		"ERROR":    5,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_vault_hcp_link_proto_node_status_status_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_vault_hcp_link_proto_node_status_status_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_node_status_status_proto_rawDescGZIP(), []int{0}
}

type RaftStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsVoter       bool                   `protobuf:"varint,1,opt,name=IsVoter,proto3" json:"IsVoter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaftStatus) Reset() {
	*x = RaftStatus{}
	mi := &file_vault_hcp_link_proto_node_status_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaftStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftStatus) ProtoMessage() {}

func (x *RaftStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_node_status_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftStatus.ProtoReflect.Descriptor instead.
func (*RaftStatus) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_node_status_status_proto_rawDescGZIP(), []int{0}
}

func (x *RaftStatus) GetIsVoter() bool {
	if x != nil {
		return x.IsVoter
	}
	return false
}

type LinkedClusterNodeStatusResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Type                   string                 `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Initialized            bool                   `protobuf:"varint,2,opt,name=Initialized,proto3" json:"Initialized,omitempty"`
	Sealed                 bool                   `protobuf:"varint,3,opt,name=Sealed,proto3" json:"Sealed,omitempty"`
	T                      int64                  `protobuf:"varint,4,opt,name=T,proto3" json:"T,omitempty"`
	N                      int64                  `protobuf:"varint,5,opt,name=N,proto3" json:"N,omitempty"`
	Progress               int64                  `protobuf:"varint,6,opt,name=Progress,proto3" json:"Progress,omitempty"`
	Nonce                  string                 `protobuf:"bytes,7,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Version                string                 `protobuf:"bytes,8,opt,name=Version,proto3" json:"Version,omitempty"`
	BuildDate              string                 `protobuf:"bytes,9,opt,name=BuildDate,proto3" json:"BuildDate,omitempty"`
	Migration              bool                   `protobuf:"varint,10,opt,name=Migration,proto3" json:"Migration,omitempty"`
	ClusterName            string                 `protobuf:"bytes,11,opt,name=ClusterName,proto3" json:"ClusterName,omitempty"`
	ClusterID              string                 `protobuf:"bytes,12,opt,name=ClusterID,proto3" json:"ClusterID,omitempty"`
	RecoverySeal           bool                   `protobuf:"varint,13,opt,name=RecoverySeal,proto3" json:"RecoverySeal,omitempty"`
	StorageType            string                 `protobuf:"bytes,14,opt,name=StorageType,proto3" json:"StorageType,omitempty"`
	ReplicationState       []string               `protobuf:"bytes,15,rep,name=ReplicationState,proto3" json:"ReplicationState,omitempty"`
	Hostname               string                 `protobuf:"bytes,16,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	ListenerAddresses      []string               `protobuf:"bytes,17,rep,name=ListenerAddresses,proto3" json:"ListenerAddresses,omitempty"`
	OperatingSystem        string                 `protobuf:"bytes,18,opt,name=OperatingSystem,proto3" json:"OperatingSystem,omitempty"`
	OperatingSystemVersion string                 `protobuf:"bytes,19,opt,name=OperatingSystemVersion,proto3" json:"OperatingSystemVersion,omitempty"`
	LogLevel               LogLevel               `protobuf:"varint,20,opt,name=LogLevel,proto3,enum=hashicorp.vault.hcp_link.node_status.LogLevel" json:"LogLevel,omitempty"`
	ActiveTime             *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=ActiveTime,proto3" json:"ActiveTime,omitempty"`
	RaftStatus             *RaftStatus            `protobuf:"bytes,22,opt,name=RaftStatus,proto3" json:"RaftStatus,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LinkedClusterNodeStatusResponse) Reset() {
	*x = LinkedClusterNodeStatusResponse{}
	mi := &file_vault_hcp_link_proto_node_status_status_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkedClusterNodeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedClusterNodeStatusResponse) ProtoMessage() {}

func (x *LinkedClusterNodeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_node_status_status_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedClusterNodeStatusResponse.ProtoReflect.Descriptor instead.
func (*LinkedClusterNodeStatusResponse) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_node_status_status_proto_rawDescGZIP(), []int{1}
}

func (x *LinkedClusterNodeStatusResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LinkedClusterNodeStatusResponse) GetInitialized() bool {
	if x != nil {
		return x.Initialized
	}
	return false
}

func (x *LinkedClusterNodeStatusResponse) GetSealed() bool {
	if x != nil {
		return x.Sealed
	}
	return false
}

func (x *LinkedClusterNodeStatusResponse) GetT() int64 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *LinkedClusterNodeStatusResponse) GetN() int64 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *LinkedClusterNodeStatusResponse) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *LinkedClusterNodeStatusResponse) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *LinkedClusterNodeStatusResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *LinkedClusterNodeStatusResponse) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

func (x *LinkedClusterNodeStatusResponse) GetMigration() bool {
	if x != nil {
		return x.Migration
	}
	return false
}

func (x *LinkedClusterNodeStatusResponse) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *LinkedClusterNodeStatusResponse) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

func (x *LinkedClusterNodeStatusResponse) GetRecoverySeal() bool {
	if x != nil {
		return x.RecoverySeal
	}
	return false
}

func (x *LinkedClusterNodeStatusResponse) GetStorageType() string {
	if x != nil {
		return x.StorageType
	}
	return ""
}

func (x *LinkedClusterNodeStatusResponse) GetReplicationState() []string {
	if x != nil {
		return x.ReplicationState
	}
	return nil
}

func (x *LinkedClusterNodeStatusResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *LinkedClusterNodeStatusResponse) GetListenerAddresses() []string {
	if x != nil {
		return x.ListenerAddresses
	}
	return nil
}

func (x *LinkedClusterNodeStatusResponse) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *LinkedClusterNodeStatusResponse) GetOperatingSystemVersion() string {
	if x != nil {
		return x.OperatingSystemVersion
	}
	return ""
}

func (x *LinkedClusterNodeStatusResponse) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_NO_LEVEL
}

func (x *LinkedClusterNodeStatusResponse) GetActiveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveTime
	}
	return nil
}

func (x *LinkedClusterNodeStatusResponse) GetRaftStatus() *RaftStatus {
	if x != nil {
		return x.RaftStatus
	}
	return nil
}

var File_vault_hcp_link_proto_node_status_status_proto protoreflect.FileDescriptor

const file_vault_hcp_link_proto_node_status_status_proto_rawDesc = "" +
	"\n" +
	"-vault/hcp_link/proto/node_status/status.proto\x12$hashicorp.vault.hcp_link.node_status\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"&\n" +
	"\n" +
	"RaftStatus\x12\x18\n" +
	"\aIsVoter\x18\x01 \x01(\bR\aIsVoter\"\xcb\x06\n" +
	"\x1fLinkedClusterNodeStatusResponse\x12\x12\n" +
	"\x04Type\x18\x01 \x01(\tR\x04Type\x12 \n" +
	"\vInitialized\x18\x02 \x01(\bR\vInitialized\x12\x16\n" +
	"\x06Sealed\x18\x03 \x01(\bR\x06Sealed\x12\f\n" +
	"\x01T\x18\x04 \x01(\x03R\x01T\x12\f\n" +
	"\x01N\x18\x05 \x01(\x03R\x01N\x12\x1a\n" +
	"\bProgress\x18\x06 \x01(\x03R\bProgress\x12\x14\n" +
	"\x05Nonce\x18\a \x01(\tR\x05Nonce\x12\x18\n" +
	"\aVersion\x18\b \x01(\tR\aVersion\x12\x1c\n" +
	"\tBuildDate\x18\t \x01(\tR\tBuildDate\x12\x1c\n" +
	"\tMigration\x18\n" +
	" \x01(\bR\tMigration\x12 \n" +
	"\vClusterName\x18\v \x01(\tR\vClusterName\x12\x1c\n" +
	"\tClusterID\x18\f \x01(\tR\tClusterID\x12\"\n" +
	"\fRecoverySeal\x18\r \x01(\bR\fRecoverySeal\x12 \n" +
	"\vStorageType\x18\x0e \x01(\tR\vStorageType\x12*\n" +
	"\x10ReplicationState\x18\x0f \x03(\tR\x10ReplicationState\x12\x1a\n" +
	"\bHostname\x18\x10 \x01(\tR\bHostname\x12,\n" +
	"\x11ListenerAddresses\x18\x11 \x03(\tR\x11ListenerAddresses\x12(\n" +
	"\x0fOperatingSystem\x18\x12 \x01(\tR\x0fOperatingSystem\x126\n" +
	"\x16OperatingSystemVersion\x18\x13 \x01(\tR\x16OperatingSystemVersion\x12J\n" +
	"\bLogLevel\x18\x14 \x01(\x0e2..hashicorp.vault.hcp_link.node_status.LogLevelR\bLogLevel\x12:\n" +
	"\n" +
	"ActiveTime\x18\x15 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"ActiveTime\x12P\n" +
	"\n" +
	"RaftStatus\x18\x16 \x01(\v20.hashicorp.vault.hcp_link.node_status.RaftStatusR\n" +
	"RaftStatus*M\n" +
	"\bLogLevel\x12\f\n" +
	"\bNO_LEVEL\x10\x00\x12\t\n" +
	"\x05TRACE\x10\x01\x12\t\n" +
	"\x05DEBUG\x10\x02\x12\b\n" +
	"\x04INFO\x10\x03\x12\b\n" +
	"\x04WARN\x10\x04\x12\t\n" +
	"\x05ERROR\x10\x05B=Z;github.com/hashicorp/vault/vault/hcp_link/proto/node_statusb\x06proto3"

var (
	file_vault_hcp_link_proto_node_status_status_proto_rawDescOnce sync.Once
	file_vault_hcp_link_proto_node_status_status_proto_rawDescData []byte
)

func file_vault_hcp_link_proto_node_status_status_proto_rawDescGZIP() []byte {
	file_vault_hcp_link_proto_node_status_status_proto_rawDescOnce.Do(func() {
		file_vault_hcp_link_proto_node_status_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vault_hcp_link_proto_node_status_status_proto_rawDesc), len(file_vault_hcp_link_proto_node_status_status_proto_rawDesc)))
	})
	return file_vault_hcp_link_proto_node_status_status_proto_rawDescData
}

var file_vault_hcp_link_proto_node_status_status_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vault_hcp_link_proto_node_status_status_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_vault_hcp_link_proto_node_status_status_proto_goTypes = []any{
	(LogLevel)(0),                           // 0: hashicorp.vault.hcp_link.node_status.LogLevel
	(*RaftStatus)(nil),                      // 1: hashicorp.vault.hcp_link.node_status.RaftStatus
	(*LinkedClusterNodeStatusResponse)(nil), // 2: hashicorp.vault.hcp_link.node_status.LinkedClusterNodeStatusResponse
	(*timestamppb.Timestamp)(nil),           // 3: google.protobuf.Timestamp
}
var file_vault_hcp_link_proto_node_status_status_proto_depIdxs = []int32{
	0, // 0: hashicorp.vault.hcp_link.node_status.LinkedClusterNodeStatusResponse.LogLevel:type_name -> hashicorp.vault.hcp_link.node_status.LogLevel
	3, // 1: hashicorp.vault.hcp_link.node_status.LinkedClusterNodeStatusResponse.ActiveTime:type_name -> google.protobuf.Timestamp
	1, // 2: hashicorp.vault.hcp_link.node_status.LinkedClusterNodeStatusResponse.RaftStatus:type_name -> hashicorp.vault.hcp_link.node_status.RaftStatus
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_vault_hcp_link_proto_node_status_status_proto_init() }
func file_vault_hcp_link_proto_node_status_status_proto_init() {
	if File_vault_hcp_link_proto_node_status_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vault_hcp_link_proto_node_status_status_proto_rawDesc), len(file_vault_hcp_link_proto_node_status_status_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vault_hcp_link_proto_node_status_status_proto_goTypes,
		DependencyIndexes: file_vault_hcp_link_proto_node_status_status_proto_depIdxs,
		EnumInfos:         file_vault_hcp_link_proto_node_status_status_proto_enumTypes,
		MessageInfos:      file_vault_hcp_link_proto_node_status_status_proto_msgTypes,
	}.Build()
	File_vault_hcp_link_proto_node_status_status_proto = out.File
	file_vault_hcp_link_proto_node_status_status_proto_goTypes = nil
	file_vault_hcp_link_proto_node_status_status_proto_depIdxs = nil
}
