// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: vault/hcp_link/proto/meta/meta.proto

package meta

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListNamespacesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNamespacesRequest) Reset() {
	*x = ListNamespacesRequest{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesRequest) ProtoMessage() {}

func (x *ListNamespacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesRequest.ProtoReflect.Descriptor instead.
func (*ListNamespacesRequest) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{0}
}

type ListNamespacesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paths         []string               `protobuf:"bytes,1,rep,name=Paths,proto3" json:"Paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNamespacesResponse) Reset() {
	*x = ListNamespacesResponse{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesResponse) ProtoMessage() {}

func (x *ListNamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesResponse.ProtoReflect.Descriptor instead.
func (*ListNamespacesResponse) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{1}
}

func (x *ListNamespacesResponse) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type ListMountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMountsRequest) Reset() {
	*x = ListMountsRequest{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMountsRequest) ProtoMessage() {}

func (x *ListMountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMountsRequest.ProtoReflect.Descriptor instead.
func (*ListMountsRequest) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{2}
}

type Mount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mount) Reset() {
	*x = Mount{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mount) ProtoMessage() {}

func (x *Mount) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mount.ProtoReflect.Descriptor instead.
func (*Mount) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{3}
}

func (x *Mount) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Mount) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Mount) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListMountsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mounts        []*Mount               `protobuf:"bytes,1,rep,name=Mounts,proto3" json:"Mounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMountsResponse) Reset() {
	*x = ListMountsResponse{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMountsResponse) ProtoMessage() {}

func (x *ListMountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMountsResponse.ProtoReflect.Descriptor instead.
func (*ListMountsResponse) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{4}
}

func (x *ListMountsResponse) GetMounts() []*Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

type ListAuthsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAuthsRequest) Reset() {
	*x = ListAuthsRequest{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAuthsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthsRequest) ProtoMessage() {}

func (x *ListAuthsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthsRequest.ProtoReflect.Descriptor instead.
func (*ListAuthsRequest) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{5}
}

type Auth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth) Reset() {
	*x = Auth{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{6}
}

func (x *Auth) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Auth) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Auth) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListAuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auths         []*Auth                `protobuf:"bytes,1,rep,name=Auths,proto3" json:"Auths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAuthResponse) Reset() {
	*x = ListAuthResponse{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthResponse) ProtoMessage() {}

func (x *ListAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthResponse.ProtoReflect.Descriptor instead.
func (*ListAuthResponse) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{7}
}

func (x *ListAuthResponse) GetAuths() []*Auth {
	if x != nil {
		return x.Auths
	}
	return nil
}

type GetClusterStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterStatusRequest) Reset() {
	*x = GetClusterStatusRequest{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterStatusRequest) ProtoMessage() {}

func (x *GetClusterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterStatusRequest.ProtoReflect.Descriptor instead.
func (*GetClusterStatusRequest) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{8}
}

type HANode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HANode) Reset() {
	*x = HANode{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HANode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HANode) ProtoMessage() {}

func (x *HANode) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HANode.ProtoReflect.Descriptor instead.
func (*HANode) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{9}
}

func (x *HANode) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type HAStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	Nodes         []*HANode              `protobuf:"bytes,2,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HAStatus) Reset() {
	*x = HAStatus{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HAStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HAStatus) ProtoMessage() {}

func (x *HAStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HAStatus.ProtoReflect.Descriptor instead.
func (*HAStatus) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{10}
}

func (x *HAStatus) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *HAStatus) GetNodes() []*HANode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type RaftServer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NodeID is the name of the server
	NodeID string `protobuf:"bytes,1,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	// Address is the IP:port of the server, used for Raft communications
	Address string `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	// Leader is true if this server is the current cluster leader
	Leader bool `protobuf:"varint,3,opt,name=Leader,proto3" json:"Leader,omitempty"`
	// Protocol version is the raft protocol version used by the server
	ProtocolVersion string `protobuf:"bytes,4,opt,name=ProtocolVersion,proto3" json:"ProtocolVersion,omitempty"`
	// Voter is true if this server has a vote in the cluster. This might
	// be false if the server is staging and still coming online.
	Voter         bool `protobuf:"varint,5,opt,name=Voter,proto3" json:"Voter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaftServer) Reset() {
	*x = RaftServer{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaftServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftServer) ProtoMessage() {}

func (x *RaftServer) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftServer.ProtoReflect.Descriptor instead.
func (*RaftServer) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{11}
}

func (x *RaftServer) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *RaftServer) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RaftServer) GetLeader() bool {
	if x != nil {
		return x.Leader
	}
	return false
}

func (x *RaftServer) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *RaftServer) GetVoter() bool {
	if x != nil {
		return x.Voter
	}
	return false
}

type RaftConfiguration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*RaftServer          `protobuf:"bytes,1,rep,name=Servers,proto3" json:"Servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaftConfiguration) Reset() {
	*x = RaftConfiguration{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaftConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftConfiguration) ProtoMessage() {}

func (x *RaftConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftConfiguration.ProtoReflect.Descriptor instead.
func (*RaftConfiguration) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{12}
}

func (x *RaftConfiguration) GetServers() []*RaftServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

type AutopilotServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Healthy       bool                   `protobuf:"varint,2,opt,name=Healthy,proto3" json:"Healthy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutopilotServer) Reset() {
	*x = AutopilotServer{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutopilotServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutopilotServer) ProtoMessage() {}

func (x *AutopilotServer) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutopilotServer.ProtoReflect.Descriptor instead.
func (*AutopilotServer) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{13}
}

func (x *AutopilotServer) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AutopilotServer) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

type AutopilotStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=Healthy,proto3" json:"Healthy,omitempty"`
	Servers       []*AutopilotServer     `protobuf:"bytes,2,rep,name=Servers,proto3" json:"Servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutopilotStatus) Reset() {
	*x = AutopilotStatus{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutopilotStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutopilotStatus) ProtoMessage() {}

func (x *AutopilotStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutopilotStatus.ProtoReflect.Descriptor instead.
func (*AutopilotStatus) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{14}
}

func (x *AutopilotStatus) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *AutopilotStatus) GetServers() []*AutopilotServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

type RaftStatus struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RaftConfiguration *RaftConfiguration     `protobuf:"bytes,1,opt,name=RaftConfiguration,proto3" json:"RaftConfiguration,omitempty"`
	AutopilotStatus   *AutopilotStatus       `protobuf:"bytes,2,opt,name=AutopilotStatus,proto3" json:"AutopilotStatus,omitempty"`
	QuorumWarning     string                 `protobuf:"bytes,3,opt,name=QuorumWarning,proto3" json:"QuorumWarning,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RaftStatus) Reset() {
	*x = RaftStatus{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaftStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftStatus) ProtoMessage() {}

func (x *RaftStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftStatus.ProtoReflect.Descriptor instead.
func (*RaftStatus) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{15}
}

func (x *RaftStatus) GetRaftConfiguration() *RaftConfiguration {
	if x != nil {
		return x.RaftConfiguration
	}
	return nil
}

func (x *RaftStatus) GetAutopilotStatus() *AutopilotStatus {
	if x != nil {
		return x.AutopilotStatus
	}
	return nil
}

func (x *RaftStatus) GetQuorumWarning() string {
	if x != nil {
		return x.QuorumWarning
	}
	return ""
}

type GetClusterStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterID     string                 `protobuf:"bytes,1,opt,name=ClusterID,proto3" json:"ClusterID,omitempty"`
	HAStatus      *HAStatus              `protobuf:"bytes,2,opt,name=HAStatus,proto3" json:"HAStatus,omitempty"`
	RaftStatus    *RaftStatus            `protobuf:"bytes,3,opt,name=RaftStatus,proto3" json:"RaftStatus,omitempty"`
	StorageType   string                 `protobuf:"bytes,4,opt,name=StorageType,proto3" json:"StorageType,omitempty"`
	ClusterName   string                 `protobuf:"bytes,5,opt,name=ClusterName,proto3" json:"ClusterName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterStatusResponse) Reset() {
	*x = GetClusterStatusResponse{}
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterStatusResponse) ProtoMessage() {}

func (x *GetClusterStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vault_hcp_link_proto_meta_meta_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterStatusResponse.ProtoReflect.Descriptor instead.
func (*GetClusterStatusResponse) Descriptor() ([]byte, []int) {
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP(), []int{16}
}

func (x *GetClusterStatusResponse) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

func (x *GetClusterStatusResponse) GetHAStatus() *HAStatus {
	if x != nil {
		return x.HAStatus
	}
	return nil
}

func (x *GetClusterStatusResponse) GetRaftStatus() *RaftStatus {
	if x != nil {
		return x.RaftStatus
	}
	return nil
}

func (x *GetClusterStatusResponse) GetStorageType() string {
	if x != nil {
		return x.StorageType
	}
	return ""
}

func (x *GetClusterStatusResponse) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

var File_vault_hcp_link_proto_meta_meta_proto protoreflect.FileDescriptor

const file_vault_hcp_link_proto_meta_meta_proto_rawDesc = "" +
	"\n" +
	"$vault/hcp_link/proto/meta/meta.proto\x12\x04meta\"\x17\n" +
	"\x15ListNamespacesRequest\".\n" +
	"\x16ListNamespacesResponse\x12\x14\n" +
	"\x05Paths\x18\x01 \x03(\tR\x05Paths\"\x13\n" +
	"\x11ListMountsRequest\"Q\n" +
	"\x05Mount\x12\x12\n" +
	"\x04Path\x18\x01 \x01(\tR\x04Path\x12\x12\n" +
	"\x04Type\x18\x02 \x01(\tR\x04Type\x12 \n" +
	"\vDescription\x18\x03 \x01(\tR\vDescription\"9\n" +
	"\x12ListMountsResponse\x12#\n" +
	"\x06Mounts\x18\x01 \x03(\v2\v.meta.MountR\x06Mounts\"\x12\n" +
	"\x10ListAuthsRequest\"P\n" +
	"\x04Auth\x12\x12\n" +
	"\x04Path\x18\x01 \x01(\tR\x04Path\x12\x12\n" +
	"\x04Type\x18\x02 \x01(\tR\x04Type\x12 \n" +
	"\vDescription\x18\x03 \x01(\tR\vDescription\"4\n" +
	"\x10ListAuthResponse\x12 \n" +
	"\x05Auths\x18\x01 \x03(\v2\n" +
	".meta.AuthR\x05Auths\"\x19\n" +
	"\x17GetClusterStatusRequest\"$\n" +
	"\x06HANode\x12\x1a\n" +
	"\bHostname\x18\x01 \x01(\tR\bHostname\"H\n" +
	"\bHAStatus\x12\x18\n" +
	"\aEnabled\x18\x01 \x01(\bR\aEnabled\x12\"\n" +
	"\x05Nodes\x18\x02 \x03(\v2\f.meta.HANodeR\x05Nodes\"\x96\x01\n" +
	"\n" +
	"RaftServer\x12\x16\n" +
	"\x06NodeID\x18\x01 \x01(\tR\x06NodeID\x12\x18\n" +
	"\aAddress\x18\x02 \x01(\tR\aAddress\x12\x16\n" +
	"\x06Leader\x18\x03 \x01(\bR\x06Leader\x12(\n" +
	"\x0fProtocolVersion\x18\x04 \x01(\tR\x0fProtocolVersion\x12\x14\n" +
	"\x05Voter\x18\x05 \x01(\bR\x05Voter\"?\n" +
	"\x11RaftConfiguration\x12*\n" +
	"\aServers\x18\x01 \x03(\v2\x10.meta.RaftServerR\aServers\";\n" +
	"\x0fAutopilotServer\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x18\n" +
	"\aHealthy\x18\x02 \x01(\bR\aHealthy\"\\\n" +
	"\x0fAutopilotStatus\x12\x18\n" +
	"\aHealthy\x18\x01 \x01(\bR\aHealthy\x12/\n" +
	"\aServers\x18\x02 \x03(\v2\x15.meta.AutopilotServerR\aServers\"\xba\x01\n" +
	"\n" +
	"RaftStatus\x12E\n" +
	"\x11RaftConfiguration\x18\x01 \x01(\v2\x17.meta.RaftConfigurationR\x11RaftConfiguration\x12?\n" +
	"\x0fAutopilotStatus\x18\x02 \x01(\v2\x15.meta.AutopilotStatusR\x0fAutopilotStatus\x12$\n" +
	"\rQuorumWarning\x18\x03 \x01(\tR\rQuorumWarning\"\xda\x01\n" +
	"\x18GetClusterStatusResponse\x12\x1c\n" +
	"\tClusterID\x18\x01 \x01(\tR\tClusterID\x12*\n" +
	"\bHAStatus\x18\x02 \x01(\v2\x0e.meta.HAStatusR\bHAStatus\x120\n" +
	"\n" +
	"RaftStatus\x18\x03 \x01(\v2\x10.meta.RaftStatusR\n" +
	"RaftStatus\x12 \n" +
	"\vStorageType\x18\x04 \x01(\tR\vStorageType\x12 \n" +
	"\vClusterName\x18\x05 \x01(\tR\vClusterName2\xab\x02\n" +
	"\vHCPLinkMeta\x12K\n" +
	"\x0eListNamespaces\x12\x1b.meta.ListNamespacesRequest\x1a\x1c.meta.ListNamespacesResponse\x12?\n" +
	"\n" +
	"ListMounts\x12\x17.meta.ListMountsRequest\x1a\x18.meta.ListMountsResponse\x12;\n" +
	"\tListAuths\x12\x16.meta.ListAuthsRequest\x1a\x16.meta.ListAuthResponse\x12Q\n" +
	"\x10GetClusterStatus\x12\x1d.meta.GetClusterStatusRequest\x1a\x1e.meta.GetClusterStatusResponseB6Z4github.com/hashicorp/vault/vault/hcp_link/proto/metab\x06proto3"

var (
	file_vault_hcp_link_proto_meta_meta_proto_rawDescOnce sync.Once
	file_vault_hcp_link_proto_meta_meta_proto_rawDescData []byte
)

func file_vault_hcp_link_proto_meta_meta_proto_rawDescGZIP() []byte {
	file_vault_hcp_link_proto_meta_meta_proto_rawDescOnce.Do(func() {
		file_vault_hcp_link_proto_meta_meta_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vault_hcp_link_proto_meta_meta_proto_rawDesc), len(file_vault_hcp_link_proto_meta_meta_proto_rawDesc)))
	})
	return file_vault_hcp_link_proto_meta_meta_proto_rawDescData
}

var file_vault_hcp_link_proto_meta_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_vault_hcp_link_proto_meta_meta_proto_goTypes = []any{
	(*ListNamespacesRequest)(nil),    // 0: meta.ListNamespacesRequest
	(*ListNamespacesResponse)(nil),   // 1: meta.ListNamespacesResponse
	(*ListMountsRequest)(nil),        // 2: meta.ListMountsRequest
	(*Mount)(nil),                    // 3: meta.Mount
	(*ListMountsResponse)(nil),       // 4: meta.ListMountsResponse
	(*ListAuthsRequest)(nil),         // 5: meta.ListAuthsRequest
	(*Auth)(nil),                     // 6: meta.Auth
	(*ListAuthResponse)(nil),         // 7: meta.ListAuthResponse
	(*GetClusterStatusRequest)(nil),  // 8: meta.GetClusterStatusRequest
	(*HANode)(nil),                   // 9: meta.HANode
	(*HAStatus)(nil),                 // 10: meta.HAStatus
	(*RaftServer)(nil),               // 11: meta.RaftServer
	(*RaftConfiguration)(nil),        // 12: meta.RaftConfiguration
	(*AutopilotServer)(nil),          // 13: meta.AutopilotServer
	(*AutopilotStatus)(nil),          // 14: meta.AutopilotStatus
	(*RaftStatus)(nil),               // 15: meta.RaftStatus
	(*GetClusterStatusResponse)(nil), // 16: meta.GetClusterStatusResponse
}
var file_vault_hcp_link_proto_meta_meta_proto_depIdxs = []int32{
	3,  // 0: meta.ListMountsResponse.Mounts:type_name -> meta.Mount
	6,  // 1: meta.ListAuthResponse.Auths:type_name -> meta.Auth
	9,  // 2: meta.HAStatus.Nodes:type_name -> meta.HANode
	11, // 3: meta.RaftConfiguration.Servers:type_name -> meta.RaftServer
	13, // 4: meta.AutopilotStatus.Servers:type_name -> meta.AutopilotServer
	12, // 5: meta.RaftStatus.RaftConfiguration:type_name -> meta.RaftConfiguration
	14, // 6: meta.RaftStatus.AutopilotStatus:type_name -> meta.AutopilotStatus
	10, // 7: meta.GetClusterStatusResponse.HAStatus:type_name -> meta.HAStatus
	15, // 8: meta.GetClusterStatusResponse.RaftStatus:type_name -> meta.RaftStatus
	0,  // 9: meta.HCPLinkMeta.ListNamespaces:input_type -> meta.ListNamespacesRequest
	2,  // 10: meta.HCPLinkMeta.ListMounts:input_type -> meta.ListMountsRequest
	5,  // 11: meta.HCPLinkMeta.ListAuths:input_type -> meta.ListAuthsRequest
	8,  // 12: meta.HCPLinkMeta.GetClusterStatus:input_type -> meta.GetClusterStatusRequest
	1,  // 13: meta.HCPLinkMeta.ListNamespaces:output_type -> meta.ListNamespacesResponse
	4,  // 14: meta.HCPLinkMeta.ListMounts:output_type -> meta.ListMountsResponse
	7,  // 15: meta.HCPLinkMeta.ListAuths:output_type -> meta.ListAuthResponse
	16, // 16: meta.HCPLinkMeta.GetClusterStatus:output_type -> meta.GetClusterStatusResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_vault_hcp_link_proto_meta_meta_proto_init() }
func file_vault_hcp_link_proto_meta_meta_proto_init() {
	if File_vault_hcp_link_proto_meta_meta_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vault_hcp_link_proto_meta_meta_proto_rawDesc), len(file_vault_hcp_link_proto_meta_meta_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vault_hcp_link_proto_meta_meta_proto_goTypes,
		DependencyIndexes: file_vault_hcp_link_proto_meta_meta_proto_depIdxs,
		MessageInfos:      file_vault_hcp_link_proto_meta_meta_proto_msgTypes,
	}.Build()
	File_vault_hcp_link_proto_meta_meta_proto = out.File
	file_vault_hcp_link_proto_meta_meta_proto_goTypes = nil
	file_vault_hcp_link_proto_meta_meta_proto_depIdxs = nil
}
