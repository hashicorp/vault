// Code generated by "enumer -type=ifModifiedReqType -trimprefix=ifModified"; DO NOT EDIT.

package pki

import (
	"fmt"
)

const _ifModifiedReqTypeName = "UnknownCACRLDeltaCRLUnifiedCRLUnifiedDeltaCRL"

var _ifModifiedReqTypeIndex = [...]uint8{0, 7, 9, 12, 20, 30, 45}

func (i ifModifiedReqType) String() string {
	if i < 0 || i >= ifModifiedReqType(len(_ifModifiedReqTypeIndex)-1) {
		return fmt.Sprintf("ifModifiedReqType(%d)", i)
	}
	return _ifModifiedReqTypeName[_ifModifiedReqTypeIndex[i]:_ifModifiedReqTypeIndex[i+1]]
}

var _ifModifiedReqTypeValues = []ifModifiedReqType{0, 1, 2, 3, 4, 5}

var _ifModifiedReqTypeNameToValueMap = map[string]ifModifiedReqType{
	_ifModifiedReqTypeName[0:7]:   0,
	_ifModifiedReqTypeName[7:9]:   1,
	_ifModifiedReqTypeName[9:12]:  2,
	_ifModifiedReqTypeName[12:20]: 3,
	_ifModifiedReqTypeName[20:30]: 4,
	_ifModifiedReqTypeName[30:45]: 5,
}

// ifModifiedReqTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ifModifiedReqTypeString(s string) (ifModifiedReqType, error) {
	if val, ok := _ifModifiedReqTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ifModifiedReqType values", s)
}

// ifModifiedReqTypeValues returns all values of the enum
func ifModifiedReqTypeValues() []ifModifiedReqType {
	return _ifModifiedReqTypeValues
}

// IsAifModifiedReqType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ifModifiedReqType) IsAifModifiedReqType() bool {
	for _, v := range _ifModifiedReqTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
