// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: sdk/logical/event.proto

package logical

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventPluginInfo contains data related to the plugin that generated an event.
type EventPluginInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of plugin this event originated from, i.e., "auth" or "secrets.
	MountClass string `protobuf:"bytes,1,opt,name=mount_class,json=mountClass,proto3" json:"mount_class,omitempty"`
	// Unique ID of the mount entry, e.g., "kv_957bb7d8"
	MountAccessor string `protobuf:"bytes,2,opt,name=mount_accessor,json=mountAccessor,proto3" json:"mount_accessor,omitempty"`
	// Mount path of the plugin this event originated from, e.g., "secret/"
	MountPath string `protobuf:"bytes,3,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
	// Plugin name that this event originated from, e.g., "kv"
	Plugin string `protobuf:"bytes,4,opt,name=plugin,proto3" json:"plugin,omitempty"`
	// Plugin version of the plugin this event originated from, e.g., "v0.13.3+builtin"
	PluginVersion string `protobuf:"bytes,5,opt,name=plugin_version,json=pluginVersion,proto3" json:"plugin_version,omitempty"`
	// Mount version that this event originated from, i.e., if KVv2, then "2". Usually empty.
	Version       string `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPluginInfo) Reset() {
	*x = EventPluginInfo{}
	mi := &file_sdk_logical_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPluginInfo) ProtoMessage() {}

func (x *EventPluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_logical_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPluginInfo.ProtoReflect.Descriptor instead.
func (*EventPluginInfo) Descriptor() ([]byte, []int) {
	return file_sdk_logical_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventPluginInfo) GetMountClass() string {
	if x != nil {
		return x.MountClass
	}
	return ""
}

func (x *EventPluginInfo) GetMountAccessor() string {
	if x != nil {
		return x.MountAccessor
	}
	return ""
}

func (x *EventPluginInfo) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *EventPluginInfo) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *EventPluginInfo) GetPluginVersion() string {
	if x != nil {
		return x.PluginVersion
	}
	return ""
}

func (x *EventPluginInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// EventData contains event data in a CloudEvents container.
type EventData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID identifies the event. It is required. The combination of
	// CloudEvents Source (i.e., Vault cluster) + ID must be unique.
	// Events with the same Source + ID can be assumed to be duplicates
	// by consumers.
	// Be careful when setting this manually that the ID contains enough
	// entropy to be unique, or possibly that it is idempotent, such
	// as a hash of other fields with sufficient uniqueness.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Arbitrary non-secret data. Optional.
	Metadata *structpb.Struct `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Any IDs that the event relates to, i.e., UUIDs, paths.
	EntityIds []string `protobuf:"bytes,3,rep,name=entity_ids,json=entityIds,proto3" json:"entity_ids,omitempty"`
	// Human-readable note.
	Note          string `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventData) Reset() {
	*x = EventData{}
	mi := &file_sdk_logical_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventData) ProtoMessage() {}

func (x *EventData) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_logical_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventData.ProtoReflect.Descriptor instead.
func (*EventData) Descriptor() ([]byte, []int) {
	return file_sdk_logical_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventData) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventData) GetEntityIds() []string {
	if x != nil {
		return x.EntityIds
	}
	return nil
}

func (x *EventData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

// EventReceived is used to consume events and includes additional metadata regarding
// the event type and plugin information.
type EventReceived struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Event *EventData             `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// namespace path
	Namespace     string           `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	EventType     string           `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	PluginInfo    *EventPluginInfo `protobuf:"bytes,4,opt,name=plugin_info,json=pluginInfo,proto3" json:"plugin_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventReceived) Reset() {
	*x = EventReceived{}
	mi := &file_sdk_logical_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReceived) ProtoMessage() {}

func (x *EventReceived) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_logical_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReceived.ProtoReflect.Descriptor instead.
func (*EventReceived) Descriptor() ([]byte, []int) {
	return file_sdk_logical_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventReceived) GetEvent() *EventData {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *EventReceived) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EventReceived) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *EventReceived) GetPluginInfo() *EventPluginInfo {
	if x != nil {
		return x.PluginInfo
	}
	return nil
}

var File_sdk_logical_event_proto protoreflect.FileDescriptor

const file_sdk_logical_event_proto_rawDesc = "" +
	"\n" +
	"\x17sdk/logical/event.proto\x12\alogical\x1a\x1cgoogle/protobuf/struct.proto\"\xd1\x01\n" +
	"\x0fEventPluginInfo\x12\x1f\n" +
	"\vmount_class\x18\x01 \x01(\tR\n" +
	"mountClass\x12%\n" +
	"\x0emount_accessor\x18\x02 \x01(\tR\rmountAccessor\x12\x1d\n" +
	"\n" +
	"mount_path\x18\x03 \x01(\tR\tmountPath\x12\x16\n" +
	"\x06plugin\x18\x04 \x01(\tR\x06plugin\x12%\n" +
	"\x0eplugin_version\x18\x05 \x01(\tR\rpluginVersion\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\"\x83\x01\n" +
	"\tEventData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x123\n" +
	"\bmetadata\x18\x02 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x12\x1d\n" +
	"\n" +
	"entity_ids\x18\x03 \x03(\tR\tentityIds\x12\x12\n" +
	"\x04note\x18\x04 \x01(\tR\x04note\"\xb1\x01\n" +
	"\rEventReceived\x12(\n" +
	"\x05event\x18\x01 \x01(\v2\x12.logical.EventDataR\x05event\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1d\n" +
	"\n" +
	"event_type\x18\x03 \x01(\tR\teventType\x129\n" +
	"\vplugin_info\x18\x04 \x01(\v2\x18.logical.EventPluginInfoR\n" +
	"pluginInfoB(Z&github.com/hashicorp/vault/sdk/logicalb\x06proto3"

var (
	file_sdk_logical_event_proto_rawDescOnce sync.Once
	file_sdk_logical_event_proto_rawDescData []byte
)

func file_sdk_logical_event_proto_rawDescGZIP() []byte {
	file_sdk_logical_event_proto_rawDescOnce.Do(func() {
		file_sdk_logical_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sdk_logical_event_proto_rawDesc), len(file_sdk_logical_event_proto_rawDesc)))
	})
	return file_sdk_logical_event_proto_rawDescData
}

var file_sdk_logical_event_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sdk_logical_event_proto_goTypes = []any{
	(*EventPluginInfo)(nil), // 0: logical.EventPluginInfo
	(*EventData)(nil),       // 1: logical.EventData
	(*EventReceived)(nil),   // 2: logical.EventReceived
	(*structpb.Struct)(nil), // 3: google.protobuf.Struct
}
var file_sdk_logical_event_proto_depIdxs = []int32{
	3, // 0: logical.EventData.metadata:type_name -> google.protobuf.Struct
	1, // 1: logical.EventReceived.event:type_name -> logical.EventData
	0, // 2: logical.EventReceived.plugin_info:type_name -> logical.EventPluginInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_sdk_logical_event_proto_init() }
func file_sdk_logical_event_proto_init() {
	if File_sdk_logical_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sdk_logical_event_proto_rawDesc), len(file_sdk_logical_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sdk_logical_event_proto_goTypes,
		DependencyIndexes: file_sdk_logical_event_proto_depIdxs,
		MessageInfos:      file_sdk_logical_event_proto_msgTypes,
	}.Build()
	File_sdk_logical_event_proto = out.File
	file_sdk_logical_event_proto_goTypes = nil
	file_sdk_logical_event_proto_depIdxs = nil
}
