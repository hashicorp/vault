// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hashicorp/cloud/hcp_link/node_status/v1/node_status.proto

package node_statusv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// GetNodeStatusRequest is empty for now as GetNodeStatus does not expect any
// arguments.
type GetNodeStatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeStatusRequest) Reset()         { *m = GetNodeStatusRequest{} }
func (m *GetNodeStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeStatusRequest) ProtoMessage()    {}
func (*GetNodeStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b45ec5d664cd63e5, []int{0}
}

func (m *GetNodeStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeStatusRequest.Unmarshal(m, b)
}
func (m *GetNodeStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeStatusRequest.Merge(m, src)
}
func (m *GetNodeStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeStatusRequest.Size(m)
}
func (m *GetNodeStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeStatusRequest proto.InternalMessageInfo

// GetNodeStatusResponse contains information about the node's current status.
type GetNodeStatusResponse struct {
	// node_status contains information about the node's current status.
	NodeStatus           *NodeStatus `protobuf:"bytes,1,opt,name=node_status,json=nodeStatus,proto3" json:"node_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetNodeStatusResponse) Reset()         { *m = GetNodeStatusResponse{} }
func (m *GetNodeStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeStatusResponse) ProtoMessage()    {}
func (*GetNodeStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b45ec5d664cd63e5, []int{1}
}

func (m *GetNodeStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeStatusResponse.Unmarshal(m, b)
}
func (m *GetNodeStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeStatusResponse.Merge(m, src)
}
func (m *GetNodeStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeStatusResponse.Size(m)
}
func (m *GetNodeStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeStatusResponse proto.InternalMessageInfo

func (m *GetNodeStatusResponse) GetNodeStatus() *NodeStatus {
	if m != nil {
		return m.NodeStatus
	}
	return nil
}

// NodeStatus contains information about the node's current status. The status
// is a combination of common status information and product specific status
// information.
type NodeStatus struct {
	// node_id is the ID assigned to the node. It is expected to unique within the
	// link resource (e.g. within the cluster).
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// node_version is the node's version in semantic version format.
	NodeVersion string `protobuf:"bytes,2,opt,name=node_version,json=nodeVersion,proto3" json:"node_version,omitempty"`
	// node_os is the lower-case name of the operating system the client is
	// running on (e.g. linux, windows).
	NodeOs string `protobuf:"bytes,3,opt,name=node_os,json=nodeOs,proto3" json:"node_os,omitempty"`
	// node_architecture is the lower-case architecture of the client binary
	// (e.g. amd64, arm, ...).
	NodeArchitecture string `protobuf:"bytes,4,opt,name=node_architecture,json=nodeArchitecture,proto3" json:"node_architecture,omitempty"`
	// timestamp is the time the status was recorded on the node.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// status_version is the version of the status message format. To ensure
	// that the version is not omitted by accident the initial version is 1.
	StatusVersion uint32 `protobuf:"varint,6,opt,name=status_version,json=statusVersion,proto3" json:"status_version,omitempty"`
	// status is the product specific status of the node. The link library and
	// service is agnostic to the information transmitted in this field.
	Status               *anypb.Any `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NodeStatus) Reset()         { *m = NodeStatus{} }
func (m *NodeStatus) String() string { return proto.CompactTextString(m) }
func (*NodeStatus) ProtoMessage()    {}
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_b45ec5d664cd63e5, []int{2}
}

func (m *NodeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatus.Unmarshal(m, b)
}
func (m *NodeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatus.Marshal(b, m, deterministic)
}
func (m *NodeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatus.Merge(m, src)
}
func (m *NodeStatus) XXX_Size() int {
	return xxx_messageInfo_NodeStatus.Size(m)
}
func (m *NodeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatus proto.InternalMessageInfo

func (m *NodeStatus) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeStatus) GetNodeVersion() string {
	if m != nil {
		return m.NodeVersion
	}
	return ""
}

func (m *NodeStatus) GetNodeOs() string {
	if m != nil {
		return m.NodeOs
	}
	return ""
}

func (m *NodeStatus) GetNodeArchitecture() string {
	if m != nil {
		return m.NodeArchitecture
	}
	return ""
}

func (m *NodeStatus) GetTimestamp() *timestamppb.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *NodeStatus) GetStatusVersion() uint32 {
	if m != nil {
		return m.StatusVersion
	}
	return 0
}

func (m *NodeStatus) GetStatus() *anypb.Any {
	if m != nil {
		return m.Status
	}
	return nil
}

type SetNodeStatusRequest struct {
	// node_status is the current status of the node.
	NodeStatus           *NodeStatus `protobuf:"bytes,2,opt,name=node_status,json=nodeStatus,proto3" json:"node_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SetNodeStatusRequest) Reset()         { *m = SetNodeStatusRequest{} }
func (m *SetNodeStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SetNodeStatusRequest) ProtoMessage()    {}
func (*SetNodeStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b45ec5d664cd63e5, []int{3}
}

func (m *SetNodeStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNodeStatusRequest.Unmarshal(m, b)
}
func (m *SetNodeStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNodeStatusRequest.Marshal(b, m, deterministic)
}
func (m *SetNodeStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNodeStatusRequest.Merge(m, src)
}
func (m *SetNodeStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SetNodeStatusRequest.Size(m)
}
func (m *SetNodeStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNodeStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetNodeStatusRequest proto.InternalMessageInfo

func (m *SetNodeStatusRequest) GetNodeStatus() *NodeStatus {
	if m != nil {
		return m.NodeStatus
	}
	return nil
}

func init() {
	proto.RegisterType((*GetNodeStatusRequest)(nil), "hashicorp.cloud.hcp_link.node_status.v1.GetNodeStatusRequest")
	proto.RegisterType((*GetNodeStatusResponse)(nil), "hashicorp.cloud.hcp_link.node_status.v1.GetNodeStatusResponse")
	proto.RegisterType((*NodeStatus)(nil), "hashicorp.cloud.hcp_link.node_status.v1.NodeStatus")
	proto.RegisterType((*SetNodeStatusRequest)(nil), "hashicorp.cloud.hcp_link.node_status.v1.SetNodeStatusRequest")
}

func init() {
	proto.RegisterFile("hashicorp/cloud/hcp_link/node_status/v1/node_status.proto", fileDescriptor_b45ec5d664cd63e5)
}

var fileDescriptor_b45ec5d664cd63e5 = []byte{
	// 506 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xcf, 0x6e, 0xd3, 0x30,
	0x18, 0x57, 0xc2, 0xe8, 0x34, 0x8f, 0x01, 0xb3, 0x0a, 0x84, 0x5e, 0x18, 0x95, 0x26, 0x86, 0x06,
	0xb6, 0xb2, 0x5d, 0x20, 0x08, 0xa4, 0x75, 0x87, 0x15, 0x09, 0x46, 0x95, 0x4e, 0x3d, 0x4c, 0x91,
	0xa6, 0xd4, 0x31, 0x49, 0x44, 0x13, 0x87, 0xd8, 0x89, 0xb4, 0x97, 0xe0, 0x0d, 0xb8, 0x20, 0x4e,
	0x3c, 0x0a, 0x57, 0xde, 0x80, 0x23, 0x4f, 0x81, 0xfa, 0xa5, 0x8d, 0x43, 0xd9, 0x21, 0x42, 0xdc,
	0xe2, 0xef, 0xf7, 0xc7, 0xbf, 0x7c, 0xfe, 0x3e, 0xf4, 0x3c, 0xf2, 0x65, 0x14, 0x33, 0x91, 0x67,
	0x94, 0xcd, 0x44, 0x11, 0xd0, 0x88, 0x65, 0x17, 0xb3, 0x38, 0xfd, 0x40, 0x53, 0x11, 0xf0, 0x0b,
	0xa9, 0x7c, 0x55, 0x48, 0x5a, 0xda, 0xcd, 0x23, 0xc9, 0x72, 0xa1, 0x04, 0x7e, 0x54, 0x4b, 0x09,
	0x48, 0xc9, 0x52, 0x4a, 0x9a, 0xdc, 0xd2, 0xee, 0xdd, 0x0f, 0x85, 0x08, 0x67, 0x9c, 0x82, 0x6c,
	0x5a, 0xbc, 0xa7, 0x7e, 0x7a, 0x59, 0x79, 0xf4, 0x1e, 0xac, 0x42, 0x2a, 0x4e, 0xb8, 0x54, 0x7e,
	0x92, 0x55, 0x84, 0xfe, 0x5d, 0xd4, 0x3d, 0xe1, 0xea, 0x54, 0x04, 0x7c, 0x0c, 0x7e, 0x2e, 0xff,
	0x58, 0x70, 0xa9, 0xfa, 0x09, 0xba, 0xb3, 0x52, 0x97, 0x99, 0x48, 0x25, 0xc7, 0x67, 0x68, 0xb3,
	0x71, 0xbd, 0x65, 0xec, 0x18, 0x7b, 0x9b, 0x07, 0x87, 0xa4, 0x65, 0x56, 0xd2, 0x70, 0x44, 0x69,
	0xfd, 0xdd, 0xff, 0x6c, 0x22, 0xa4, 0x21, 0x7c, 0x0f, 0xad, 0x83, 0x2e, 0x0e, 0xe0, 0x82, 0x0d,
	0xb7, 0x33, 0x3f, 0xbe, 0x0e, 0xf0, 0x43, 0x74, 0x03, 0x80, 0x92, 0xe7, 0x32, 0x16, 0xa9, 0x65,
	0x02, 0x0a, 0x89, 0x26, 0x55, 0xa9, 0xd6, 0x0a, 0x69, 0x5d, 0xd3, 0xda, 0x77, 0x12, 0xef, 0xa3,
	0x6d, 0x00, 0xfc, 0x9c, 0x45, 0xb1, 0xe2, 0x4c, 0x15, 0x39, 0xb7, 0xd6, 0x80, 0x72, 0x7b, 0x0e,
	0x1c, 0x35, 0xea, 0xf8, 0x19, 0xda, 0xa8, 0x5b, 0x65, 0x5d, 0x87, 0x9f, 0xec, 0x91, 0xaa, 0x99,
	0x64, 0xd9, 0x4c, 0x72, 0xb6, 0x64, 0xb8, 0x9a, 0x8c, 0x77, 0xd1, 0xcd, 0xea, 0x77, 0xeb, 0x90,
	0x9d, 0x1d, 0x63, 0x6f, 0xcb, 0xdd, 0xaa, 0xaa, 0xcb, 0x98, 0x4f, 0x50, 0x67, 0xd1, 0xc2, 0x75,
	0x70, 0xef, 0xfe, 0xe5, 0x7e, 0x94, 0x5e, 0xba, 0x0b, 0x4e, 0x7f, 0x86, 0xba, 0xe3, 0x2b, 0x9e,
	0x69, 0xf5, 0x35, 0xcc, 0xff, 0xf2, 0x1a, 0x07, 0x5f, 0x0d, 0xb4, 0xad, 0xa1, 0x31, 0xcf, 0xcb,
	0x98, 0x71, 0xfc, 0xc9, 0x40, 0x5b, 0x7f, 0xcc, 0x04, 0x7e, 0xd9, 0xfa, 0xa2, 0xab, 0x66, 0xac,
	0xf7, 0xea, 0x5f, 0xe5, 0xd5, 0x28, 0x0e, 0x7e, 0x98, 0x68, 0x9f, 0x89, 0xa4, 0xad, 0xcb, 0xe0,
	0x96, 0xf6, 0x18, 0xcd, 0x9b, 0x3c, 0x32, 0xce, 0xcf, 0xc3, 0x58, 0x45, 0xc5, 0x94, 0x30, 0x91,
	0x50, 0xbd, 0xa9, 0x11, 0xcb, 0x9e, 0xc2, 0x8e, 0x86, 0x3c, 0xa5, 0xa1, 0xa0, 0x2d, 0x77, 0xf8,
	0x45, 0xe3, 0x58, 0xda, 0x5f, 0xcc, 0xb5, 0xe1, 0xf1, 0xf0, 0xf4, 0x9b, 0xb9, 0x3b, 0xac, 0xf3,
	0x1d, 0x43, 0xbe, 0x21, 0xcb, 0xde, 0xcc, 0xe3, 0xe9, 0x38, 0x64, 0x62, 0x7f, 0x6f, 0xf0, 0x3c,
	0xe0, 0x79, 0x0b, 0x9e, 0xa7, 0x79, 0xde, 0xc4, 0xfe, 0x69, 0xda, 0xad, 0x78, 0xde, 0xc9, 0x68,
	0xf0, 0x96, 0x2b, 0x3f, 0xf0, 0x95, 0xff, 0xcb, 0x7c, 0x5c, 0x6b, 0x1c, 0x07, 0x44, 0x8e, 0xb3,
	0x50, 0x39, 0x8e, 0x96, 0x39, 0xce, 0xc4, 0x9e, 0x76, 0x60, 0x00, 0x0f, 0x7f, 0x07, 0x00, 0x00,
	0xff, 0xff, 0x24, 0x60, 0x52, 0x8c, 0xba, 0x04, 0x00, 0x00,
}
