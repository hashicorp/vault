// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpCloudResourcemanagerProjectProjectState ProjectState is the states the project can be in.
//
// swagger:model hashicorp.cloud.resourcemanager.Project.ProjectState
type HashicorpCloudResourcemanagerProjectProjectState string

func NewHashicorpCloudResourcemanagerProjectProjectState(value HashicorpCloudResourcemanagerProjectProjectState) *HashicorpCloudResourcemanagerProjectProjectState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpCloudResourcemanagerProjectProjectState.
func (m HashicorpCloudResourcemanagerProjectProjectState) Pointer() *HashicorpCloudResourcemanagerProjectProjectState {
	return &m
}

const (

	// HashicorpCloudResourcemanagerProjectProjectStateUNKNOWN captures enum value "UNKNOWN"
	HashicorpCloudResourcemanagerProjectProjectStateUNKNOWN HashicorpCloudResourcemanagerProjectProjectState = "UNKNOWN"

	// HashicorpCloudResourcemanagerProjectProjectStateACTIVE captures enum value "ACTIVE"
	HashicorpCloudResourcemanagerProjectProjectStateACTIVE HashicorpCloudResourcemanagerProjectProjectState = "ACTIVE"

	// HashicorpCloudResourcemanagerProjectProjectStateDELETING captures enum value "DELETING"
	HashicorpCloudResourcemanagerProjectProjectStateDELETING HashicorpCloudResourcemanagerProjectProjectState = "DELETING"

	// HashicorpCloudResourcemanagerProjectProjectStateDELETED captures enum value "DELETED"
	HashicorpCloudResourcemanagerProjectProjectStateDELETED HashicorpCloudResourcemanagerProjectProjectState = "DELETED"
)

// for schema
var hashicorpCloudResourcemanagerProjectProjectStateEnum []interface{}

func init() {
	var res []HashicorpCloudResourcemanagerProjectProjectState
	if err := json.Unmarshal([]byte(`["UNKNOWN","ACTIVE","DELETING","DELETED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpCloudResourcemanagerProjectProjectStateEnum = append(hashicorpCloudResourcemanagerProjectProjectStateEnum, v)
	}
}

func (m HashicorpCloudResourcemanagerProjectProjectState) validateHashicorpCloudResourcemanagerProjectProjectStateEnum(path, location string, value HashicorpCloudResourcemanagerProjectProjectState) error {
	if err := validate.EnumCase(path, location, value, hashicorpCloudResourcemanagerProjectProjectStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp cloud resourcemanager project project state
func (m HashicorpCloudResourcemanagerProjectProjectState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpCloudResourcemanagerProjectProjectStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp cloud resourcemanager project project state based on context it is used
func (m HashicorpCloudResourcemanagerProjectProjectState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
