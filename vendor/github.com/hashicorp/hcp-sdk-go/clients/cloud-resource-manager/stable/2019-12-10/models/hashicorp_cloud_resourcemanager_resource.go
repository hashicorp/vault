// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	cloud "github.com/hashicorp/hcp-sdk-go/clients/cloud-shared/v1/models"
)

// HashicorpCloudResourcemanagerResource hashicorp cloud resourcemanager resource
//
// swagger:model hashicorp.cloud.resourcemanager.Resource
type HashicorpCloudResourcemanagerResource struct {

	// Geo is the geography where the resource is registered. A resource MAY NOT
	// have a geography associated with it. The currently valid values are: "",
	// "us", and "eu".  This is only available on List responses and is not valid
	// for any creation or update requests.
	Geo string `json:"geo,omitempty"`

	// Link is a link to the resource. This includes the organization
	// and project ID as well as the ID of the resource itself.
	Link *cloud.HashicorpCloudLocationLink `json:"link,omitempty"`

	// ResourceID is the ID of the resource. This is only available on List
	// responses and is not valid for any creation or update requests.
	ResourceID string `json:"resource_id,omitempty"`

	// ResourceName is the name of the resource. This is only available on
	// List responses and is not valid for any creation or update requests.
	ResourceName string `json:"resource_name,omitempty"`
}

// Validate validates this hashicorp cloud resourcemanager resource
func (m *HashicorpCloudResourcemanagerResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HashicorpCloudResourcemanagerResource) validateLink(formats strfmt.Registry) error {
	if swag.IsZero(m.Link) { // not required
		return nil
	}

	if m.Link != nil {
		if err := m.Link.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("link")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("link")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this hashicorp cloud resourcemanager resource based on the context it is used
func (m *HashicorpCloudResourcemanagerResource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateLink(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HashicorpCloudResourcemanagerResource) contextValidateLink(ctx context.Context, formats strfmt.Registry) error {

	if m.Link != nil {

		if swag.IsZero(m.Link) { // not required
			return nil
		}

		if err := m.Link.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("link")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("link")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudResourcemanagerResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudResourcemanagerResource) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudResourcemanagerResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
