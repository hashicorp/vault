// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpCloudResourcemanagerResourceIDResourceType hashicorp cloud resourcemanager resource ID resource type
//
// swagger:model hashicorp.cloud.resourcemanager.ResourceID.ResourceType
type HashicorpCloudResourcemanagerResourceIDResourceType string

func NewHashicorpCloudResourcemanagerResourceIDResourceType(value HashicorpCloudResourcemanagerResourceIDResourceType) *HashicorpCloudResourcemanagerResourceIDResourceType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated HashicorpCloudResourcemanagerResourceIDResourceType.
func (m HashicorpCloudResourcemanagerResourceIDResourceType) Pointer() *HashicorpCloudResourcemanagerResourceIDResourceType {
	return &m
}

const (

	// HashicorpCloudResourcemanagerResourceIDResourceTypeUNKNOWN captures enum value "UNKNOWN"
	HashicorpCloudResourcemanagerResourceIDResourceTypeUNKNOWN HashicorpCloudResourcemanagerResourceIDResourceType = "UNKNOWN"

	// HashicorpCloudResourcemanagerResourceIDResourceTypeORGANIZATION captures enum value "ORGANIZATION"
	HashicorpCloudResourcemanagerResourceIDResourceTypeORGANIZATION HashicorpCloudResourcemanagerResourceIDResourceType = "ORGANIZATION"

	// HashicorpCloudResourcemanagerResourceIDResourceTypePROJECT captures enum value "PROJECT"
	HashicorpCloudResourcemanagerResourceIDResourceTypePROJECT HashicorpCloudResourcemanagerResourceIDResourceType = "PROJECT"
)

// for schema
var hashicorpCloudResourcemanagerResourceIdResourceTypeEnum []interface{}

func init() {
	var res []HashicorpCloudResourcemanagerResourceIDResourceType
	if err := json.Unmarshal([]byte(`["UNKNOWN","ORGANIZATION","PROJECT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpCloudResourcemanagerResourceIdResourceTypeEnum = append(hashicorpCloudResourcemanagerResourceIdResourceTypeEnum, v)
	}
}

func (m HashicorpCloudResourcemanagerResourceIDResourceType) validateHashicorpCloudResourcemanagerResourceIDResourceTypeEnum(path, location string, value HashicorpCloudResourcemanagerResourceIDResourceType) error {
	if err := validate.EnumCase(path, location, value, hashicorpCloudResourcemanagerResourceIdResourceTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp cloud resourcemanager resource ID resource type
func (m HashicorpCloudResourcemanagerResourceIDResourceType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpCloudResourcemanagerResourceIDResourceTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hashicorp cloud resourcemanager resource ID resource type based on context it is used
func (m HashicorpCloudResourcemanagerResourceIDResourceType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
