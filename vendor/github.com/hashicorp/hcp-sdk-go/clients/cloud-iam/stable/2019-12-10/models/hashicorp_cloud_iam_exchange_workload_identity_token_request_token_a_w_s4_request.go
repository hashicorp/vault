// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpCloudIamExchangeWorkloadIdentityTokenRequestTokenAWS4Request AWS4Request represents a AWS4 signed request to an AWS service. See
// https://docs.aws.amazon.com/IAM/latest/UserGuide/signing-elements.html
//
// swagger:model hashicorp.cloud.iam.ExchangeWorkloadIdentityTokenRequest.Token.AWS4Request
type HashicorpCloudIamExchangeWorkloadIdentityTokenRequestTokenAWS4Request struct {

	// body is the HTTP request body.
	Body string `json:"body,omitempty"`

	// headers is the HTTP request headers. This must include:
	//
	// x-amz-date: the date of the request
	//  host: the host of the request, e.g. sts.amazonaws.com
	//  x-hcp-workload-identity-provider: the resource_name of the workload
	//    identity provider the token exchange will be conducted against.
	//  Authorization: The AWS Signature for the request.
	//  X-Amz-Security-Token: The temporary security credentials' session used
	//    to sign the request. Described here:
	//    https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html#temporary-security-credentials
	Headers map[string]string `json:"headers,omitempty"`

	// method is the method of the HTTP request. Example is PUT
	Method string `json:"method,omitempty"`

	// url is the URL of the AWS endpoint being called. For example,
	// https://sts.amazonaws.com?Action=GetCallerIdentity&Version=2011-06-15
	URL string `json:"url,omitempty"`
}

// Validate validates this hashicorp cloud iam exchange workload identity token request token a w s4 request
func (m *HashicorpCloudIamExchangeWorkloadIdentityTokenRequestTokenAWS4Request) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp cloud iam exchange workload identity token request token a w s4 request based on context it is used
func (m *HashicorpCloudIamExchangeWorkloadIdentityTokenRequestTokenAWS4Request) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudIamExchangeWorkloadIdentityTokenRequestTokenAWS4Request) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudIamExchangeWorkloadIdentityTokenRequestTokenAWS4Request) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudIamExchangeWorkloadIdentityTokenRequestTokenAWS4Request
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
