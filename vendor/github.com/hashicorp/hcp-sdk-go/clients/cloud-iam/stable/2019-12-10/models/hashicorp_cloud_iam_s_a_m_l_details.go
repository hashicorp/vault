// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpCloudIamSAMLDetails hashicorp cloud iam s a m l details
//
// swagger:model hashicorp.cloud.iam.SAMLDetails
type HashicorpCloudIamSAMLDetails struct {

	// AssertionConsumerUrl has the Assertion Consumer URL (or Post Back in
	// Auth0 parlance) for the IdP. This is not editable.
	AssertionConsumerURL string `json:"assertion_consumer_url,omitempty"`

	// Certificate holds the signing certificate that will
	// be used to sign all SAML assertions.
	Certificate string `json:"certificate,omitempty"`

	// EmailDomains holds a list of email domains that will be associated with
	// this SAML connection. Users with emails in those domains will be
	// redirected to the SigninUrl above for authentication.
	EmailDomains []string `json:"email_domains"`

	// EntityUrl has the name of the audience the IdP needs to set up on their
	// side. This is not editable.
	EntityID string `json:"entity_id,omitempty"`

	// SigninUrl is the SAML single sign-on URL for the organization
	SigninURL string `json:"signin_url,omitempty"`

	// SignoutUrl is the optional SAML single sign-out URL for
	// the organization. If not present, then we use the
	// signin_url instead.
	SignoutURL string `json:"signout_url,omitempty"`
}

// Validate validates this hashicorp cloud iam s a m l details
func (m *HashicorpCloudIamSAMLDetails) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp cloud iam s a m l details based on context it is used
func (m *HashicorpCloudIamSAMLDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudIamSAMLDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudIamSAMLDetails) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudIamSAMLDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
