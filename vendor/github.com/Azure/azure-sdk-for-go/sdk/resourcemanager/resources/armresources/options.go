//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armresources

// ClientBeginCreateOrUpdateByIDOptions contains the optional parameters for the Client.BeginCreateOrUpdateByID method.
type ClientBeginCreateOrUpdateByIDOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientBeginCreateOrUpdateOptions contains the optional parameters for the Client.BeginCreateOrUpdate method.
type ClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientBeginDeleteByIDOptions contains the optional parameters for the Client.BeginDeleteByID method.
type ClientBeginDeleteByIDOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientBeginDeleteOptions contains the optional parameters for the Client.BeginDelete method.
type ClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientBeginMoveResourcesOptions contains the optional parameters for the Client.BeginMoveResources method.
type ClientBeginMoveResourcesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientBeginUpdateByIDOptions contains the optional parameters for the Client.BeginUpdateByID method.
type ClientBeginUpdateByIDOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientBeginUpdateOptions contains the optional parameters for the Client.BeginUpdate method.
type ClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientBeginValidateMoveResourcesOptions contains the optional parameters for the Client.BeginValidateMoveResources method.
type ClientBeginValidateMoveResourcesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ClientCheckExistenceByIDOptions contains the optional parameters for the Client.CheckExistenceByID method.
type ClientCheckExistenceByIDOptions struct {
	// placeholder for future optional parameters
}

// ClientCheckExistenceOptions contains the optional parameters for the Client.CheckExistence method.
type ClientCheckExistenceOptions struct {
	// placeholder for future optional parameters
}

// ClientGetByIDOptions contains the optional parameters for the Client.GetByID method.
type ClientGetByIDOptions struct {
	// placeholder for future optional parameters
}

// ClientGetOptions contains the optional parameters for the Client.Get method.
type ClientGetOptions struct {
	// placeholder for future optional parameters
}

// ClientListByResourceGroupOptions contains the optional parameters for the Client.NewListByResourceGroupPager method.
type ClientListByResourceGroupOptions struct {
	// Comma-separated list of additional properties to be included in the response. Valid values include createdTime, changedTime
	// and provisioningState. For example, $expand=createdTime,changedTime.
	Expand *string

	// The filter to apply on the operation.
	// The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity,
	// identity/principalId, plan, plan/publisher, plan/product, plan/name,
	// plan/version, and plan/promotionCode.
	// For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'
	// You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.
	// For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)
	// You can link more than one substringof together by adding and/or operators.
	// You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1'
	// and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for
	// each resource are not returned in the results.
	// You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType,
	// plan and plan/publisher and plan/name, identity and identity/principalId.
	Filter *string

	// The number of results to return. If null is passed, returns all resources.
	Top *int32
}

// ClientListOptions contains the optional parameters for the Client.NewListPager method.
type ClientListOptions struct {
	// Comma-separated list of additional properties to be included in the response. Valid values include createdTime, changedTime
	// and provisioningState. For example, $expand=createdTime,changedTime.
	Expand *string

	// The filter to apply on the operation.
	// Filter comparison operators include eq (equals) and ne (not equals) and may be used with the following properties: location,
	// resourceType, name, resourceGroup, identity, identity/principalId, plan,
	// plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.
	// For example, to filter by a resource type, use $filter=resourceType eq 'Microsoft.Network/virtualNetworks'
	// substringof(value, property) can be used to filter for substrings of the following currently-supported properties: name
	// and resourceGroup
	// For example, to get all resources with 'demo' anywhere in the resource name, use $filter=substringof('demo', name)
	// Multiple substring operations can also be combined using and/or operators.
	// Note that any truncated number of results queried via $top may also not be compatible when using a filter.
	// Resources can be filtered by tag names and values. For example, to filter for a tag name and value, use $filter=tagName
	// eq 'tag1' and tagValue eq 'Value1'. Note that when resources are filtered by tag
	// name and value, the original tags for each resource will not be returned in the results. Any list of additional properties
	// queried via $expand may also not be compatible when filtering by tag
	// names/values.
	// For tag names only, resources can be filtered by prefix using the following syntax: $filter=startswith(tagName, 'depart').
	// This query will return all resources with a tag name prefixed by the phrase
	// depart (i.e.department, departureDate, departureTime, etc.)
	// Note that some properties can be combined when filtering resources, which include the following: substringof() and/or resourceType,
	// plan and plan/publisher and plan/name, and identity and
	// identity/principalId.
	Filter *string

	// The number of results to return. If null is passed, returns all resources.
	Top *int32
}

// DeploymentOperationsClientGetAtManagementGroupScopeOptions contains the optional parameters for the DeploymentOperationsClient.GetAtManagementGroupScope
// method.
type DeploymentOperationsClientGetAtManagementGroupScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentOperationsClientGetAtScopeOptions contains the optional parameters for the DeploymentOperationsClient.GetAtScope
// method.
type DeploymentOperationsClientGetAtScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentOperationsClientGetAtSubscriptionScopeOptions contains the optional parameters for the DeploymentOperationsClient.GetAtSubscriptionScope
// method.
type DeploymentOperationsClientGetAtSubscriptionScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentOperationsClientGetAtTenantScopeOptions contains the optional parameters for the DeploymentOperationsClient.GetAtTenantScope
// method.
type DeploymentOperationsClientGetAtTenantScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentOperationsClientGetOptions contains the optional parameters for the DeploymentOperationsClient.Get method.
type DeploymentOperationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DeploymentOperationsClientListAtManagementGroupScopeOptions contains the optional parameters for the DeploymentOperationsClient.NewListAtManagementGroupScopePager
// method.
type DeploymentOperationsClientListAtManagementGroupScopeOptions struct {
	// The number of results to return.
	Top *int32
}

// DeploymentOperationsClientListAtScopeOptions contains the optional parameters for the DeploymentOperationsClient.NewListAtScopePager
// method.
type DeploymentOperationsClientListAtScopeOptions struct {
	// The number of results to return.
	Top *int32
}

// DeploymentOperationsClientListAtSubscriptionScopeOptions contains the optional parameters for the DeploymentOperationsClient.NewListAtSubscriptionScopePager
// method.
type DeploymentOperationsClientListAtSubscriptionScopeOptions struct {
	// The number of results to return.
	Top *int32
}

// DeploymentOperationsClientListAtTenantScopeOptions contains the optional parameters for the DeploymentOperationsClient.NewListAtTenantScopePager
// method.
type DeploymentOperationsClientListAtTenantScopeOptions struct {
	// The number of results to return.
	Top *int32
}

// DeploymentOperationsClientListOptions contains the optional parameters for the DeploymentOperationsClient.NewListPager
// method.
type DeploymentOperationsClientListOptions struct {
	// The number of results to return.
	Top *int32
}

// DeploymentsClientBeginCreateOrUpdateAtManagementGroupScopeOptions contains the optional parameters for the DeploymentsClient.BeginCreateOrUpdateAtManagementGroupScope
// method.
type DeploymentsClientBeginCreateOrUpdateAtManagementGroupScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginCreateOrUpdateAtScopeOptions contains the optional parameters for the DeploymentsClient.BeginCreateOrUpdateAtScope
// method.
type DeploymentsClientBeginCreateOrUpdateAtScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginCreateOrUpdateAtSubscriptionScopeOptions contains the optional parameters for the DeploymentsClient.BeginCreateOrUpdateAtSubscriptionScope
// method.
type DeploymentsClientBeginCreateOrUpdateAtSubscriptionScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginCreateOrUpdateAtTenantScopeOptions contains the optional parameters for the DeploymentsClient.BeginCreateOrUpdateAtTenantScope
// method.
type DeploymentsClientBeginCreateOrUpdateAtTenantScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginCreateOrUpdateOptions contains the optional parameters for the DeploymentsClient.BeginCreateOrUpdate
// method.
type DeploymentsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginDeleteAtManagementGroupScopeOptions contains the optional parameters for the DeploymentsClient.BeginDeleteAtManagementGroupScope
// method.
type DeploymentsClientBeginDeleteAtManagementGroupScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginDeleteAtScopeOptions contains the optional parameters for the DeploymentsClient.BeginDeleteAtScope
// method.
type DeploymentsClientBeginDeleteAtScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginDeleteAtSubscriptionScopeOptions contains the optional parameters for the DeploymentsClient.BeginDeleteAtSubscriptionScope
// method.
type DeploymentsClientBeginDeleteAtSubscriptionScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginDeleteAtTenantScopeOptions contains the optional parameters for the DeploymentsClient.BeginDeleteAtTenantScope
// method.
type DeploymentsClientBeginDeleteAtTenantScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginDeleteOptions contains the optional parameters for the DeploymentsClient.BeginDelete method.
type DeploymentsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginValidateAtManagementGroupScopeOptions contains the optional parameters for the DeploymentsClient.BeginValidateAtManagementGroupScope
// method.
type DeploymentsClientBeginValidateAtManagementGroupScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginValidateAtScopeOptions contains the optional parameters for the DeploymentsClient.BeginValidateAtScope
// method.
type DeploymentsClientBeginValidateAtScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginValidateAtSubscriptionScopeOptions contains the optional parameters for the DeploymentsClient.BeginValidateAtSubscriptionScope
// method.
type DeploymentsClientBeginValidateAtSubscriptionScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginValidateAtTenantScopeOptions contains the optional parameters for the DeploymentsClient.BeginValidateAtTenantScope
// method.
type DeploymentsClientBeginValidateAtTenantScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginValidateOptions contains the optional parameters for the DeploymentsClient.BeginValidate method.
type DeploymentsClientBeginValidateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginWhatIfAtManagementGroupScopeOptions contains the optional parameters for the DeploymentsClient.BeginWhatIfAtManagementGroupScope
// method.
type DeploymentsClientBeginWhatIfAtManagementGroupScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginWhatIfAtSubscriptionScopeOptions contains the optional parameters for the DeploymentsClient.BeginWhatIfAtSubscriptionScope
// method.
type DeploymentsClientBeginWhatIfAtSubscriptionScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginWhatIfAtTenantScopeOptions contains the optional parameters for the DeploymentsClient.BeginWhatIfAtTenantScope
// method.
type DeploymentsClientBeginWhatIfAtTenantScopeOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientBeginWhatIfOptions contains the optional parameters for the DeploymentsClient.BeginWhatIf method.
type DeploymentsClientBeginWhatIfOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DeploymentsClientCalculateTemplateHashOptions contains the optional parameters for the DeploymentsClient.CalculateTemplateHash
// method.
type DeploymentsClientCalculateTemplateHashOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientCancelAtManagementGroupScopeOptions contains the optional parameters for the DeploymentsClient.CancelAtManagementGroupScope
// method.
type DeploymentsClientCancelAtManagementGroupScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientCancelAtScopeOptions contains the optional parameters for the DeploymentsClient.CancelAtScope method.
type DeploymentsClientCancelAtScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientCancelAtSubscriptionScopeOptions contains the optional parameters for the DeploymentsClient.CancelAtSubscriptionScope
// method.
type DeploymentsClientCancelAtSubscriptionScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientCancelAtTenantScopeOptions contains the optional parameters for the DeploymentsClient.CancelAtTenantScope
// method.
type DeploymentsClientCancelAtTenantScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientCancelOptions contains the optional parameters for the DeploymentsClient.Cancel method.
type DeploymentsClientCancelOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientCheckExistenceAtManagementGroupScopeOptions contains the optional parameters for the DeploymentsClient.CheckExistenceAtManagementGroupScope
// method.
type DeploymentsClientCheckExistenceAtManagementGroupScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientCheckExistenceAtScopeOptions contains the optional parameters for the DeploymentsClient.CheckExistenceAtScope
// method.
type DeploymentsClientCheckExistenceAtScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientCheckExistenceAtSubscriptionScopeOptions contains the optional parameters for the DeploymentsClient.CheckExistenceAtSubscriptionScope
// method.
type DeploymentsClientCheckExistenceAtSubscriptionScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientCheckExistenceAtTenantScopeOptions contains the optional parameters for the DeploymentsClient.CheckExistenceAtTenantScope
// method.
type DeploymentsClientCheckExistenceAtTenantScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientCheckExistenceOptions contains the optional parameters for the DeploymentsClient.CheckExistence method.
type DeploymentsClientCheckExistenceOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientExportTemplateAtManagementGroupScopeOptions contains the optional parameters for the DeploymentsClient.ExportTemplateAtManagementGroupScope
// method.
type DeploymentsClientExportTemplateAtManagementGroupScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientExportTemplateAtScopeOptions contains the optional parameters for the DeploymentsClient.ExportTemplateAtScope
// method.
type DeploymentsClientExportTemplateAtScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientExportTemplateAtSubscriptionScopeOptions contains the optional parameters for the DeploymentsClient.ExportTemplateAtSubscriptionScope
// method.
type DeploymentsClientExportTemplateAtSubscriptionScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientExportTemplateAtTenantScopeOptions contains the optional parameters for the DeploymentsClient.ExportTemplateAtTenantScope
// method.
type DeploymentsClientExportTemplateAtTenantScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientExportTemplateOptions contains the optional parameters for the DeploymentsClient.ExportTemplate method.
type DeploymentsClientExportTemplateOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientGetAtManagementGroupScopeOptions contains the optional parameters for the DeploymentsClient.GetAtManagementGroupScope
// method.
type DeploymentsClientGetAtManagementGroupScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientGetAtScopeOptions contains the optional parameters for the DeploymentsClient.GetAtScope method.
type DeploymentsClientGetAtScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientGetAtSubscriptionScopeOptions contains the optional parameters for the DeploymentsClient.GetAtSubscriptionScope
// method.
type DeploymentsClientGetAtSubscriptionScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientGetAtTenantScopeOptions contains the optional parameters for the DeploymentsClient.GetAtTenantScope method.
type DeploymentsClientGetAtTenantScopeOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientGetOptions contains the optional parameters for the DeploymentsClient.Get method.
type DeploymentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientListAtManagementGroupScopeOptions contains the optional parameters for the DeploymentsClient.NewListAtManagementGroupScopePager
// method.
type DeploymentsClientListAtManagementGroupScopeOptions struct {
	// The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.
	Filter *string

	// The number of results to get. If null is passed, returns all deployments.
	Top *int32
}

// DeploymentsClientListAtScopeOptions contains the optional parameters for the DeploymentsClient.NewListAtScopePager method.
type DeploymentsClientListAtScopeOptions struct {
	// The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.
	Filter *string

	// The number of results to get. If null is passed, returns all deployments.
	Top *int32
}

// DeploymentsClientListAtSubscriptionScopeOptions contains the optional parameters for the DeploymentsClient.NewListAtSubscriptionScopePager
// method.
type DeploymentsClientListAtSubscriptionScopeOptions struct {
	// The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.
	Filter *string

	// The number of results to get. If null is passed, returns all deployments.
	Top *int32
}

// DeploymentsClientListAtTenantScopeOptions contains the optional parameters for the DeploymentsClient.NewListAtTenantScopePager
// method.
type DeploymentsClientListAtTenantScopeOptions struct {
	// The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.
	Filter *string

	// The number of results to get. If null is passed, returns all deployments.
	Top *int32
}

// DeploymentsClientListByResourceGroupOptions contains the optional parameters for the DeploymentsClient.NewListByResourceGroupPager
// method.
type DeploymentsClientListByResourceGroupOptions struct {
	// The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.
	Filter *string

	// The number of results to get. If null is passed, returns all deployments.
	Top *int32
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// ProviderResourceTypesClientListOptions contains the optional parameters for the ProviderResourceTypesClient.List method.
type ProviderResourceTypesClientListOptions struct {
	// The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.
	Expand *string
}

// ProvidersClientGetAtTenantScopeOptions contains the optional parameters for the ProvidersClient.GetAtTenantScope method.
type ProvidersClientGetAtTenantScopeOptions struct {
	// The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.
	Expand *string
}

// ProvidersClientGetOptions contains the optional parameters for the ProvidersClient.Get method.
type ProvidersClientGetOptions struct {
	// The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.
	Expand *string
}

// ProvidersClientListAtTenantScopeOptions contains the optional parameters for the ProvidersClient.NewListAtTenantScopePager
// method.
type ProvidersClientListAtTenantScopeOptions struct {
	// The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider
	// metadata. To include property aliases in response, use
	// $expand=resourceTypes/aliases.
	Expand *string
}

// ProvidersClientListOptions contains the optional parameters for the ProvidersClient.NewListPager method.
type ProvidersClientListOptions struct {
	// The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider
	// metadata. To include property aliases in response, use
	// $expand=resourceTypes/aliases.
	Expand *string
}

// ProvidersClientProviderPermissionsOptions contains the optional parameters for the ProvidersClient.ProviderPermissions
// method.
type ProvidersClientProviderPermissionsOptions struct {
	// placeholder for future optional parameters
}

// ProvidersClientRegisterAtManagementGroupScopeOptions contains the optional parameters for the ProvidersClient.RegisterAtManagementGroupScope
// method.
type ProvidersClientRegisterAtManagementGroupScopeOptions struct {
	// placeholder for future optional parameters
}

// ProvidersClientRegisterOptions contains the optional parameters for the ProvidersClient.Register method.
type ProvidersClientRegisterOptions struct {
	// The third party consent for S2S.
	Properties *ProviderRegistrationRequest
}

// ProvidersClientUnregisterOptions contains the optional parameters for the ProvidersClient.Unregister method.
type ProvidersClientUnregisterOptions struct {
	// placeholder for future optional parameters
}

// ResourceGroupsClientBeginDeleteOptions contains the optional parameters for the ResourceGroupsClient.BeginDelete method.
type ResourceGroupsClientBeginDeleteOptions struct {
	// The resource types you want to force delete. Currently, only the following is supported: forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets
	ForceDeletionTypes *string

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ResourceGroupsClientBeginExportTemplateOptions contains the optional parameters for the ResourceGroupsClient.BeginExportTemplate
// method.
type ResourceGroupsClientBeginExportTemplateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ResourceGroupsClientCheckExistenceOptions contains the optional parameters for the ResourceGroupsClient.CheckExistence
// method.
type ResourceGroupsClientCheckExistenceOptions struct {
	// placeholder for future optional parameters
}

// ResourceGroupsClientCreateOrUpdateOptions contains the optional parameters for the ResourceGroupsClient.CreateOrUpdate
// method.
type ResourceGroupsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ResourceGroupsClientGetOptions contains the optional parameters for the ResourceGroupsClient.Get method.
type ResourceGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ResourceGroupsClientListOptions contains the optional parameters for the ResourceGroupsClient.NewListPager method.
type ResourceGroupsClientListOptions struct {
	// The filter to apply on the operation.
	// You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1'
	// and tagValue eq 'Value1'
	Filter *string

	// The number of results to return. If null is passed, returns all resource groups.
	Top *int32
}

// ResourceGroupsClientUpdateOptions contains the optional parameters for the ResourceGroupsClient.Update method.
type ResourceGroupsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// TagsClientCreateOrUpdateAtScopeOptions contains the optional parameters for the TagsClient.CreateOrUpdateAtScope method.
type TagsClientCreateOrUpdateAtScopeOptions struct {
	// placeholder for future optional parameters
}

// TagsClientCreateOrUpdateOptions contains the optional parameters for the TagsClient.CreateOrUpdate method.
type TagsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// TagsClientCreateOrUpdateValueOptions contains the optional parameters for the TagsClient.CreateOrUpdateValue method.
type TagsClientCreateOrUpdateValueOptions struct {
	// placeholder for future optional parameters
}

// TagsClientDeleteAtScopeOptions contains the optional parameters for the TagsClient.DeleteAtScope method.
type TagsClientDeleteAtScopeOptions struct {
	// placeholder for future optional parameters
}

// TagsClientDeleteOptions contains the optional parameters for the TagsClient.Delete method.
type TagsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// TagsClientDeleteValueOptions contains the optional parameters for the TagsClient.DeleteValue method.
type TagsClientDeleteValueOptions struct {
	// placeholder for future optional parameters
}

// TagsClientGetAtScopeOptions contains the optional parameters for the TagsClient.GetAtScope method.
type TagsClientGetAtScopeOptions struct {
	// placeholder for future optional parameters
}

// TagsClientListOptions contains the optional parameters for the TagsClient.NewListPager method.
type TagsClientListOptions struct {
	// placeholder for future optional parameters
}

// TagsClientUpdateAtScopeOptions contains the optional parameters for the TagsClient.UpdateAtScope method.
type TagsClientUpdateAtScopeOptions struct {
	// placeholder for future optional parameters
}
